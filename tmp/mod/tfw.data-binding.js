{"intl":"var _=function(){var D={\"en\":{}},X=require(\"$\").intl;function _(){return X(D,arguments);}_.all=D;return _}();\n","src":"/** @module tfw.data-binding */require( 'tfw.data-binding', function(require, module, exports) { var _=function(){var D={\"en\":{}},X=require(\"$\").intl;function _(){return X(D,arguments);}_.all=D;return _}();\n    /**\n * @module\n *\n * Provide all the functions needed for data-binding.\n *\n * @example\n * var DB = require('tfw.data-binding');\n * DB.propAddClass( widget, 'visible', 'show' );\n */\nrequire(\"polyfill.string\");\nvar $ = require(\"dom\");\nvar ParseUnit = require(\"tfw.css\").parseUnit;\nvar Listeners = require(\"tfw.listeners\");\n\n\nvar ID = '_tfw.data-binding_';\n\nvar converters = {\n    castArray: function(v) {\n        if (Array.isArray( v )) return v;\n        if( v === null || v === undefined ) return [];\n        return [v];\n    },\n    castBoolean: function(v) {\n        if (typeof v === 'boolean') return v;\n        if (typeof v === 'string') {\n            v = v.trim().toLowerCase();\n            if (v == '1' || v == 'true' || v == 'yes') {\n                return true;\n            } else if (v == '0' || v == 'false' || v == 'no') {\n                return false;\n            }\n        }\n        if (typeof v === 'number') {\n            return v ? true : false;\n        }\n        return null;\n    },\n    castColor: function(v) {\n        return \"\" + v;\n    },\n    castDate: function(v) {\n        if( typeof v === 'number' || typeof v === 'string' )\n            return new Date(v);\n        if( v instanceof Date ) return v;\n        return new Date();\n    },\n    castEnum: function( enumeration ) {\n        var lowerCaseEnum = enumeration.map(String.toLowerCase);\n        return function(v) {\n            if (typeof v === 'number') {\n                return enumeration[Math.floor( v ) % enumeration.length];\n            }\n            if (typeof v !== 'string') return enumeration[0];\n            var idx = lowerCaseEnum.indexOf( v.trim().toLowerCase() );\n            if (idx < 0) idx = 0;\n            return enumeration[idx];\n        };\n    },\n    castInteger: function(v) {\n        if (typeof v === 'number') {\n            return Math.floor( v );\n        }\n        if (typeof v === 'boolean') return v ? 1 : 0;\n        if (typeof v === 'string') {\n            return parseInt( v );\n        }\n        return Number.NaN;\n    },\n    castRegexp: function(v) {\n        if (v instanceof RegExp) return v;\n        if (typeof v === 'string' && v.trim().length != 0 ) {\n            try {\n                return new RegExp( v );\n            }\n            // Ignore Regular Expression errors.\n            catch (ex) {\n                console.error(\"[castRegexp] /\" + v + \"/ \", ex);\n            }\n        };\n        return null;\n    },\n    castString: function(v) {\n        if (typeof v === 'string') return v;\n        if (v === undefined || v === null) return '';\n        return JSON.stringify( v );\n    },\n    castStringArray: function(v) {\n        if( Array.isArray( v ) ) return v;\n        if( v === null || v === undefined ) return [];\n        if( typeof v === 'string' ) {\n            return v.split( ',' ).map(String.trim);\n        }\n        return [JSON.stringify( v )];\n    },\n    castUnit: function(v) {\n        if( !v ) return { v: 0, u: 'px' };\n        if( typeof v.v !== 'undefined' ) {\n            v.v = parseFloat( v.v );\n            if( isNaN( v.v ) ) return { v: 0, u: 'px' };\n            if( typeof v.u !== 'string' ) v.u = 'px';\n            return { v: v.v, u: v.u };\n        }\n        if( typeof v === 'number' ) return { v: v, u: 'px' };\n        if( typeof v !== 'string' ) return { v: 0, u: 'px' };\n        return ParseUnit( '' + v );\n    },\n    castValidator: function(v) {\n        if (typeof v === 'function') return v;\n        if (typeof v === 'boolean') return function() { return v; };\n        if (typeof v === 'string' && v.trim().length != 0 ) {\n            try {\n                var rx = new RegExp( v );\n                return rx.test.bind( rx );\n            }\n            // Ignore Regular Expression errors.\n            catch (ex) {\n                console.error(\"[castValidator] /\" + v + \"/ \", ex);\n            }\n        };\n        return function() { return null; };\n    }\n};\n\n/**\n * @param {any|function} val - Default value, or a specific getter (if `val` is a function).\n */\nfunction propCast( caster, obj, att, val ) {\n    var hasSpecialGetter = typeof val === 'function';\n    if( typeof obj[ID] === 'undefined' ) obj[ID] = {};\n    obj[ID][att] = {\n        value: val,\n        event: new Listeners()\n    };\n    var setter;\n    if (typeof caster === 'function') {\n        setter = function(v) {\n            v = caster( v );\n            // If there is a special getter, any set will fire.\n            // Otherwise, we fire only if the value has changed.\n            if( hasSpecialGetter || obj[ID][att].value !== v) {\n                obj[ID][att].value = v;\n                obj[ID][att].event.fire( v, obj, att );\n            }\n        };\n    } else {\n        setter = function(v) {\n            // If there is a special getter, any set will fire.\n            // Otherwise, we fire only if the value has changed.\n            if( hasSpecialGetter || obj[ID][att].value !== v ) {\n                obj[ID][att].value = v;\n                obj[ID][att].event.fire( v, obj, att );\n            }\n        };\n    }\n    var getter = val;\n    if (!hasSpecialGetter) {\n        // Default getter.\n        getter = function() { return obj[ID][att].value; };\n    }\n    Object.defineProperty( obj, att, {\n        get: getter,\n        set: setter,\n        configurable: false,\n        enumerable: true\n    });\n    return exports.bind.bind(exports, obj, att);\n};\n\n/**\n * @export function fire\n *\n * Set a new value and fire the event even if the value has not changed.\n */\nexports.fire = function( obj, att, val ) {\n    var currentValue = obj[att];\n    if( typeof val === 'undefined' ) val = currentValue;\n\n    obj[ID][att].value = val;\n    obj[ID][att].event.fire( obj[att], obj, att );\n};\n\n/**\n * @export function set\n *\n * Set a new value without firing any event.\n */\nexports.set = function( obj, att, val ) {\n    if( typeof obj[ID] === 'undefined' ) obj[ID] = {};\n    if( typeof obj[ID][att] === 'undefined' ) obj[ID][att] = {};\n    obj[ID][att].value = val;\n};\n\n/**\n * @export function get\n *\n * Get a value without firing any event.\n */\nexports.get = function( obj, att ) {\n    if( typeof obj[ID] === 'undefined' ) return undefined;\n    if( typeof obj[ID][att] === 'undefined' ) return undefined;\n    return obj[ID][att].value;\n};\n\n/**\n * Create a property on which we can bind another property.\n * \n * @param {object} obj - Object to which we want to add a property.\n * @param {string} att - Name of the attribute of `obj`.\n * \n */\nexports.prop = propCast.bind( null, null );\n/**\n * @export @function propToggleClass\n * Create an enum attribute which toggles a CSS class when assigned.\n *\n * @param {array|object} values - If this is an array, we will convert\n * it  into an  object.  For instance `[\"show\",  \"hide\"]` will  become\n * `{show: \"show\", hide: \"hide\"}`.\n */\nexports.propToggleClass = function( target, attribute, values, prefix ) {\n    if( typeof prefix !== 'string' ) prefix = '';\n    var convertedValues = {};\n    if (typeof values === 'string') {\n        convertedValues[values] = values;\n    }\n    else if (Array.isArray(values)) {\n        values.forEach(function (itm) {\n            convertedValues[itm] = itm;\n        });\n    }\n    else {\n        convertedValues = values;\n    }\n    propCast( null, target, attribute )(function(v) {\n        var key, val;\n        for( key in convertedValues ) {\n            val = convertedValues[key];\n            if (key == v) {\n                $.addClass( target.element, prefix + val);\n            } else {\n                $.removeClass( target.element, prefix + val);\n            }\n        }\n    });\n};\n/**\n * @export @function propAddClass\n * Create a boolean attribute that toggle a CSS class on the `element` attribute of `target`.\n * If the value id `true`, `className` is added.\n * @example\n * DB.propAddClass( this, 'wide', 'fullscreen' );\n * DB.propAddClass( this, 'wide' );\n */\nexports.propAddClass = function( target, attribute, className ) {\n    if( typeof className === 'undefined' ) className = attribute;\n    propCast( converters.castBoolean, target, attribute )(function(v) {\n        if (v) $.addClass( target.element, className );\n        else $.removeClass( target.element, className );\n    });\n};\n/**\n * @export @function propAddClass\n * Create a boolean attribute that toggle a CSS class on the `element` attribute of `target`.\n * If the value id `true`, `className` is removed.\n * @example\n * DB.propRemoveClass( this, 'visible', 'hide' );\n */\nexports.propRemoveClass = function( target, attribute, className ) {\n    if( typeof className === 'undefined' ) className = attribute;\n    propCast( converters.castBoolean, target, attribute )(function(v) {\n        if (v) $.removeClass( target.element, className );\n        else $.addClass( target.element, className );\n    });\n};\nexports.propArray = propCast.bind( null, converters.castArray );\nexports.propBoolean = propCast.bind( null, converters.castBoolean );\nexports.propColor = propCast.bind( null, converters.castColor );\nexports.propDate = propCast.bind( null, converters.castDate );\nexports.propEnum = function( enumeration ) {\n    return propCast.bind( null, converters.castEnum( enumeration ) );\n};\nexports.propInteger = propCast.bind( null, converters.castInteger );\nexports.propRegexp = propCast.bind( null, converters.castRegexp );\nexports.propString = propCast.bind( null, converters.castString );\nexports.propStringArray = propCast.bind( null, converters.castStringArray );\nexports.propUnit = propCast.bind( null, converters.castUnit );\nexports.propValidator = propCast.bind( null, converters.castValidator );\n\nexports.bind = function( srcObj, srcAtt, dstObj, dstAtt, options ) {\n    if( typeof srcObj[ID] === 'undefined' || typeof srcObj[ID][srcAtt] === 'undefined' ) {\n        console.error( srcAtt + \" is not a bindable property of \", srcObj );\n        throw Error( srcAtt + \" is not a bindable property!\" );\n    }\n\n    if( typeof options === 'undefined' ) options = {};\n    if (options.value) {\n        options.converter = function() {\n            return options.value;\n        };\n    }\n    var lambda = typeof dstObj === 'function' ? dstObj : function(v, obj, att) {\n        dstObj[dstAtt] = typeof options.converter === 'function' ? options.converter(v) : v;\n    };\n    srcObj[ID][srcAtt].event.add( lambda );\n\n    return options;\n};\n\n\nexports.extend = function( def, ext, obj ) {\n    var out = JSON.parse( JSON.stringify( def ) );\n\n    var key, val;\n    for( key in ext ) {\n        if (key.charAt(0) == '$') continue;\n        val = ext[key];\n        if( typeof out[key] === 'undefined' ) {\n            console.error(\"[tfw.data-binding.extend] Undefined argument: `\" + key + \"`!\");\n        } else {\n            out[key] = val;\n        }\n    }\n\n    if (typeof obj !== 'undefined') {\n        for( key in ext ) {\n            if (key.charAt(0) != '$') continue;\n            Object.defineProperty( obj, key, {\n                value: ext[key],\n                writable: false,\n                configurable: false,\n                enumerable: false\n            });\n        }\n        // Setting values.\n        for( key in out ) {\n            if (key.charAt(0) == '$') continue;\n            obj[key] = out[key];\n        }\n    }\n\n    return out;\n};\n\n\nexports.converters = converters;\n\n\n  \nmodule.exports._ = _;\n/**\n * @module tfw.data-binding\n * @see module:$\n * @see module:polyfill.string\n * @see module:dom\n * @see module:tfw.css\n * @see module:tfw.listeners\n\n */\n});","zip":"require(\"tfw.data-binding\",function(n,e,t){function r(n,e,r,o){var i=\"function\"==typeof o;\"undefined\"==typeof e[f]&&(e[f]={}),e[f][r]={value:o,event:new a};var u;u=\"function\"==typeof n?function(t){t=n(t),(i||e[f][r].value!==t)&&(e[f][r].value=t,e[f][r].event.fire(t,e,r))}:function(n){(i||e[f][r].value!==n)&&(e[f][r].value=n,e[f][r].event.fire(n,e,r))};var l=o;return i||(l=function(){return e[f][r].value}),Object.defineProperty(e,r,{get:l,set:u,configurable:!1,enumerable:!0}),t.bind.bind(t,e,r)}var o=function(){function e(){return r(t,arguments)}var t={en:{}},r=n(\"$\").intl;return e.all=t,e}();n(\"polyfill.string\");var i=n(\"dom\"),u=n(\"tfw.css\").parseUnit,a=n(\"tfw.listeners\"),f=\"_tfw.data-binding_\",l={castArray:function(n){return Array.isArray(n)?n:null===n||void 0===n?[]:[n]},castBoolean:function(n){if(\"boolean\"==typeof n)return n;if(\"string\"==typeof n){if(n=n.trim().toLowerCase(),\"1\"==n||\"true\"==n||\"yes\"==n)return!0;if(\"0\"==n||\"false\"==n||\"no\"==n)return!1}return\"number\"==typeof n?!!n:null},castColor:function(n){return\"\"+n},castDate:function(n){return\"number\"==typeof n||\"string\"==typeof n?new Date(n):n instanceof Date?n:new Date},castEnum:function(n){var e=n.map(String.toLowerCase);return function(t){if(\"number\"==typeof t)return n[Math.floor(t)%n.length];if(\"string\"!=typeof t)return n[0];var r=e.indexOf(t.trim().toLowerCase());return r<0&&(r=0),n[r]}},castInteger:function(n){return\"number\"==typeof n?Math.floor(n):\"boolean\"==typeof n?n?1:0:\"string\"==typeof n?parseInt(n):Number.NaN},castRegexp:function(n){if(n instanceof RegExp)return n;if(\"string\"==typeof n&&0!=n.trim().length)try{return new RegExp(n)}catch(e){console.error(\"[castRegexp] /\"+n+\"/ \",e)}return null},castString:function(n){return\"string\"==typeof n?n:void 0===n||null===n?\"\":JSON.stringify(n)},castStringArray:function(n){return Array.isArray(n)?n:null===n||void 0===n?[]:\"string\"==typeof n?n.split(\",\").map(String.trim):[JSON.stringify(n)]},castUnit:function(n){return n?\"undefined\"!=typeof n.v?(n.v=parseFloat(n.v),isNaN(n.v)?{v:0,u:\"px\"}:(\"string\"!=typeof n.u&&(n.u=\"px\"),{v:n.v,u:n.u})):\"number\"==typeof n?{v:n,u:\"px\"}:\"string\"!=typeof n?{v:0,u:\"px\"}:u(\"\"+n):{v:0,u:\"px\"}},castValidator:function(n){if(\"function\"==typeof n)return n;if(\"boolean\"==typeof n)return function(){return n};if(\"string\"==typeof n&&0!=n.trim().length)try{var e=new RegExp(n);return e.test.bind(e)}catch(e){console.error(\"[castValidator] /\"+n+\"/ \",e)}return function(){return null}}};t.fire=function(n,e,t){var r=n[e];\"undefined\"==typeof t&&(t=r),n[f][e].value=t,n[f][e].event.fire(n[e],n,e)},t.set=function(n,e,t){\"undefined\"==typeof n[f]&&(n[f]={}),\"undefined\"==typeof n[f][e]&&(n[f][e]={}),n[f][e].value=t},t.get=function(n,e){if(\"undefined\"!=typeof n[f]&&\"undefined\"!=typeof n[f][e])return n[f][e].value},t.prop=r.bind(null,null),t.propToggleClass=function(n,e,t,o){\"string\"!=typeof o&&(o=\"\");var u={};\"string\"==typeof t?u[t]=t:Array.isArray(t)?t.forEach(function(n){u[n]=n}):u=t,r(null,n,e)(function(e){var t,r;for(t in u)r=u[t],t==e?i.addClass(n.element,o+r):i.removeClass(n.element,o+r)})},t.propAddClass=function(n,e,t){\"undefined\"==typeof t&&(t=e),r(l.castBoolean,n,e)(function(e){e?i.addClass(n.element,t):i.removeClass(n.element,t)})},t.propRemoveClass=function(n,e,t){\"undefined\"==typeof t&&(t=e),r(l.castBoolean,n,e)(function(e){e?i.removeClass(n.element,t):i.addClass(n.element,t)})},t.propArray=r.bind(null,l.castArray),t.propBoolean=r.bind(null,l.castBoolean),t.propColor=r.bind(null,l.castColor),t.propDate=r.bind(null,l.castDate),t.propEnum=function(n){return r.bind(null,l.castEnum(n))},t.propInteger=r.bind(null,l.castInteger),t.propRegexp=r.bind(null,l.castRegexp),t.propString=r.bind(null,l.castString),t.propStringArray=r.bind(null,l.castStringArray),t.propUnit=r.bind(null,l.castUnit),t.propValidator=r.bind(null,l.castValidator),t.bind=function(n,e,t,r,o){if(\"undefined\"==typeof n[f]||\"undefined\"==typeof n[f][e])throw console.error(e+\" is not a bindable property of \",n),Error(e+\" is not a bindable property!\");\"undefined\"==typeof o&&(o={}),o.value&&(o.converter=function(){return o.value});var i=\"function\"==typeof t?t:function(n,e,i){t[r]=\"function\"==typeof o.converter?o.converter(n):n};return n[f][e].event.add(i),o},t.extend=function(n,e,t){var r,o,i=JSON.parse(JSON.stringify(n));for(r in e)\"$\"!=r.charAt(0)&&(o=e[r],\"undefined\"==typeof i[r]?console.error(\"[tfw.data-binding.extend] Undefined argument: `\"+r+\"`!\"):i[r]=o);if(\"undefined\"!=typeof t){for(r in e)\"$\"==r.charAt(0)&&Object.defineProperty(t,r,{value:e[r],writable:!1,configurable:!1,enumerable:!1});for(r in i)\"$\"!=r.charAt(0)&&(t[r]=i[r])}return i},t.converters=l,e.exports._=o});\n//# sourceMappingURL=tfw.data-binding.js.map","map":{"version":3,"file":"tfw.data-binding.js.map","sources":["tfw.data-binding.js"],"sourcesContent":["/** @module tfw.data-binding */require( 'tfw.data-binding', function(require, module, exports) { var _=function(){var D={\"en\":{}},X=require(\"$\").intl;function _(){return X(D,arguments);}_.all=D;return _}();\n    /**\n * @module\n *\n * Provide all the functions needed for data-binding.\n *\n * @example\n * var DB = require('tfw.data-binding');\n * DB.propAddClass( widget, 'visible', 'show' );\n */\nrequire(\"polyfill.string\");\nvar $ = require(\"dom\");\nvar ParseUnit = require(\"tfw.css\").parseUnit;\nvar Listeners = require(\"tfw.listeners\");\n\n\nvar ID = '_tfw.data-binding_';\n\nvar converters = {\n    castArray: function(v) {\n        if (Array.isArray( v )) return v;\n        if( v === null || v === undefined ) return [];\n        return [v];\n    },\n    castBoolean: function(v) {\n        if (typeof v === 'boolean') return v;\n        if (typeof v === 'string') {\n            v = v.trim().toLowerCase();\n            if (v == '1' || v == 'true' || v == 'yes') {\n                return true;\n            } else if (v == '0' || v == 'false' || v == 'no') {\n                return false;\n            }\n        }\n        if (typeof v === 'number') {\n            return v ? true : false;\n        }\n        return null;\n    },\n    castColor: function(v) {\n        return \"\" + v;\n    },\n    castDate: function(v) {\n        if( typeof v === 'number' || typeof v === 'string' )\n            return new Date(v);\n        if( v instanceof Date ) return v;\n        return new Date();\n    },\n    castEnum: function( enumeration ) {\n        var lowerCaseEnum = enumeration.map(String.toLowerCase);\n        return function(v) {\n            if (typeof v === 'number') {\n                return enumeration[Math.floor( v ) % enumeration.length];\n            }\n            if (typeof v !== 'string') return enumeration[0];\n            var idx = lowerCaseEnum.indexOf( v.trim().toLowerCase() );\n            if (idx < 0) idx = 0;\n            return enumeration[idx];\n        };\n    },\n    castInteger: function(v) {\n        if (typeof v === 'number') {\n            return Math.floor( v );\n        }\n        if (typeof v === 'boolean') return v ? 1 : 0;\n        if (typeof v === 'string') {\n            return parseInt( v );\n        }\n        return Number.NaN;\n    },\n    castRegexp: function(v) {\n        if (v instanceof RegExp) return v;\n        if (typeof v === 'string' && v.trim().length != 0 ) {\n            try {\n                return new RegExp( v );\n            }\n            // Ignore Regular Expression errors.\n            catch (ex) {\n                console.error(\"[castRegexp] /\" + v + \"/ \", ex);\n            }\n        };\n        return null;\n    },\n    castString: function(v) {\n        if (typeof v === 'string') return v;\n        if (v === undefined || v === null) return '';\n        return JSON.stringify( v );\n    },\n    castStringArray: function(v) {\n        if( Array.isArray( v ) ) return v;\n        if( v === null || v === undefined ) return [];\n        if( typeof v === 'string' ) {\n            return v.split( ',' ).map(String.trim);\n        }\n        return [JSON.stringify( v )];\n    },\n    castUnit: function(v) {\n        if( !v ) return { v: 0, u: 'px' };\n        if( typeof v.v !== 'undefined' ) {\n            v.v = parseFloat( v.v );\n            if( isNaN( v.v ) ) return { v: 0, u: 'px' };\n            if( typeof v.u !== 'string' ) v.u = 'px';\n            return { v: v.v, u: v.u };\n        }\n        if( typeof v === 'number' ) return { v: v, u: 'px' };\n        if( typeof v !== 'string' ) return { v: 0, u: 'px' };\n        return ParseUnit( '' + v );\n    },\n    castValidator: function(v) {\n        if (typeof v === 'function') return v;\n        if (typeof v === 'boolean') return function() { return v; };\n        if (typeof v === 'string' && v.trim().length != 0 ) {\n            try {\n                var rx = new RegExp( v );\n                return rx.test.bind( rx );\n            }\n            // Ignore Regular Expression errors.\n            catch (ex) {\n                console.error(\"[castValidator] /\" + v + \"/ \", ex);\n            }\n        };\n        return function() { return null; };\n    }\n};\n\n/**\n * @param {any|function} val - Default value, or a specific getter (if `val` is a function).\n */\nfunction propCast( caster, obj, att, val ) {\n    var hasSpecialGetter = typeof val === 'function';\n    if( typeof obj[ID] === 'undefined' ) obj[ID] = {};\n    obj[ID][att] = {\n        value: val,\n        event: new Listeners()\n    };\n    var setter;\n    if (typeof caster === 'function') {\n        setter = function(v) {\n            v = caster( v );\n            // If there is a special getter, any set will fire.\n            // Otherwise, we fire only if the value has changed.\n            if( hasSpecialGetter || obj[ID][att].value !== v) {\n                obj[ID][att].value = v;\n                obj[ID][att].event.fire( v, obj, att );\n            }\n        };\n    } else {\n        setter = function(v) {\n            // If there is a special getter, any set will fire.\n            // Otherwise, we fire only if the value has changed.\n            if( hasSpecialGetter || obj[ID][att].value !== v ) {\n                obj[ID][att].value = v;\n                obj[ID][att].event.fire( v, obj, att );\n            }\n        };\n    }\n    var getter = val;\n    if (!hasSpecialGetter) {\n        // Default getter.\n        getter = function() { return obj[ID][att].value; };\n    }\n    Object.defineProperty( obj, att, {\n        get: getter,\n        set: setter,\n        configurable: false,\n        enumerable: true\n    });\n    return exports.bind.bind(exports, obj, att);\n};\n\n/**\n * @export function fire\n *\n * Set a new value and fire the event even if the value has not changed.\n */\nexports.fire = function( obj, att, val ) {\n    var currentValue = obj[att];\n    if( typeof val === 'undefined' ) val = currentValue;\n\n    obj[ID][att].value = val;\n    obj[ID][att].event.fire( obj[att], obj, att );\n};\n\n/**\n * @export function set\n *\n * Set a new value without firing any event.\n */\nexports.set = function( obj, att, val ) {\n    if( typeof obj[ID] === 'undefined' ) obj[ID] = {};\n    if( typeof obj[ID][att] === 'undefined' ) obj[ID][att] = {};\n    obj[ID][att].value = val;\n};\n\n/**\n * @export function get\n *\n * Get a value without firing any event.\n */\nexports.get = function( obj, att ) {\n    if( typeof obj[ID] === 'undefined' ) return undefined;\n    if( typeof obj[ID][att] === 'undefined' ) return undefined;\n    return obj[ID][att].value;\n};\n\n/**\n * Create a property on which we can bind another property.\n * \n * @param {object} obj - Object to which we want to add a property.\n * @param {string} att - Name of the attribute of `obj`.\n * \n */\nexports.prop = propCast.bind( null, null );\n/**\n * @export @function propToggleClass\n * Create an enum attribute which toggles a CSS class when assigned.\n *\n * @param {array|object} values - If this is an array, we will convert\n * it  into an  object.  For instance `[\"show\",  \"hide\"]` will  become\n * `{show: \"show\", hide: \"hide\"}`.\n */\nexports.propToggleClass = function( target, attribute, values, prefix ) {\n    if( typeof prefix !== 'string' ) prefix = '';\n    var convertedValues = {};\n    if (typeof values === 'string') {\n        convertedValues[values] = values;\n    }\n    else if (Array.isArray(values)) {\n        values.forEach(function (itm) {\n            convertedValues[itm] = itm;\n        });\n    }\n    else {\n        convertedValues = values;\n    }\n    propCast( null, target, attribute )(function(v) {\n        var key, val;\n        for( key in convertedValues ) {\n            val = convertedValues[key];\n            if (key == v) {\n                $.addClass( target.element, prefix + val);\n            } else {\n                $.removeClass( target.element, prefix + val);\n            }\n        }\n    });\n};\n/**\n * @export @function propAddClass\n * Create a boolean attribute that toggle a CSS class on the `element` attribute of `target`.\n * If the value id `true`, `className` is added.\n * @example\n * DB.propAddClass( this, 'wide', 'fullscreen' );\n * DB.propAddClass( this, 'wide' );\n */\nexports.propAddClass = function( target, attribute, className ) {\n    if( typeof className === 'undefined' ) className = attribute;\n    propCast( converters.castBoolean, target, attribute )(function(v) {\n        if (v) $.addClass( target.element, className );\n        else $.removeClass( target.element, className );\n    });\n};\n/**\n * @export @function propAddClass\n * Create a boolean attribute that toggle a CSS class on the `element` attribute of `target`.\n * If the value id `true`, `className` is removed.\n * @example\n * DB.propRemoveClass( this, 'visible', 'hide' );\n */\nexports.propRemoveClass = function( target, attribute, className ) {\n    if( typeof className === 'undefined' ) className = attribute;\n    propCast( converters.castBoolean, target, attribute )(function(v) {\n        if (v) $.removeClass( target.element, className );\n        else $.addClass( target.element, className );\n    });\n};\nexports.propArray = propCast.bind( null, converters.castArray );\nexports.propBoolean = propCast.bind( null, converters.castBoolean );\nexports.propColor = propCast.bind( null, converters.castColor );\nexports.propDate = propCast.bind( null, converters.castDate );\nexports.propEnum = function( enumeration ) {\n    return propCast.bind( null, converters.castEnum( enumeration ) );\n};\nexports.propInteger = propCast.bind( null, converters.castInteger );\nexports.propRegexp = propCast.bind( null, converters.castRegexp );\nexports.propString = propCast.bind( null, converters.castString );\nexports.propStringArray = propCast.bind( null, converters.castStringArray );\nexports.propUnit = propCast.bind( null, converters.castUnit );\nexports.propValidator = propCast.bind( null, converters.castValidator );\n\nexports.bind = function( srcObj, srcAtt, dstObj, dstAtt, options ) {\n    if( typeof srcObj[ID] === 'undefined' || typeof srcObj[ID][srcAtt] === 'undefined' ) {\n        console.error( srcAtt + \" is not a bindable property of \", srcObj );\n        throw Error( srcAtt + \" is not a bindable property!\" );\n    }\n\n    if( typeof options === 'undefined' ) options = {};\n    if (options.value) {\n        options.converter = function() {\n            return options.value;\n        };\n    }\n    var lambda = typeof dstObj === 'function' ? dstObj : function(v, obj, att) {\n        dstObj[dstAtt] = typeof options.converter === 'function' ? options.converter(v) : v;\n    };\n    srcObj[ID][srcAtt].event.add( lambda );\n\n    return options;\n};\n\n\nexports.extend = function( def, ext, obj ) {\n    var out = JSON.parse( JSON.stringify( def ) );\n\n    var key, val;\n    for( key in ext ) {\n        if (key.charAt(0) == '$') continue;\n        val = ext[key];\n        if( typeof out[key] === 'undefined' ) {\n            console.error(\"[tfw.data-binding.extend] Undefined argument: `\" + key + \"`!\");\n        } else {\n            out[key] = val;\n        }\n    }\n\n    if (typeof obj !== 'undefined') {\n        for( key in ext ) {\n            if (key.charAt(0) != '$') continue;\n            Object.defineProperty( obj, key, {\n                value: ext[key],\n                writable: false,\n                configurable: false,\n                enumerable: false\n            });\n        }\n        // Setting values.\n        for( key in out ) {\n            if (key.charAt(0) == '$') continue;\n            obj[key] = out[key];\n        }\n    }\n\n    return out;\n};\n\n\nexports.converters = converters;\n\n\n  \nmodule.exports._ = _;\n});"],"names":["require","module","exports","propCast","caster","obj","att","val","hasSpecialGetter","ID","value","event","Listeners","setter","v","fire","getter","Object","defineProperty","get","set","configurable","enumerable","bind","_","X","D","arguments","en","intl","all","$","ParseUnit","parseUnit","converters","castArray","Array","isArray","undefined","castBoolean","trim","toLowerCase","castColor","castDate","Date","castEnum","enumeration","lowerCaseEnum","map","String","Math","floor","length","idx","indexOf","castInteger","parseInt","Number","NaN","castRegexp","RegExp","ex","console","error","castString","JSON","stringify","castStringArray","split","castUnit","parseFloat","isNaN","u","castValidator","rx","test","currentValue","prop","propToggleClass","target","attribute","values","prefix","convertedValues","forEach","itm","key","addClass","element","removeClass","propAddClass","className","propRemoveClass","propArray","propBoolean","propColor","propDate","propEnum","propInteger","propRegexp","propString","propStringArray","propUnit","propValidator","srcObj","srcAtt","dstObj","dstAtt","options","Error","converter","lambda","add","extend","def","ext","out","parse","charAt","writable"],"mappings":"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"},"dependencies":["mod/$","mod/polyfill.string","mod/dom","mod/tfw.css","mod/tfw.listeners"]}