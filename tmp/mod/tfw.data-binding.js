{"intl":"var _=function(){var D={\"en\":{}},X=require(\"$\").intl;function _(){return X(D,arguments);}_.all=D;return _}();\n","src":"/** @module tfw.data-binding */require( 'tfw.data-binding', function(require, module, exports) { var _=function(){var D={\"en\":{}},X=require(\"$\").intl;function _(){return X(D,arguments);}_.all=D;return _}();\n    /**\n * @module\n *\n * Provide all the functions needed for data-binding.\n *\n * @example\n * var DB = require('tfw.data-binding');\n * DB.propAddClass( widget, 'visible', 'show' );\n */\nrequire(\"polyfill.string\");\nvar $ = require(\"dom\");\nvar ParseUnit = require(\"tfw.css\").parseUnit;\nvar Listeners = require(\"tfw.listeners\");\n\n\nvar ID = '_tfw.data-binding_';\n\nvar converters = {\n    castArray: function(v) {\n        if (Array.isArray( v )) return v;\n        if( v === null || v === undefined ) return [];\n        return [v];\n    },\n    castBoolean: function(v) {\n        if (typeof v === 'boolean') return v;\n        if (typeof v === 'string') {\n            v = v.trim().toLowerCase();\n            if (v == '0' || v == 'false' || v == 'no' || v == 'null' || v == 'undefined') {\n                return false;\n            }\n            return true;\n        }\n        if (typeof v === 'number') {\n            return v != 0 ? true : false;\n        }\n        return null;\n    },\n    castColor: function(v) {\n        return \"\" + v;\n    },\n    castDate: function(v) {\n        if( typeof v === 'number' || typeof v === 'string' )\n            return new Date(v);\n        if( v instanceof Date ) return v;\n        return new Date();\n    },\n    castEnum: function( enumeration ) {\n        var lowerCaseEnum = enumeration.map(String.toLowerCase);\n        return function(v) {\n            if (typeof v === 'number') {\n                return enumeration[Math.floor( v ) % enumeration.length];\n            }\n            if (typeof v !== 'string') return enumeration[0];\n            var idx = lowerCaseEnum.indexOf( v.trim().toLowerCase() );\n            if (idx < 0) idx = 0;\n            return enumeration[idx];\n        };\n    },\n    castInteger: function(v) {\n        if (typeof v === 'number') {\n            return Math.floor( v );\n        }\n        if (typeof v === 'boolean') return v ? 1 : 0;\n        if (typeof v === 'string') {\n            return parseInt( v );\n        }\n        return Number.NaN;\n    },\n    castFloat: function(v) {\n        if (typeof v === 'number') {\n            return v;\n        }\n        if (typeof v === 'boolean') return v ? 1 : 0;\n        if (typeof v === 'string') {\n            return parseFloat( v );\n        }\n        return Number.NaN;\n    },\n    castRegexp: function(v) {\n        if (v instanceof RegExp) return v;\n        if (typeof v === 'string' && v.trim().length != 0 ) {\n            try {\n                return new RegExp( v );\n            }\n            // Ignore Regular Expression errors.\n            catch (ex) {\n                console.error(\"[castRegexp] /\" + v + \"/ \", ex);\n            }\n        };\n        return null;\n    },\n    castString: function(v) {\n        if (typeof v === 'string') return v;\n        if (v === undefined || v === null) return '';\n        return JSON.stringify( v );\n    },\n    castStringArray: function(v) {\n        if( Array.isArray( v ) ) return v;\n        if( v === null || v === undefined ) return [];\n        if( typeof v === 'string' ) {\n            return v.split( ',' ).map(String.trim);\n        }\n        return [JSON.stringify( v )];\n    },\n    castUnit: function(v) {\n        if( !v ) return { v: 0, u: 'px' };\n        if( typeof v.v !== 'undefined' ) {\n            v.v = parseFloat( v.v );\n            if( isNaN( v.v ) ) return { v: 0, u: 'px' };\n            if( typeof v.u !== 'string' ) v.u = 'px';\n            return { v: v.v, u: v.u };\n        }\n        if( typeof v === 'number' ) return { v: v, u: 'px' };\n        if( typeof v !== 'string' ) return { v: 0, u: 'px' };\n        return ParseUnit( '' + v );\n    },\n    castValidator: function(v) {\n        if (typeof v === 'function') return v;\n        if (typeof v === 'boolean') return function() { return v; };\n        if (typeof v === 'string' && v.trim().length != 0 ) {\n            try {\n                var rx = new RegExp( v );\n                return rx.test.bind( rx );\n            }\n            // Ignore Regular Expression errors.\n            catch (ex) {\n                console.error(\"[castValidator] /\" + v + \"/ \", ex);\n            }\n        };\n        return function() { return null; };\n    }\n};\n\n/**\n * @param {any|function} val - Default value, or a specific getter (if `val` is a function).\n */\nfunction propCast( caster, obj, att, val ) {\n    var hasSpecialGetter = typeof val === 'function';\n    if( typeof obj[ID] === 'undefined' ) obj[ID] = {};\n    obj[ID][att] = {\n        value: val,\n        event: new Listeners()\n    };\n    var setter;\n    if (typeof caster === 'function') {\n        setter = function(v) {\n            v = caster( v );\n            // If there is a special getter, any set will fire.\n            // Otherwise, we fire only if the value has changed.\n            if( hasSpecialGetter || obj[ID][att].value !== v) {\n                obj[ID][att].value = v;\n                obj[ID][att].event.fire( v, obj, att );\n            }\n        };\n    } else {\n        setter = function(v) {\n            // If there is a special getter, any set will fire.\n            // Otherwise, we fire only if the value has changed.\n            if( hasSpecialGetter || obj[ID][att].value !== v ) {\n                obj[ID][att].value = v;\n                obj[ID][att].event.fire( v, obj, att );\n            }\n        };\n    }\n    var getter = val;\n    if (!hasSpecialGetter) {\n        // Default getter.\n        getter = function() { return obj[ID][att].value; };\n    }\n    Object.defineProperty( obj, att, {\n        get: getter,\n        set: setter,\n        configurable: false,\n        enumerable: true\n    });\n    return exports.bind.bind(exports, obj, att);\n};\n\n/**\n * @export function fire\n *\n * Set a new value and fire the event even if the value has not changed.\n */\nexports.fire = function( obj, att, val ) {\n    var currentValue = obj[att];\n    if( typeof val === 'undefined' ) val = currentValue;\n\n    obj[ID][att].value = val;\n    obj[ID][att].event.fire( obj[att], obj, att );\n};\n\n/**\n * @export function set\n *\n * Set a new value without firing any event.\n */\nexports.set = function( obj, att, val ) {\n    if( typeof obj[ID] === 'undefined' ) obj[ID] = {};\n    if( typeof obj[ID][att] === 'undefined' ) obj[ID][att] = {};\n    obj[ID][att].value = val;\n};\n\n/**\n * @export function get\n *\n * Get a value without firing any event.\n */\nexports.get = function( obj, att ) {\n    if( typeof obj[ID] === 'undefined' ) return undefined;\n    if( typeof obj[ID][att] === 'undefined' ) return undefined;\n    return obj[ID][att].value;\n};\n\n/**\n * @export function readOnly\n * @param {object} obj - Object to which we want to add a read only attribute.\n * @param {string} name - Attribute's name.\n * @param {function} value - Function to execute anytime someone gets the value of this attribute.\n * @param {any} value - Constatn value of this attribute.\n */\nexports.readOnly = function( obj, name, value ) {\n    if( typeof att === 'function' ) {\n        Object.defineProperty( obj, name, {\n            get: value,\n            set: function() {},\n            configurable: false,\n            enumerable: true\n        });\n    } else {\n        Object.defineProperty( obj, name, {\n            value: value,\n            writtable: false,\n            configurable: false,\n            enumerable: true\n        });\n    }\n};\n\n/**\n * Create a property on which we can bind another property.\n *\n * @param {object} obj - Object to which we want to add a property.\n * @param {string} att - Name of the attribute of `obj`.\n *\n */\nexports.prop = propCast.bind( null, null );\n/**\n * @export @function propToggleClass\n * Create an enum attribute which toggles a CSS class when assigned.\n *\n * @param {array|object} values - If this is an array, we will convert\n * it  into an  object.  For instance `[\"show\",  \"hide\"]` will  become\n * `{show: \"show\", hide: \"hide\"}`.\n */\nexports.propToggleClass = function( target, attribute, values, prefix ) {\n    if( typeof prefix !== 'string' ) prefix = '';\n    var convertedValues = {};\n    if (typeof values === 'string') {\n        convertedValues[values] = values;\n    }\n    else if (Array.isArray(values)) {\n        values.forEach(function (itm) {\n            convertedValues[itm] = itm;\n        });\n    }\n    else {\n        convertedValues = values;\n    }\n    propCast( null, target, attribute )(function(v) {\n        var key, val;\n        for( key in convertedValues ) {\n            val = convertedValues[key];\n            if (key == v) {\n                $.addClass( target.element, prefix + val);\n            } else {\n                $.removeClass( target.element, prefix + val);\n            }\n        }\n    });\n};\n/**\n * @export @function propAddClass\n * Create a boolean attribute that toggle a CSS class on the `element` attribute of `target`.\n * If the value id `true`, `className` is added.\n * @example\n * DB.propAddClass( this, 'wide', 'fullscreen' );\n * DB.propAddClass( this, 'wide' );\n */\nexports.propAddClass = function( target, attribute, className ) {\n    if( typeof className === 'undefined' ) className = attribute;\n    propCast( converters.castBoolean, target, attribute )(function(v) {\n        if (v) $.addClass( target.element, className );\n        else $.removeClass( target.element, className );\n    });\n};\n/**\n * @export @function propAddClass\n * Create a boolean attribute that toggle a CSS class on the `element` attribute of `target`.\n * If the value id `true`, `className` is removed.\n * @example\n * DB.propRemoveClass( this, 'visible', 'hide' );\n */\nexports.propRemoveClass = function( target, attribute, className ) {\n    if( typeof className === 'undefined' ) className = attribute;\n    propCast( converters.castBoolean, target, attribute )(function(v) {\n        if (v) $.removeClass( target.element, className );\n        else $.addClass( target.element, className );\n    });\n};\nexports.propArray = propCast.bind( null, converters.castArray );\nexports.propBoolean = propCast.bind( null, converters.castBoolean );\nexports.propColor = propCast.bind( null, converters.castColor );\nexports.propDate = propCast.bind( null, converters.castDate );\nexports.propEnum = function( enumeration ) {\n    return propCast.bind( null, converters.castEnum( enumeration ) );\n};\nexports.propInteger = propCast.bind( null, converters.castInteger );\nexports.propFloat = propCast.bind( null, converters.castFloat );\nexports.propRegexp = propCast.bind( null, converters.castRegexp );\nexports.propString = propCast.bind( null, converters.castString );\nexports.propStringArray = propCast.bind( null, converters.castStringArray );\nexports.propUnit = propCast.bind( null, converters.castUnit );\nexports.propValidator = propCast.bind( null, converters.castValidator );\n\nexports.bind = function( srcObj, srcAtt, dstObj, dstAtt, options ) {\n    if( typeof srcObj[ID] === 'undefined' || typeof srcObj[ID][srcAtt] === 'undefined' ) {\n        console.error( JSON.stringify( srcAtt ) + \" is not a bindable property!\", {\n            srcObj: srcObj,\n            srcAtt: srcAtt,\n            dstObj: dstObj,\n            dstAtt: dstAtt,\n            options: options\n        });\n        throw Error( JSON.stringify( srcAtt ) + \" is not a bindable property!\" );\n    }\n\n    if( typeof options === 'undefined' ) options = {};\n    if (options.value) {\n        options.converter = function() {\n            return options.value;\n        };\n    }\n    var lambda = typeof dstObj === 'function' ? dstObj : function(v, obj, att) {\n        dstObj[dstAtt] = typeof options.converter === 'function' ? options.converter(v) : v;\n    };\n    srcObj[ID][srcAtt].event.add( lambda );\n\n    return options;\n};\n\n\nexports.extend = function( def, ext, obj ) {\n    var out = JSON.parse( JSON.stringify( def ) );\n\n    var key, val;\n    for( key in ext ) {\n        if (key.charAt(0) == '$') continue;\n        val = ext[key];\n        if( typeof out[key] === 'undefined' ) {\n            console.error(\"[tfw.data-binding.extend] Undefined argument: `\" + key + \"`!\");\n        } else {\n            out[key] = val;\n        }\n    }\n\n    if (typeof obj !== 'undefined') {\n        for( key in ext ) {\n            if (key.charAt(0) != '$') continue;\n            Object.defineProperty( obj, key, {\n                value: ext[key],\n                writable: false,\n                configurable: false,\n                enumerable: false\n            });\n        }\n        // Setting values.\n        for( key in out ) {\n            if (key.charAt(0) == '$') continue;\n            obj[key] = out[key];\n        }\n    }\n\n    return out;\n};\n\n\nexports.converters = converters;\n\n\n  \nmodule.exports._ = _;\n/**\n * @module tfw.data-binding\n * @see module:$\n * @see module:polyfill.string\n * @see module:dom\n * @see module:tfw.css\n * @see module:tfw.listeners\n\n */\n});","zip":"require(\"tfw.data-binding\",function(n,t,e){function r(n,t,r,o){var i=\"function\"==typeof o;void 0===t[l]&&(t[l]={}),t[l][r]={value:o,event:new u};var a;a=\"function\"==typeof n?function(e){e=n(e),(i||t[l][r].value!==e)&&(t[l][r].value=e,t[l][r].event.fire(e,t,r))}:function(n){(i||t[l][r].value!==n)&&(t[l][r].value=n,t[l][r].event.fire(n,t,r))};var f=o;return i||(f=function(){return t[l][r].value}),Object.defineProperty(t,r,{get:f,set:a,configurable:!1,enumerable:!0}),e.bind.bind(e,t,r)}var o=function(){function t(){return r(e,arguments)}var e={en:{}},r=n(\"$\").intl;return t.all=e,t}();n(\"polyfill.string\");var i=n(\"dom\"),a=n(\"tfw.css\").parseUnit,u=n(\"tfw.listeners\"),l=\"_tfw.data-binding_\",f={castArray:function(n){return Array.isArray(n)?n:null===n||void 0===n?[]:[n]},castBoolean:function(n){return\"boolean\"==typeof n?n:\"string\"==typeof n?\"0\"!=(n=n.trim().toLowerCase())&&\"false\"!=n&&\"no\"!=n&&\"null\"!=n&&\"undefined\"!=n:\"number\"==typeof n?0!=n:null},castColor:function(n){return\"\"+n},castDate:function(n){return\"number\"==typeof n||\"string\"==typeof n?new Date(n):n instanceof Date?n:new Date},castEnum:function(n){var t=n.map(String.toLowerCase);return function(e){if(\"number\"==typeof e)return n[Math.floor(e)%n.length];if(\"string\"!=typeof e)return n[0];var r=t.indexOf(e.trim().toLowerCase());return r<0&&(r=0),n[r]}},castInteger:function(n){return\"number\"==typeof n?Math.floor(n):\"boolean\"==typeof n?n?1:0:\"string\"==typeof n?parseInt(n):Number.NaN},castFloat:function(n){return\"number\"==typeof n?n:\"boolean\"==typeof n?n?1:0:\"string\"==typeof n?parseFloat(n):Number.NaN},castRegexp:function(n){if(n instanceof RegExp)return n;if(\"string\"==typeof n&&0!=n.trim().length)try{return new RegExp(n)}catch(t){console.error(\"[castRegexp] /\"+n+\"/ \",t)}return null},castString:function(n){return\"string\"==typeof n?n:void 0===n||null===n?\"\":JSON.stringify(n)},castStringArray:function(n){return Array.isArray(n)?n:null===n||void 0===n?[]:\"string\"==typeof n?n.split(\",\").map(String.trim):[JSON.stringify(n)]},castUnit:function(n){return n?void 0!==n.v?(n.v=parseFloat(n.v),isNaN(n.v)?{v:0,u:\"px\"}:(\"string\"!=typeof n.u&&(n.u=\"px\"),{v:n.v,u:n.u})):\"number\"==typeof n?{v:n,u:\"px\"}:\"string\"!=typeof n?{v:0,u:\"px\"}:a(\"\"+n):{v:0,u:\"px\"}},castValidator:function(n){if(\"function\"==typeof n)return n;if(\"boolean\"==typeof n)return function(){return n};if(\"string\"==typeof n&&0!=n.trim().length)try{var t=new RegExp(n);return t.test.bind(t)}catch(t){console.error(\"[castValidator] /\"+n+\"/ \",t)}return function(){return null}}};e.fire=function(n,t,e){var r=n[t];void 0===e&&(e=r),n[l][t].value=e,n[l][t].event.fire(n[t],n,t)},e.set=function(n,t,e){void 0===n[l]&&(n[l]={}),void 0===n[l][t]&&(n[l][t]={}),n[l][t].value=e},e.get=function(n,t){if(void 0!==n[l]&&void 0!==n[l][t])return n[l][t].value},e.readOnly=function(n,t,e){\"function\"==typeof att?Object.defineProperty(n,t,{get:e,set:function(){},configurable:!1,enumerable:!0}):Object.defineProperty(n,t,{value:e,writtable:!1,configurable:!1,enumerable:!0})},e.prop=r.bind(null,null),e.propToggleClass=function(n,t,e,o){\"string\"!=typeof o&&(o=\"\");var a={};\"string\"==typeof e?a[e]=e:Array.isArray(e)?e.forEach(function(n){a[n]=n}):a=e,r(null,n,t)(function(t){var e,r;for(e in a)r=a[e],e==t?i.addClass(n.element,o+r):i.removeClass(n.element,o+r)})},e.propAddClass=function(n,t,e){void 0===e&&(e=t),r(f.castBoolean,n,t)(function(t){t?i.addClass(n.element,e):i.removeClass(n.element,e)})},e.propRemoveClass=function(n,t,e){void 0===e&&(e=t),r(f.castBoolean,n,t)(function(t){t?i.removeClass(n.element,e):i.addClass(n.element,e)})},e.propArray=r.bind(null,f.castArray),e.propBoolean=r.bind(null,f.castBoolean),e.propColor=r.bind(null,f.castColor),e.propDate=r.bind(null,f.castDate),e.propEnum=function(n){return r.bind(null,f.castEnum(n))},e.propInteger=r.bind(null,f.castInteger),e.propFloat=r.bind(null,f.castFloat),e.propRegexp=r.bind(null,f.castRegexp),e.propString=r.bind(null,f.castString),e.propStringArray=r.bind(null,f.castStringArray),e.propUnit=r.bind(null,f.castUnit),e.propValidator=r.bind(null,f.castValidator),e.bind=function(n,t,e,r,o){if(void 0===n[l]||void 0===n[l][t])throw console.error(JSON.stringify(t)+\" is not a bindable property!\",{srcObj:n,srcAtt:t,dstObj:e,dstAtt:r,options:o}),Error(JSON.stringify(t)+\" is not a bindable property!\");void 0===o&&(o={}),o.value&&(o.converter=function(){return o.value});var i=\"function\"==typeof e?e:function(n,t,i){e[r]=\"function\"==typeof o.converter?o.converter(n):n};return n[l][t].event.add(i),o},e.extend=function(n,t,e){var r,o,i=JSON.parse(JSON.stringify(n));for(r in t)\"$\"!=r.charAt(0)&&(o=t[r],void 0===i[r]?console.error(\"[tfw.data-binding.extend] Undefined argument: `\"+r+\"`!\"):i[r]=o);if(void 0!==e){for(r in t)\"$\"==r.charAt(0)&&Object.defineProperty(e,r,{value:t[r],writable:!1,configurable:!1,enumerable:!1});for(r in i)\"$\"!=r.charAt(0)&&(e[r]=i[r])}return i},e.converters=f,t.exports._=o});\n//# sourceMappingURL=tfw.data-binding.js.map","map":{"version":3,"file":"tfw.data-binding.js","sources":["tfw.data-binding.js"],"sourcesContent":["/** @module tfw.data-binding */require( 'tfw.data-binding', function(require, module, exports) { var _=function(){var D={\"en\":{}},X=require(\"$\").intl;function _(){return X(D,arguments);}_.all=D;return _}();\n    /**\n * @module\n *\n * Provide all the functions needed for data-binding.\n *\n * @example\n * var DB = require('tfw.data-binding');\n * DB.propAddClass( widget, 'visible', 'show' );\n */\nrequire(\"polyfill.string\");\nvar $ = require(\"dom\");\nvar ParseUnit = require(\"tfw.css\").parseUnit;\nvar Listeners = require(\"tfw.listeners\");\n\n\nvar ID = '_tfw.data-binding_';\n\nvar converters = {\n    castArray: function(v) {\n        if (Array.isArray( v )) return v;\n        if( v === null || v === undefined ) return [];\n        return [v];\n    },\n    castBoolean: function(v) {\n        if (typeof v === 'boolean') return v;\n        if (typeof v === 'string') {\n            v = v.trim().toLowerCase();\n            if (v == '0' || v == 'false' || v == 'no' || v == 'null' || v == 'undefined') {\n                return false;\n            }\n            return true;\n        }\n        if (typeof v === 'number') {\n            return v != 0 ? true : false;\n        }\n        return null;\n    },\n    castColor: function(v) {\n        return \"\" + v;\n    },\n    castDate: function(v) {\n        if( typeof v === 'number' || typeof v === 'string' )\n            return new Date(v);\n        if( v instanceof Date ) return v;\n        return new Date();\n    },\n    castEnum: function( enumeration ) {\n        var lowerCaseEnum = enumeration.map(String.toLowerCase);\n        return function(v) {\n            if (typeof v === 'number') {\n                return enumeration[Math.floor( v ) % enumeration.length];\n            }\n            if (typeof v !== 'string') return enumeration[0];\n            var idx = lowerCaseEnum.indexOf( v.trim().toLowerCase() );\n            if (idx < 0) idx = 0;\n            return enumeration[idx];\n        };\n    },\n    castInteger: function(v) {\n        if (typeof v === 'number') {\n            return Math.floor( v );\n        }\n        if (typeof v === 'boolean') return v ? 1 : 0;\n        if (typeof v === 'string') {\n            return parseInt( v );\n        }\n        return Number.NaN;\n    },\n    castFloat: function(v) {\n        if (typeof v === 'number') {\n            return v;\n        }\n        if (typeof v === 'boolean') return v ? 1 : 0;\n        if (typeof v === 'string') {\n            return parseFloat( v );\n        }\n        return Number.NaN;\n    },\n    castRegexp: function(v) {\n        if (v instanceof RegExp) return v;\n        if (typeof v === 'string' && v.trim().length != 0 ) {\n            try {\n                return new RegExp( v );\n            }\n            // Ignore Regular Expression errors.\n            catch (ex) {\n                console.error(\"[castRegexp] /\" + v + \"/ \", ex);\n            }\n        };\n        return null;\n    },\n    castString: function(v) {\n        if (typeof v === 'string') return v;\n        if (v === undefined || v === null) return '';\n        return JSON.stringify( v );\n    },\n    castStringArray: function(v) {\n        if( Array.isArray( v ) ) return v;\n        if( v === null || v === undefined ) return [];\n        if( typeof v === 'string' ) {\n            return v.split( ',' ).map(String.trim);\n        }\n        return [JSON.stringify( v )];\n    },\n    castUnit: function(v) {\n        if( !v ) return { v: 0, u: 'px' };\n        if( typeof v.v !== 'undefined' ) {\n            v.v = parseFloat( v.v );\n            if( isNaN( v.v ) ) return { v: 0, u: 'px' };\n            if( typeof v.u !== 'string' ) v.u = 'px';\n            return { v: v.v, u: v.u };\n        }\n        if( typeof v === 'number' ) return { v: v, u: 'px' };\n        if( typeof v !== 'string' ) return { v: 0, u: 'px' };\n        return ParseUnit( '' + v );\n    },\n    castValidator: function(v) {\n        if (typeof v === 'function') return v;\n        if (typeof v === 'boolean') return function() { return v; };\n        if (typeof v === 'string' && v.trim().length != 0 ) {\n            try {\n                var rx = new RegExp( v );\n                return rx.test.bind( rx );\n            }\n            // Ignore Regular Expression errors.\n            catch (ex) {\n                console.error(\"[castValidator] /\" + v + \"/ \", ex);\n            }\n        };\n        return function() { return null; };\n    }\n};\n\n/**\n * @param {any|function} val - Default value, or a specific getter (if `val` is a function).\n */\nfunction propCast( caster, obj, att, val ) {\n    var hasSpecialGetter = typeof val === 'function';\n    if( typeof obj[ID] === 'undefined' ) obj[ID] = {};\n    obj[ID][att] = {\n        value: val,\n        event: new Listeners()\n    };\n    var setter;\n    if (typeof caster === 'function') {\n        setter = function(v) {\n            v = caster( v );\n            // If there is a special getter, any set will fire.\n            // Otherwise, we fire only if the value has changed.\n            if( hasSpecialGetter || obj[ID][att].value !== v) {\n                obj[ID][att].value = v;\n                obj[ID][att].event.fire( v, obj, att );\n            }\n        };\n    } else {\n        setter = function(v) {\n            // If there is a special getter, any set will fire.\n            // Otherwise, we fire only if the value has changed.\n            if( hasSpecialGetter || obj[ID][att].value !== v ) {\n                obj[ID][att].value = v;\n                obj[ID][att].event.fire( v, obj, att );\n            }\n        };\n    }\n    var getter = val;\n    if (!hasSpecialGetter) {\n        // Default getter.\n        getter = function() { return obj[ID][att].value; };\n    }\n    Object.defineProperty( obj, att, {\n        get: getter,\n        set: setter,\n        configurable: false,\n        enumerable: true\n    });\n    return exports.bind.bind(exports, obj, att);\n};\n\n/**\n * @export function fire\n *\n * Set a new value and fire the event even if the value has not changed.\n */\nexports.fire = function( obj, att, val ) {\n    var currentValue = obj[att];\n    if( typeof val === 'undefined' ) val = currentValue;\n\n    obj[ID][att].value = val;\n    obj[ID][att].event.fire( obj[att], obj, att );\n};\n\n/**\n * @export function set\n *\n * Set a new value without firing any event.\n */\nexports.set = function( obj, att, val ) {\n    if( typeof obj[ID] === 'undefined' ) obj[ID] = {};\n    if( typeof obj[ID][att] === 'undefined' ) obj[ID][att] = {};\n    obj[ID][att].value = val;\n};\n\n/**\n * @export function get\n *\n * Get a value without firing any event.\n */\nexports.get = function( obj, att ) {\n    if( typeof obj[ID] === 'undefined' ) return undefined;\n    if( typeof obj[ID][att] === 'undefined' ) return undefined;\n    return obj[ID][att].value;\n};\n\n/**\n * @export function readOnly\n * @param {object} obj - Object to which we want to add a read only attribute.\n * @param {string} name - Attribute's name.\n * @param {function} value - Function to execute anytime someone gets the value of this attribute.\n * @param {any} value - Constatn value of this attribute.\n */\nexports.readOnly = function( obj, name, value ) {\n    if( typeof att === 'function' ) {\n        Object.defineProperty( obj, name, {\n            get: value,\n            set: function() {},\n            configurable: false,\n            enumerable: true\n        });\n    } else {\n        Object.defineProperty( obj, name, {\n            value: value,\n            writtable: false,\n            configurable: false,\n            enumerable: true\n        });\n    }\n};\n\n/**\n * Create a property on which we can bind another property.\n *\n * @param {object} obj - Object to which we want to add a property.\n * @param {string} att - Name of the attribute of `obj`.\n *\n */\nexports.prop = propCast.bind( null, null );\n/**\n * @export @function propToggleClass\n * Create an enum attribute which toggles a CSS class when assigned.\n *\n * @param {array|object} values - If this is an array, we will convert\n * it  into an  object.  For instance `[\"show\",  \"hide\"]` will  become\n * `{show: \"show\", hide: \"hide\"}`.\n */\nexports.propToggleClass = function( target, attribute, values, prefix ) {\n    if( typeof prefix !== 'string' ) prefix = '';\n    var convertedValues = {};\n    if (typeof values === 'string') {\n        convertedValues[values] = values;\n    }\n    else if (Array.isArray(values)) {\n        values.forEach(function (itm) {\n            convertedValues[itm] = itm;\n        });\n    }\n    else {\n        convertedValues = values;\n    }\n    propCast( null, target, attribute )(function(v) {\n        var key, val;\n        for( key in convertedValues ) {\n            val = convertedValues[key];\n            if (key == v) {\n                $.addClass( target.element, prefix + val);\n            } else {\n                $.removeClass( target.element, prefix + val);\n            }\n        }\n    });\n};\n/**\n * @export @function propAddClass\n * Create a boolean attribute that toggle a CSS class on the `element` attribute of `target`.\n * If the value id `true`, `className` is added.\n * @example\n * DB.propAddClass( this, 'wide', 'fullscreen' );\n * DB.propAddClass( this, 'wide' );\n */\nexports.propAddClass = function( target, attribute, className ) {\n    if( typeof className === 'undefined' ) className = attribute;\n    propCast( converters.castBoolean, target, attribute )(function(v) {\n        if (v) $.addClass( target.element, className );\n        else $.removeClass( target.element, className );\n    });\n};\n/**\n * @export @function propAddClass\n * Create a boolean attribute that toggle a CSS class on the `element` attribute of `target`.\n * If the value id `true`, `className` is removed.\n * @example\n * DB.propRemoveClass( this, 'visible', 'hide' );\n */\nexports.propRemoveClass = function( target, attribute, className ) {\n    if( typeof className === 'undefined' ) className = attribute;\n    propCast( converters.castBoolean, target, attribute )(function(v) {\n        if (v) $.removeClass( target.element, className );\n        else $.addClass( target.element, className );\n    });\n};\nexports.propArray = propCast.bind( null, converters.castArray );\nexports.propBoolean = propCast.bind( null, converters.castBoolean );\nexports.propColor = propCast.bind( null, converters.castColor );\nexports.propDate = propCast.bind( null, converters.castDate );\nexports.propEnum = function( enumeration ) {\n    return propCast.bind( null, converters.castEnum( enumeration ) );\n};\nexports.propInteger = propCast.bind( null, converters.castInteger );\nexports.propFloat = propCast.bind( null, converters.castFloat );\nexports.propRegexp = propCast.bind( null, converters.castRegexp );\nexports.propString = propCast.bind( null, converters.castString );\nexports.propStringArray = propCast.bind( null, converters.castStringArray );\nexports.propUnit = propCast.bind( null, converters.castUnit );\nexports.propValidator = propCast.bind( null, converters.castValidator );\n\nexports.bind = function( srcObj, srcAtt, dstObj, dstAtt, options ) {\n    if( typeof srcObj[ID] === 'undefined' || typeof srcObj[ID][srcAtt] === 'undefined' ) {\n        console.error( JSON.stringify( srcAtt ) + \" is not a bindable property!\", {\n            srcObj: srcObj,\n            srcAtt: srcAtt,\n            dstObj: dstObj,\n            dstAtt: dstAtt,\n            options: options\n        });\n        throw Error( JSON.stringify( srcAtt ) + \" is not a bindable property!\" );\n    }\n\n    if( typeof options === 'undefined' ) options = {};\n    if (options.value) {\n        options.converter = function() {\n            return options.value;\n        };\n    }\n    var lambda = typeof dstObj === 'function' ? dstObj : function(v, obj, att) {\n        dstObj[dstAtt] = typeof options.converter === 'function' ? options.converter(v) : v;\n    };\n    srcObj[ID][srcAtt].event.add( lambda );\n\n    return options;\n};\n\n\nexports.extend = function( def, ext, obj ) {\n    var out = JSON.parse( JSON.stringify( def ) );\n\n    var key, val;\n    for( key in ext ) {\n        if (key.charAt(0) == '$') continue;\n        val = ext[key];\n        if( typeof out[key] === 'undefined' ) {\n            console.error(\"[tfw.data-binding.extend] Undefined argument: `\" + key + \"`!\");\n        } else {\n            out[key] = val;\n        }\n    }\n\n    if (typeof obj !== 'undefined') {\n        for( key in ext ) {\n            if (key.charAt(0) != '$') continue;\n            Object.defineProperty( obj, key, {\n                value: ext[key],\n                writable: false,\n                configurable: false,\n                enumerable: false\n            });\n        }\n        // Setting values.\n        for( key in out ) {\n            if (key.charAt(0) == '$') continue;\n            obj[key] = out[key];\n        }\n    }\n\n    return out;\n};\n\n\nexports.converters = converters;\n\n\n  \nmodule.exports._ = _;\n});"],"names":["require","module","exports","propCast","caster","obj","att","val","hasSpecialGetter","ID","value","event","Listeners","setter","v","fire","getter","Object","defineProperty","get","set","configurable","enumerable","bind","_","X","D","arguments","en","intl","all","$","ParseUnit","parseUnit","converters","castArray","Array","isArray","undefined","castBoolean","trim","toLowerCase","castColor","castDate","Date","castEnum","enumeration","lowerCaseEnum","map","String","Math","floor","length","idx","indexOf","castInteger","parseInt","Number","NaN","castFloat","parseFloat","castRegexp","RegExp","ex","console","error","castString","JSON","stringify","castStringArray","split","castUnit","isNaN","u","castValidator","rx","test","currentValue","readOnly","name","writtable","prop","propToggleClass","target","attribute","values","prefix","convertedValues","forEach","itm","key","addClass","element","removeClass","propAddClass","className","propRemoveClass","propArray","propBoolean","propColor","propDate","propEnum","propInteger","propFloat","propRegexp","propString","propStringArray","propUnit","propValidator","srcObj","srcAtt","dstObj","dstAtt","options","Error","converter","lambda","add","extend","def","ext","out","parse","charAt","writable"],"mappings":"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"},"dependencies":["mod/$","mod/polyfill.string","mod/dom","mod/tfw.css","mod/tfw.listeners"]}