{"intl":"var _=function(){var D={\"en\":{\"bad-repo\":\"Unable to contact this repository!\",\"confirm-exit\":\"Are you sure you want to exit this application?\",\"download-progress\":\"Downloading in progress: $1\",\"exit\":\"Exit\",\"install-progress\":\"Installation in progress: $1\",\"loading\":\"Downloading application files...\",\"network-error\":\"<html>An error occured while trying to contact repository <b>$1</b>.<pre class='error'>$2</pre><hr/>A good network connection is mandatory for the first installation.\",\"repository\":\"Repository's URL\"},\"fr\":{\"bad-repo\":\"Le dépôt spécifié ne répond pas !\",\"confirm-exit\":\"Êtes-vous sûr de vouloir quitter cette application ?\",\"download-progress\":\"Téléchargement en cours: $1\",\"exit\":\"Quitter\",\"install-progress\":\"Installation en cours: $1\",\"loading\":\"Téléchargement de l'application...\",\"network-error\":\"<html>Une erreur est survenur lors de la tentative de connexion au dépôt <b>$1</b>.<pre class='error'>$2</pre><hr/>Une bonne connexion réseau est indispensable lors de la première installation.\",\"repository\":\"URL du dépôt\"}},X=require(\"$\").intl;function _(){return X(D,arguments);}_.all=D;return _}();\r\n","src":"/** @module tolokoban-nw */require( 'tolokoban-nw', function(require, module, exports) { var _=function(){var D={\"en\":{\"bad-repo\":\"Unable to contact this repository!\",\"confirm-exit\":\"Are you sure you want to exit this application?\",\"download-progress\":\"Downloading in progress: $1\",\"exit\":\"Exit\",\"install-progress\":\"Installation in progress: $1\",\"loading\":\"Downloading application files...\",\"network-error\":\"<html>An error occured while trying to contact repository <b>$1</b>.<pre class='error'>$2</pre><hr/>A good network connection is mandatory for the first installation.\",\"repository\":\"Repository's URL\"},\"fr\":{\"bad-repo\":\"Le dépôt spécifié ne répond pas !\",\"confirm-exit\":\"Êtes-vous sûr de vouloir quitter cette application ?\",\"download-progress\":\"Téléchargement en cours: $1\",\"exit\":\"Quitter\",\"install-progress\":\"Installation en cours: $1\",\"loading\":\"Téléchargement de l'application...\",\"network-error\":\"<html>Une erreur est survenur lors de la tentative de connexion au dépôt <b>$1</b>.<pre class='error'>$2</pre><hr/>Une bonne connexion réseau est indispensable lors de la première installation.\",\"repository\":\"URL du dépôt\"}},X=require(\"$\").intl;function _(){return X(D,arguments);}_.all=D;return _}();\r\n    /**\r\n * This is an application container.\r\n * It manages updates in background.\r\n */\r\n\r\n\"use strict\";\r\n\r\nvar $ = require(\"dom\");\r\nvar DB = require(\"tfw.data-binding\");\r\nvar Err = require(\"tfw.message\").error;\r\nvar Text = require(\"wdg.text\");\r\nvar Wait = require(\"wdg.wait\");\r\nvar Modal = require(\"wdg.modal\");\r\nvar Local = require(\"tfw.storage\").local;\r\nvar Button = require(\"wdg.button\");\r\n\r\nvar FS = require(\"node://fs\");\r\nvar Path = require(\"node://path\");\r\n\r\nvar g_rootFolder = Path.resolve('.');\r\nvar g_config;\r\n\r\nfunction get(key, def) {\r\n    return Local.get('tolokoban-nw' + '/' + key, def);\r\n}\r\n\r\nfunction set(key, val) {\r\n    return Local.set('tolokoban-nw' + '/' + key, val);\r\n}\r\n\r\n\r\nexports.start = function() {\r\n    Modal.alert(\"Start debugger now!\", function() {\r\n        FS.readFile(\"package.json\", function(err, out) {\r\n            if( err ) {\r\n                Err( \"<html>Unable to read/parse <b>package.json</b>: <code>\" + err.message + \"</code>\" );\r\n                return;\r\n            }\r\n            try {\r\n                var jsn = out.toString();\r\n                g_config = JSON.parse( out.toString() );\r\n            } catch( ex ) {\r\n                Err(\"Bad JSON syntax in `package.json`!\");\r\n                return;\r\n            }\r\n            $('title').textContent = g_config.name + \" \" + g_config.version;\r\n\r\n            var pkg = get( 'install' );\r\n            debugger;\r\n            if( pkg ) installPackage( pkg ).then( execApp );\r\n            else checkFirstLaunch();\r\n        });\r\n    });\r\n};\r\n\r\nexports.onExit = exitApp;\r\n\r\n/**\r\n * Check if it is the first launch or not.\r\n */\r\nfunction checkFirstLaunch() {\r\n    return new Promise(function (resolve, reject) {\r\n        getPackageDef().then(function(pkg) {\r\n            console.info(\"[tolokoban-nw] pkg=...\", pkg);\r\n        });\r\n    });\r\n}\r\n\r\n/**\r\n * Promise which resolves in an URL of the repository.\r\n */\r\nfunction getRepositoryUrl() {\r\n    return new Promise(function (resolve, reject) {\r\n        var repository = get( 'repository' );\r\n        if( repository ) return resolve( repository );\r\n        var repo = new Text({\r\n            label: _('repository'), wide: false, width: '30rem',\r\n            value: 'http://localhost/www/Cameroun/index.php'\r\n        });\r\n        var loading = new Modal({ padding: true, content: [new Wait({ text: _('loading') })] });\r\n        var ok = Button.Ok();\r\n        var exit = new Button({ text: _('exit'), icon: \"close\", type: 'simple' });\r\n        exit.on( exitApp );\r\n        var content = $.div([\r\n            repo, ok,\r\n            $.tag('hr'),\r\n            $.tag('center', [exit])\r\n        ]);\r\n        DB.bind( repo, 'action', ok, 'fire' );\r\n        var modal = new Modal({ padding: true, content: content });\r\n        modal.attach();\r\n        window.setTimeout(function() {\r\n            repo.focus = true;\r\n        }, 300);\r\n        ok.on(function() {\r\n            resolve( repo.value.trim() );\r\n        });\r\n    });\r\n}\r\n\r\n/**\r\n * Resolves in the URL of the repo and the ID of the package.\r\n * `{ repo: <string>, id: <string> }`\r\n */\r\nfunction getPackageUrl( repoUrl ) {\r\n    return new Promise(function (resolve, reject) {\r\n        set( 'repository', repoUrl );\r\n        var pkgId = get( 'id' );\r\n        if( pkgId ) resolve( repoUrl + \"?\" + pkgId );\r\n        // Ask the repository the list of packages.\r\n        fetch( repoUrl ).then(function(response) {\r\n            if( !response.ok ) throw { message: response.status + \": \" + response.statusText };\r\n            return response.json();\r\n        }).then(function( packagesList ) {\r\n\r\n            // @TODO Manage the case of multi packages by adding a selection screen.\r\n            resolve({\r\n                repo: repoUrl,\r\n                id: packagesList[0].id\r\n            });\r\n        }).catch(function(err) {\r\n            manageNetworkFailure( repoUrl, err ).then( resolve );\r\n        });\r\n    });\r\n}\r\n\r\n/**\r\n * Network errors are ignored if the first installation has already occured.\r\n * That means if the `version` storage attribute has already been set.\r\n */\r\nfunction manageNetworkFailure( url, err ) {\r\n    return new Promise(function (resolve, reject) {\r\n        console.error( \"Unable to contact \", url, \" because of error \", err );\r\n        if( get('version') ) resolve( null );\r\n        else {\r\n            Modal.alert(_('network-error', url, err.message), function() {\r\n                set('repository', null);\r\n                set('id', null);\r\n                set('version', null);\r\n                location.reload();\r\n            });\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * Resolves in a package definition or `null`.\r\n * A package definition has this format:\r\n * ```\r\n * {\r\n *   url: <string>\r\n *   version: <string>\r\n *   files: [<string>, ...]\r\n * }\r\n * ```\r\n */\r\nfunction getPackageDef() {\r\n    return new Promise(function (resolve, reject) {\r\n        getRepositoryUrl().then( getPackageUrl ).then(function( pkgUrl ) {\r\n            var url = pkgUrl.repo + \"?\" + pkgUrl.id;\r\n            fetch( url ).then(function( response ) {\r\n                if( !response.ok ) throw { message: response.status + \": \" + response.statusText };\r\n                return response.json();\r\n            }).then(function(pkgDef) {\r\n                resolve(pkgDef);\r\n            }).catch(function(err) {\r\n                manageNetworkFailure( url, err ).then( resolve );\r\n            });\r\n        });\r\n    });\r\n}\r\n\r\n/**\r\n * Close the mian window, hence exit the application.\r\n */\r\nfunction exitApp() {\r\n    Modal.confirm(_('confirm-exit'), function() {\r\n        nw.Window.get().close();\r\n    });\r\n}\r\n\r\n/**\r\n * Execute the application by loading `index.html` page.\r\n */\r\nfunction execApp() {\r\n    $('iframe').setAttribute( 'src', 'index.html' );\r\n}\r\n\r\n/**\r\n * Install package stored in `/tolokoban-nw/package`.\r\n */\r\nfunction installPackage( pkg ) {\r\n    return new Promise(function (resolve, reject) {\r\n        alert('TODO!');\r\n    });\r\n}\r\n\r\n/**\r\n * Create directories recursively.\r\n * If they are already created, no problem.\r\n */\r\nfunction mkdir(folder) {\r\n    var folders = folder.split( '/' );\r\n    var dir = '.';\r\n    folders.forEach(function (folder) {\r\n        dir += '/' + folder;\r\n        if( !FS.existsSync( dir ) ) {\r\n            FS.mkdir( dir );\r\n        }\r\n    });\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction launch() {\r\n    FS.readFile(\"package.json\", function(err, out) {\r\n        if( err ) {\r\n            Err( err );\r\n            return;\r\n        }\r\n        try {\r\n            var jsn = out.toString();\r\n            var pkg = JSON.parse( out.toString() );\r\n            if( !checkForUpdates( pkg ) ) return;\r\n        } catch( ex ) {\r\n            Err(\"Bad JSON syntax in `package.json`!\");\r\n            return;\r\n        }\r\n        $('title').textContent = pkg.name + \" \" + pkg.version;\r\n        $('iframe').setAttribute( 'src', 'index.html' );\r\n    });\r\n}\r\n\r\n\r\n/**\r\n * Two cases: first install or update.\r\n */\r\nfunction checkForUpdates( pkg ) {\r\n    if( !pkg.tfw || !pkg.tfw.app\r\n        || typeof pkg.tfw.app.id !== 'string' )\r\n    {\r\n        install( pkg );\r\n        return false;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\n\r\nfunction install( pkg ) {\r\n    if( typeof pkg.tfw === 'undefined' ) pkg.tfw = {};\r\n    if( typeof pkg.tfw.app === 'undefined' ) pkg.tfw.app = {};\r\n    var repo = new Text({\r\n        label: _('repository'), wide: false, width: '30rem',\r\n        value: 'http://localhost/Cameroun/index.php'\r\n    });\r\n    var loading = new Modal({ padding: true, content: [new Wait({ text: _('loading') })] });\r\n    var ok = Button.Ok();\r\n    var exit = new Button({ text: _('exit'), icon: \"close\", type: 'simple' });\r\n    exit.on(function() {\r\n        nw.Window.get().close();\r\n    });\r\n    var content = $.div([\r\n        repo, ok,\r\n        $.tag('hr'),\r\n        $.tag('center', [exit])\r\n    ]);\r\n    DB.bind( repo, 'action', ok, 'fire' );\r\n    var modal = new Modal({ padding: true, content: content });\r\n    modal.attach();\r\n    window.setTimeout(function() {\r\n        repo.focus = true;\r\n    }, 300);\r\n    ok.on(function() {\r\n        var url = repo.value.trim();\r\n        fetch( url ).then(function(response) {\r\n            console.info(\"[tolokoban-nw] response=\", response);\r\n            if( !response.ok ) {\r\n                Err(_('bad-repo') + \" - \" + response.status);\r\n                repo.focus = true;\r\n                return;\r\n            }\r\n            modal.detach();\r\n            Local.set('tolokoban-nw/repository', url);\r\n            return response.json();\r\n        }).then(function(list) {\r\n            console.info(\"[tolokoban-nw] list=\", list);\r\n            return fetch( url + '?' + list[0].id )\r\n        }).then(function(response) {\r\n            return response.json();\r\n        }).then(function(def) {\r\n            console.info(\"[tolokoban-nw] def=\", def);\r\n            loading.attach();\r\n            return download( def );\r\n        }).then(function() {\r\n            loading.detach();\r\n            location.reload();\r\n        }).catch(function(err) {\r\n            console.error( err );\r\n            repo.focus = true;\r\n            Err( \"<html>\" + _('bad-repo') + \"<br/>\" + err.message );\r\n        });\r\n    });\r\n}\r\n\r\n\r\nfunction download(def) {\r\n    // Check existence of download folder.\r\n    mkdir(\"tolokoban-nw/download\");\r\n\r\n    var downloadedFiles = [];\r\n    return new Promise(function (resolve, reject) {\r\n        var next = function() {\r\n            console.info(\"[tolokoban-nw] def=\", def);\r\n            if( def.files.length == 0 ) {\r\n                def.files = downloadedFiles;\r\n                Local.set('tolokoban-nw/install', def);\r\n                resolve();\r\n                return;\r\n            }\r\n            $('tooltip').textContent = _('download-progress', def.files.length);\r\n            var file = def.files.pop();\r\n            mkdir( 'tolokoban-nw/download/' + Path.dirname( file ) );\r\n            var url = def.url + file;\r\n            fetch( url ).then(function(response) {\r\n                if( !response.ok ) {\r\n                    throw Error(response.status + \" \" + response.statusText + \" - \" + url);\r\n                }\r\n                downloadedFiles.push( file );\r\n                return response.arrayBuffer();\r\n            }).then(function(arrayBuffer) {\r\n                var output = Path.resolve(Path.join(g_rootFolder, \"tolokoban-nw/download/\", file));\r\n                var data = new Buffer( arrayBuffer );\r\n                console.info(\"[tolokoban-nw] output=\", output);\r\n                console.info(\"[tolokoban-nw] arrayBuffer=\", arrayBuffer);\r\n                FS.writeFile( output, data, function( err ) {\r\n                    if( err ) throw Error(\"Unable to write file: \" + output + \"\\n\" + err);\r\n                    next();\r\n                });\r\n            }).catch( reject );\r\n        };\r\n\r\n        next();\r\n    });\r\n}\r\n\r\n\r\n\r\nfunction upgrade( def ) {\r\n    return new Promise(function (resolve, reject) {\r\n        var next = function() {\r\n            if( def.files.length == 0 ) {\r\n                $('tooltip').textContent = '';\r\n                Local.set('tolokoban-nw/install', null);\r\n                resolve();\r\n                return;\r\n            }\r\n            $('tooltip').textContent = _('install-progress', def.files.length);\r\n            var file = def.files.pop();\r\n            mkdir( Path.dirname( file ) );\r\n            FS.readFile( \"./tolokoban-nw/download/\" + file, function(err, data) {\r\n                if( err ) {\r\n                    console.error( err );\r\n                    reject( err );\r\n                    return;\r\n                }\r\n                FS.writeFile( file, data, function( err ) {\r\n                    if( err ) {\r\n                        console.error( err );\r\n                        reject( err );\r\n                        return;\r\n                    }\r\n                    next();\r\n                });\r\n            });\r\n        };\r\n        next();\r\n    });\r\n}\r\n\r\n\r\n  \r\nmodule.exports._ = _;\n/**\n * @module tolokoban-nw\n * @see module:$\n * @see module:dom\n * @see module:tfw.data-binding\n * @see module:tfw.message\n * @see module:wdg.text\n * @see module:wdg.wait\n * @see module:wdg.modal\n * @see module:tfw.storage\n * @see module:wdg.button\n\n */\n});","zip":"require(\"tolokoban-nw\",function(n,t,e){function o(n,t){return y.get(\"tolokoban-nw/\"+n,t)}function r(n,t){return y.set(\"tolokoban-nw/\"+n,t)}function i(){return new Promise(function(n,t){u().then(function(n){console.info(\"[tolokoban-nw] pkg=...\",n)})})}function a(){return new Promise(function(n,t){var e=o(\"repository\");if(e)return n(e);var r=new b({label:w(\"repository\"),wide:!1,width:\"30rem\",value:\"http://localhost/www/Cameroun/index.php\"}),i=(new x({padding:!0,content:[new v({text:w(\"loading\")})]}),k.Ok()),a=new k({text:w(\"exit\"),icon:\"close\",type:\"simple\"});a.on(l);var s=g.div([r,i,g.tag(\"hr\"),g.tag(\"center\",[a])]);h.bind(r,\"action\",i,\"fire\");var c=new x({padding:!0,content:s});c.attach(),window.setTimeout(function(){r.focus=!0},300),i.on(function(){n(r.value.trim())})})}function s(n){return new Promise(function(t,e){r(\"repository\",n);var i=o(\"id\");i&&t(n+\"?\"+i),fetch(n).then(function(n){if(!n.ok)throw{message:n.status+\": \"+n.statusText};return n.json()}).then(function(e){t({repo:n,id:e[0].id})}).catch(function(e){c(n,e).then(t)})})}function c(n,t){return new Promise(function(e,i){console.error(\"Unable to contact \",n,\" because of error \",t),o(\"version\")?e(null):x.alert(w(\"network-error\",n,t.message),function(){r(\"repository\",null),r(\"id\",null),r(\"version\",null),location.reload()})})}function u(){return new Promise(function(n,t){a().then(s).then(function(t){var e=t.repo+\"?\"+t.id;fetch(e).then(function(n){if(!n.ok)throw{message:n.status+\": \"+n.statusText};return n.json()}).then(function(t){n(t)}).catch(function(t){c(e,t).then(n)})})})}function l(){x.confirm(w(\"confirm-exit\"),function(){nw.Window.get().close()})}function d(){g(\"iframe\").setAttribute(\"src\",\"index.html\")}function f(n){return new Promise(function(n,t){alert(\"TODO!\")})}var p,w=function(){function t(){return o(e,arguments)}var e={en:{\"bad-repo\":\"Unable to contact this repository!\",\"confirm-exit\":\"Are you sure you want to exit this application?\",\"download-progress\":\"Downloading in progress: $1\",exit:\"Exit\",\"install-progress\":\"Installation in progress: $1\",loading:\"Downloading application files...\",\"network-error\":\"<html>An error occured while trying to contact repository <b>$1</b>.<pre class='error'>$2</pre><hr/>A good network connection is mandatory for the first installation.\",repository:\"Repository's URL\"},fr:{\"bad-repo\":\"Le dépôt spécifié ne répond pas !\",\"confirm-exit\":\"Êtes-vous sûr de vouloir quitter cette application ?\",\"download-progress\":\"Téléchargement en cours: $1\",exit:\"Quitter\",\"install-progress\":\"Installation en cours: $1\",loading:\"Téléchargement de l'application...\",\"network-error\":\"<html>Une erreur est survenur lors de la tentative de connexion au dépôt <b>$1</b>.<pre class='error'>$2</pre><hr/>Une bonne connexion réseau est indispensable lors de la première installation.\",repository:\"URL du dépôt\"}},o=n(\"$\").intl;return t.all=e,t}(),g=n(\"dom\"),h=n(\"tfw.data-binding\"),m=n(\"tfw.message\").error,b=n(\"wdg.text\"),v=n(\"wdg.wait\"),x=n(\"wdg.modal\"),y=n(\"tfw.storage\").local,k=n(\"wdg.button\"),$=n(\"node://fs\"),U=n(\"node://path\");U.resolve(\".\");e.start=function(){x.alert(\"Start debugger now!\",function(){$.readFile(\"package.json\",function(n,t){if(n)return void m(\"<html>Unable to read/parse <b>package.json</b>: <code>\"+n.message+\"</code>\");try{t.toString();p=JSON.parse(t.toString())}catch(n){return void m(\"Bad JSON syntax in `package.json`!\")}g(\"title\").textContent=p.name+\" \"+p.version;var e=o(\"install\");e?f(e).then(d):i()})})},e.onExit=l,t.exports._=w});\n//# sourceMappingURL=tolokoban-nw.js.map","map":{"version":3,"file":"tolokoban-nw.js","sources":["tolokoban-nw.js"],"sourcesContent":["/** @module tolokoban-nw */require( 'tolokoban-nw', function(require, module, exports) { var _=function(){var D={\"en\":{\"bad-repo\":\"Unable to contact this repository!\",\"confirm-exit\":\"Are you sure you want to exit this application?\",\"download-progress\":\"Downloading in progress: $1\",\"exit\":\"Exit\",\"install-progress\":\"Installation in progress: $1\",\"loading\":\"Downloading application files...\",\"network-error\":\"<html>An error occured while trying to contact repository <b>$1</b>.<pre class='error'>$2</pre><hr/>A good network connection is mandatory for the first installation.\",\"repository\":\"Repository's URL\"},\"fr\":{\"bad-repo\":\"Le dépôt spécifié ne répond pas !\",\"confirm-exit\":\"Êtes-vous sûr de vouloir quitter cette application ?\",\"download-progress\":\"Téléchargement en cours: $1\",\"exit\":\"Quitter\",\"install-progress\":\"Installation en cours: $1\",\"loading\":\"Téléchargement de l'application...\",\"network-error\":\"<html>Une erreur est survenur lors de la tentative de connexion au dépôt <b>$1</b>.<pre class='error'>$2</pre><hr/>Une bonne connexion réseau est indispensable lors de la première installation.\",\"repository\":\"URL du dépôt\"}},X=require(\"$\").intl;function _(){return X(D,arguments);}_.all=D;return _}();\r\n    /**\r\n * This is an application container.\r\n * It manages updates in background.\r\n */\r\n\r\n\"use strict\";\r\n\r\nvar $ = require(\"dom\");\r\nvar DB = require(\"tfw.data-binding\");\r\nvar Err = require(\"tfw.message\").error;\r\nvar Text = require(\"wdg.text\");\r\nvar Wait = require(\"wdg.wait\");\r\nvar Modal = require(\"wdg.modal\");\r\nvar Local = require(\"tfw.storage\").local;\r\nvar Button = require(\"wdg.button\");\r\n\r\nvar FS = require(\"node://fs\");\r\nvar Path = require(\"node://path\");\r\n\r\nvar g_rootFolder = Path.resolve('.');\r\nvar g_config;\r\n\r\nfunction get(key, def) {\r\n    return Local.get('tolokoban-nw' + '/' + key, def);\r\n}\r\n\r\nfunction set(key, val) {\r\n    return Local.set('tolokoban-nw' + '/' + key, val);\r\n}\r\n\r\n\r\nexports.start = function() {\r\n    Modal.alert(\"Start debugger now!\", function() {\r\n        FS.readFile(\"package.json\", function(err, out) {\r\n            if( err ) {\r\n                Err( \"<html>Unable to read/parse <b>package.json</b>: <code>\" + err.message + \"</code>\" );\r\n                return;\r\n            }\r\n            try {\r\n                var jsn = out.toString();\r\n                g_config = JSON.parse( out.toString() );\r\n            } catch( ex ) {\r\n                Err(\"Bad JSON syntax in `package.json`!\");\r\n                return;\r\n            }\r\n            $('title').textContent = g_config.name + \" \" + g_config.version;\r\n\r\n            var pkg = get( 'install' );\r\n            debugger;\r\n            if( pkg ) installPackage( pkg ).then( execApp );\r\n            else checkFirstLaunch();\r\n        });\r\n    });\r\n};\r\n\r\nexports.onExit = exitApp;\r\n\r\n/**\r\n * Check if it is the first launch or not.\r\n */\r\nfunction checkFirstLaunch() {\r\n    return new Promise(function (resolve, reject) {\r\n        getPackageDef().then(function(pkg) {\r\n            console.info(\"[tolokoban-nw] pkg=...\", pkg);\r\n        });\r\n    });\r\n}\r\n\r\n/**\r\n * Promise which resolves in an URL of the repository.\r\n */\r\nfunction getRepositoryUrl() {\r\n    return new Promise(function (resolve, reject) {\r\n        var repository = get( 'repository' );\r\n        if( repository ) return resolve( repository );\r\n        var repo = new Text({\r\n            label: _('repository'), wide: false, width: '30rem',\r\n            value: 'http://localhost/www/Cameroun/index.php'\r\n        });\r\n        var loading = new Modal({ padding: true, content: [new Wait({ text: _('loading') })] });\r\n        var ok = Button.Ok();\r\n        var exit = new Button({ text: _('exit'), icon: \"close\", type: 'simple' });\r\n        exit.on( exitApp );\r\n        var content = $.div([\r\n            repo, ok,\r\n            $.tag('hr'),\r\n            $.tag('center', [exit])\r\n        ]);\r\n        DB.bind( repo, 'action', ok, 'fire' );\r\n        var modal = new Modal({ padding: true, content: content });\r\n        modal.attach();\r\n        window.setTimeout(function() {\r\n            repo.focus = true;\r\n        }, 300);\r\n        ok.on(function() {\r\n            resolve( repo.value.trim() );\r\n        });\r\n    });\r\n}\r\n\r\n/**\r\n * Resolves in the URL of the repo and the ID of the package.\r\n * `{ repo: <string>, id: <string> }`\r\n */\r\nfunction getPackageUrl( repoUrl ) {\r\n    return new Promise(function (resolve, reject) {\r\n        set( 'repository', repoUrl );\r\n        var pkgId = get( 'id' );\r\n        if( pkgId ) resolve( repoUrl + \"?\" + pkgId );\r\n        // Ask the repository the list of packages.\r\n        fetch( repoUrl ).then(function(response) {\r\n            if( !response.ok ) throw { message: response.status + \": \" + response.statusText };\r\n            return response.json();\r\n        }).then(function( packagesList ) {\r\n\r\n            // @TODO Manage the case of multi packages by adding a selection screen.\r\n            resolve({\r\n                repo: repoUrl,\r\n                id: packagesList[0].id\r\n            });\r\n        }).catch(function(err) {\r\n            manageNetworkFailure( repoUrl, err ).then( resolve );\r\n        });\r\n    });\r\n}\r\n\r\n/**\r\n * Network errors are ignored if the first installation has already occured.\r\n * That means if the `version` storage attribute has already been set.\r\n */\r\nfunction manageNetworkFailure( url, err ) {\r\n    return new Promise(function (resolve, reject) {\r\n        console.error( \"Unable to contact \", url, \" because of error \", err );\r\n        if( get('version') ) resolve( null );\r\n        else {\r\n            Modal.alert(_('network-error', url, err.message), function() {\r\n                set('repository', null);\r\n                set('id', null);\r\n                set('version', null);\r\n                location.reload();\r\n            });\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * Resolves in a package definition or `null`.\r\n * A package definition has this format:\r\n * ```\r\n * {\r\n *   url: <string>\r\n *   version: <string>\r\n *   files: [<string>, ...]\r\n * }\r\n * ```\r\n */\r\nfunction getPackageDef() {\r\n    return new Promise(function (resolve, reject) {\r\n        getRepositoryUrl().then( getPackageUrl ).then(function( pkgUrl ) {\r\n            var url = pkgUrl.repo + \"?\" + pkgUrl.id;\r\n            fetch( url ).then(function( response ) {\r\n                if( !response.ok ) throw { message: response.status + \": \" + response.statusText };\r\n                return response.json();\r\n            }).then(function(pkgDef) {\r\n                resolve(pkgDef);\r\n            }).catch(function(err) {\r\n                manageNetworkFailure( url, err ).then( resolve );\r\n            });\r\n        });\r\n    });\r\n}\r\n\r\n/**\r\n * Close the mian window, hence exit the application.\r\n */\r\nfunction exitApp() {\r\n    Modal.confirm(_('confirm-exit'), function() {\r\n        nw.Window.get().close();\r\n    });\r\n}\r\n\r\n/**\r\n * Execute the application by loading `index.html` page.\r\n */\r\nfunction execApp() {\r\n    $('iframe').setAttribute( 'src', 'index.html' );\r\n}\r\n\r\n/**\r\n * Install package stored in `/tolokoban-nw/package`.\r\n */\r\nfunction installPackage( pkg ) {\r\n    return new Promise(function (resolve, reject) {\r\n        alert('TODO!');\r\n    });\r\n}\r\n\r\n/**\r\n * Create directories recursively.\r\n * If they are already created, no problem.\r\n */\r\nfunction mkdir(folder) {\r\n    var folders = folder.split( '/' );\r\n    var dir = '.';\r\n    folders.forEach(function (folder) {\r\n        dir += '/' + folder;\r\n        if( !FS.existsSync( dir ) ) {\r\n            FS.mkdir( dir );\r\n        }\r\n    });\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction launch() {\r\n    FS.readFile(\"package.json\", function(err, out) {\r\n        if( err ) {\r\n            Err( err );\r\n            return;\r\n        }\r\n        try {\r\n            var jsn = out.toString();\r\n            var pkg = JSON.parse( out.toString() );\r\n            if( !checkForUpdates( pkg ) ) return;\r\n        } catch( ex ) {\r\n            Err(\"Bad JSON syntax in `package.json`!\");\r\n            return;\r\n        }\r\n        $('title').textContent = pkg.name + \" \" + pkg.version;\r\n        $('iframe').setAttribute( 'src', 'index.html' );\r\n    });\r\n}\r\n\r\n\r\n/**\r\n * Two cases: first install or update.\r\n */\r\nfunction checkForUpdates( pkg ) {\r\n    if( !pkg.tfw || !pkg.tfw.app\r\n        || typeof pkg.tfw.app.id !== 'string' )\r\n    {\r\n        install( pkg );\r\n        return false;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\n\r\nfunction install( pkg ) {\r\n    if( typeof pkg.tfw === 'undefined' ) pkg.tfw = {};\r\n    if( typeof pkg.tfw.app === 'undefined' ) pkg.tfw.app = {};\r\n    var repo = new Text({\r\n        label: _('repository'), wide: false, width: '30rem',\r\n        value: 'http://localhost/Cameroun/index.php'\r\n    });\r\n    var loading = new Modal({ padding: true, content: [new Wait({ text: _('loading') })] });\r\n    var ok = Button.Ok();\r\n    var exit = new Button({ text: _('exit'), icon: \"close\", type: 'simple' });\r\n    exit.on(function() {\r\n        nw.Window.get().close();\r\n    });\r\n    var content = $.div([\r\n        repo, ok,\r\n        $.tag('hr'),\r\n        $.tag('center', [exit])\r\n    ]);\r\n    DB.bind( repo, 'action', ok, 'fire' );\r\n    var modal = new Modal({ padding: true, content: content });\r\n    modal.attach();\r\n    window.setTimeout(function() {\r\n        repo.focus = true;\r\n    }, 300);\r\n    ok.on(function() {\r\n        var url = repo.value.trim();\r\n        fetch( url ).then(function(response) {\r\n            console.info(\"[tolokoban-nw] response=\", response);\r\n            if( !response.ok ) {\r\n                Err(_('bad-repo') + \" - \" + response.status);\r\n                repo.focus = true;\r\n                return;\r\n            }\r\n            modal.detach();\r\n            Local.set('tolokoban-nw/repository', url);\r\n            return response.json();\r\n        }).then(function(list) {\r\n            console.info(\"[tolokoban-nw] list=\", list);\r\n            return fetch( url + '?' + list[0].id )\r\n        }).then(function(response) {\r\n            return response.json();\r\n        }).then(function(def) {\r\n            console.info(\"[tolokoban-nw] def=\", def);\r\n            loading.attach();\r\n            return download( def );\r\n        }).then(function() {\r\n            loading.detach();\r\n            location.reload();\r\n        }).catch(function(err) {\r\n            console.error( err );\r\n            repo.focus = true;\r\n            Err( \"<html>\" + _('bad-repo') + \"<br/>\" + err.message );\r\n        });\r\n    });\r\n}\r\n\r\n\r\nfunction download(def) {\r\n    // Check existence of download folder.\r\n    mkdir(\"tolokoban-nw/download\");\r\n\r\n    var downloadedFiles = [];\r\n    return new Promise(function (resolve, reject) {\r\n        var next = function() {\r\n            console.info(\"[tolokoban-nw] def=\", def);\r\n            if( def.files.length == 0 ) {\r\n                def.files = downloadedFiles;\r\n                Local.set('tolokoban-nw/install', def);\r\n                resolve();\r\n                return;\r\n            }\r\n            $('tooltip').textContent = _('download-progress', def.files.length);\r\n            var file = def.files.pop();\r\n            mkdir( 'tolokoban-nw/download/' + Path.dirname( file ) );\r\n            var url = def.url + file;\r\n            fetch( url ).then(function(response) {\r\n                if( !response.ok ) {\r\n                    throw Error(response.status + \" \" + response.statusText + \" - \" + url);\r\n                }\r\n                downloadedFiles.push( file );\r\n                return response.arrayBuffer();\r\n            }).then(function(arrayBuffer) {\r\n                var output = Path.resolve(Path.join(g_rootFolder, \"tolokoban-nw/download/\", file));\r\n                var data = new Buffer( arrayBuffer );\r\n                console.info(\"[tolokoban-nw] output=\", output);\r\n                console.info(\"[tolokoban-nw] arrayBuffer=\", arrayBuffer);\r\n                FS.writeFile( output, data, function( err ) {\r\n                    if( err ) throw Error(\"Unable to write file: \" + output + \"\\n\" + err);\r\n                    next();\r\n                });\r\n            }).catch( reject );\r\n        };\r\n\r\n        next();\r\n    });\r\n}\r\n\r\n\r\n\r\nfunction upgrade( def ) {\r\n    return new Promise(function (resolve, reject) {\r\n        var next = function() {\r\n            if( def.files.length == 0 ) {\r\n                $('tooltip').textContent = '';\r\n                Local.set('tolokoban-nw/install', null);\r\n                resolve();\r\n                return;\r\n            }\r\n            $('tooltip').textContent = _('install-progress', def.files.length);\r\n            var file = def.files.pop();\r\n            mkdir( Path.dirname( file ) );\r\n            FS.readFile( \"./tolokoban-nw/download/\" + file, function(err, data) {\r\n                if( err ) {\r\n                    console.error( err );\r\n                    reject( err );\r\n                    return;\r\n                }\r\n                FS.writeFile( file, data, function( err ) {\r\n                    if( err ) {\r\n                        console.error( err );\r\n                        reject( err );\r\n                        return;\r\n                    }\r\n                    next();\r\n                });\r\n            });\r\n        };\r\n        next();\r\n    });\r\n}\r\n\r\n\r\n  \r\nmodule.exports._ = _;\n});"],"names":["require","module","exports","get","key","def","Local","set","val","checkFirstLaunch","Promise","resolve","reject","getPackageDef","then","pkg","console","info","getRepositoryUrl","repository","repo","Text","label","_","wide","width","value","ok","Modal","padding","content","Wait","text","Button","Ok","exit","icon","type","on","exitApp","$","div","tag","DB","bind","modal","attach","window","setTimeout","focus","trim","getPackageUrl","repoUrl","pkgId","fetch","response","message","status","statusText","json","packagesList","id","catch","err","manageNetworkFailure","url","error","alert","location","reload","pkgUrl","pkgDef","confirm","nw","Window","close","execApp","setAttribute","installPackage","g_config","X","D","arguments","en","bad-repo","confirm-exit","download-progress","install-progress","loading","network-error","fr","intl","all","Err","local","FS","Path","start","readFile","out","toString","JSON","parse","ex","textContent","name","version","onExit"],"mappings":"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"},"dependencies":["mod/$","mod/dom","mod/tfw.data-binding","mod/tfw.message","mod/wdg.text","mod/wdg.wait","mod/wdg.modal","mod/tfw.storage","mod/wdg.button"]}