{"intl":"var _=function(){var D={\"en\":{\"bad-repo\":\"Unable to contact this repository!\",\"confirm-exit\":\"Are you sure you want to exit this application?\",\"download-progress\":\"Downloading in progress: $1\",\"exit\":\"Exit\",\"install-corruption\":\"<html><b style='color:red'>The install is corrupted!</b><br/>Restart the application to fix the problem.<br/>If it is still here after restart, please contact the support.\",\"install-error\":\"<html>Unable to install version <b>$1</b><pre class='error'>$2</pre>\",\"install-progress\":\"Installing version $1\",\"loading\":\"Downloading application files...\",\"network-error\":\"<html>An error occured while trying to contact repository <b>$1</b>.<pre class='error'>$2</pre><hr/>A good network connection is mandatory for the first installation.\",\"repository\":\"Repository's URL\"},\"fr\":{\"bad-repo\":\"Le dépôt spécifié ne répond pas !\",\"confirm-exit\":\"Êtes-vous sûr de vouloir quitter cette application ?\",\"download-progress\":\"Téléchargement en cours: $1\",\"exit\":\"Quitter\",\"install-corruption\":\"<html><b style='color:red'>L'installation est corrompue !</b><br/>Relancez l'application pour tenter de corriger le problème.<br/>S'il persiste, contactez le support informatique.\",\"install-error\":\"Impossible d'installer la version <b>$1</b><pre class='error'>$2</pre>\",\"install-progress\":\"Installation de la version $1\",\"loading\":\"Téléchargement de l'application...\",\"network-error\":\"<html>Une erreur est survenur lors de la tentative de connexion au dépôt <b>$1</b>.<pre class='error'>$2</pre><hr/>Une bonne connexion réseau est indispensable lors de la première installation.\",\"repository\":\"URL du dépôt\"}},X=require(\"$\").intl;function _(){return X(D,arguments);}_.all=D;return _}();\r\n","src":"/** @module tolokoban-nw */require( 'tolokoban-nw', function(require, module, exports) { var _=function(){var D={\"en\":{\"bad-repo\":\"Unable to contact this repository!\",\"confirm-exit\":\"Are you sure you want to exit this application?\",\"download-progress\":\"Downloading in progress: $1\",\"exit\":\"Exit\",\"install-corruption\":\"<html><b style='color:red'>The install is corrupted!</b><br/>Restart the application to fix the problem.<br/>If it is still here after restart, please contact the support.\",\"install-error\":\"<html>Unable to install version <b>$1</b><pre class='error'>$2</pre>\",\"install-progress\":\"Installing version $1\",\"loading\":\"Downloading application files...\",\"network-error\":\"<html>An error occured while trying to contact repository <b>$1</b>.<pre class='error'>$2</pre><hr/>A good network connection is mandatory for the first installation.\",\"repository\":\"Repository's URL\"},\"fr\":{\"bad-repo\":\"Le dépôt spécifié ne répond pas !\",\"confirm-exit\":\"Êtes-vous sûr de vouloir quitter cette application ?\",\"download-progress\":\"Téléchargement en cours: $1\",\"exit\":\"Quitter\",\"install-corruption\":\"<html><b style='color:red'>L'installation est corrompue !</b><br/>Relancez l'application pour tenter de corriger le problème.<br/>S'il persiste, contactez le support informatique.\",\"install-error\":\"Impossible d'installer la version <b>$1</b><pre class='error'>$2</pre>\",\"install-progress\":\"Installation de la version $1\",\"loading\":\"Téléchargement de l'application...\",\"network-error\":\"<html>Une erreur est survenur lors de la tentative de connexion au dépôt <b>$1</b>.<pre class='error'>$2</pre><hr/>Une bonne connexion réseau est indispensable lors de la première installation.\",\"repository\":\"URL du dépôt\"}},X=require(\"$\").intl;function _(){return X(D,arguments);}_.all=D;return _}();\r\n    /**\r\n * This is an application container.\r\n * It manages updates in background.\r\n */\r\n\r\n\"use strict\";\r\n\r\nvar $ = require(\"dom\");\r\nvar DB = require(\"tfw.data-binding\");\r\nvar Err = require(\"tfw.message\").error;\r\nvar Text = require(\"wdg.text\");\r\nvar Wait = require(\"wdg.wait\");\r\nvar Modal = require(\"wdg.modal\");\r\nvar Local = require(\"tfw.storage\").local;\r\nvar Button = require(\"wdg.button\");\r\n\r\nvar FS = require(\"node://fs\");\r\nvar Path = require(\"node://path\");\r\n\r\nvar g_rootFolder = Path.resolve('.');\r\nvar g_config;\r\n\r\nvar APP_ID = \"tlk-app-shell\";\r\nvar PACKAGE_DIR = APP_ID + \"/package\";\r\n\r\n\r\nfunction get(key, def) {\r\n    return Local.get(APP_ID + '/' + key, def);\r\n}\r\n\r\nfunction set(key, val) {\r\n    return Local.set(APP_ID + '/' + key, val);\r\n}\r\n\r\n\r\nexports.start = function() {\r\n    if( location.search == '?debug' ) {\r\n        nw.Window.get().showDevTools( null, start );\r\n        //Modal.alert(\"Start debugger now!\", start);\r\n    } else {\r\n        start();\r\n    }\r\n};\r\n\r\nfunction start() {\r\n    FS.readFile(\"package.json\", function(err, out) {\r\n        if( err ) {\r\n            Err( \"<html>Unable to read/parse <b>package.json</b>: <code>\" + err.message + \"</code>\" );\r\n            return;\r\n        }\r\n        try {\r\n            var jsn = out.toString();\r\n            g_config = JSON.parse( out.toString() );\r\n        } catch( ex ) {\r\n            Err(\"Bad JSON syntax in `package.json`!\");\r\n            return;\r\n        }\r\n        $('title').textContent = g_config.name + \" \" + g_config.version;\r\n\r\n        var pkg = get( 'install' );\r\n        if( pkg ) installPackage( pkg ).then( execApp );\r\n        else checkFirstLaunch();\r\n    });\r\n};\r\n\r\nexports.onExit = exitApp;\r\n\r\n/**\r\n * Check if it is the first launch or not.\r\n */\r\nfunction checkFirstLaunch() {\r\n    return new Promise(function (resolve, reject) {\r\n        log( \"> checkFirstLaunch()\" );\r\n        getPackageDef().then( downloadPackageIfNeeded )\r\n            .then( execApp );\r\n    });\r\n}\r\n\r\n/**\r\n * Promise which resolves in an URL of the repository.\r\n */\r\nfunction getRepositoryUrl() {\r\n    return new Promise(function (resolve, reject) {\r\n        log( \"> getRepositoryUrl()\" );\r\n        var repository = get( 'repository' );\r\n        if( repository ) return resolve( repository );\r\n        var repo = new Text({\r\n            label: _('repository'), wide: false, width: '30rem',\r\n            value: 'http://localhost/www/Cameroun/index.php'\r\n        });\r\n        var loading = new Modal({ padding: true, content: [new Wait({ text: _('loading') })] });\r\n        var ok = Button.Ok();\r\n        var exit = new Button({ text: _('exit'), icon: \"close\", type: 'simple' });\r\n        exit.on( exitApp );\r\n        var content = $.div([\r\n            repo, ok,\r\n            $.tag('hr'),\r\n            $.tag('center', [exit])\r\n        ]);\r\n        DB.bind( repo, 'action', ok, 'fire' );\r\n        var modal = new Modal({ padding: true, content: content });\r\n        modal.attach();\r\n        window.setTimeout(function() {\r\n            repo.focus = true;\r\n        }, 300);\r\n        ok.on(function() {\r\n            resolve( repo.value.trim() );\r\n        });\r\n    });\r\n}\r\n\r\n/**\r\n * Resolves in the URL of the repo and the ID of the package.\r\n * `{ repo: <string>, id: <string> }`\r\n */\r\nfunction getPackageUrl( repoUrl ) {\r\n    return new Promise(function (resolve, reject) {\r\n        log( \"> getPackageUrl(\", repoUrl, \")\" );\r\n        set( 'repository', repoUrl );\r\n        var pkgId = get( 'id' );\r\n        if( pkgId ) resolve( repoUrl + \"?\" + pkgId );\r\n        // Ask the repository the list of packages.\r\n        fetch( repoUrl ).then(function(response) {\r\n            if( !response.ok ) throw { message: response.status + \": \" + response.statusText };\r\n            return response.json();\r\n        }).then(function( packagesList ) {\r\n            // @TODO Manage the case of multi packages by adding a selection screen.\r\n            resolve({\r\n                repo: repoUrl,\r\n                id: packagesList[0].id\r\n            });\r\n        }).catch(function(err) {\r\n            manageNetworkFailure( repoUrl, err ).then( resolve );\r\n        });\r\n    });\r\n}\r\n\r\n/**\r\n * Network errors are ignored if the first installation has already occured.\r\n * That means if the `version` storage attribute has already been set.\r\n */\r\nfunction manageNetworkFailure( url, err ) {\r\n    return new Promise(function (resolve, reject) {\r\n        console.error( \"[NetworkFailure] Unable to contact \", url, \" because of error \", err );\r\n        if( get('version') ) resolve( null );\r\n        else {\r\n            Modal.alert(_('network-error', url, err.message), function() {\r\n                set('repository', null);\r\n                set('id', null);\r\n                set('version', null);\r\n                location.reload();\r\n            });\r\n        }\r\n    });\r\n}\r\n\r\nfunction manageInstallFailure( pkg, err ) {\r\n    return new Promise(function (resolve, reject) {\r\n        console.error( \"[InstallFailure] Unable to install package \", pkg, \" because of error \", err );\r\n        Modal.alert(_('install-error', pkg.version, err.message), function() {\r\n            set('version', null);\r\n            if( !get('version') ) location.reload();\r\n        });\r\n    });\r\n}\r\n\r\n/**\r\n * Resolves in a package definition or `null`.\r\n * A package definition has this format:\r\n * ```\r\n * {\r\n *   url: <string>\r\n *   version: <string>\r\n *   files: [<string>, ...]\r\n * }\r\n * ```\r\n */\r\nfunction getPackageDef() {\r\n    return new Promise(function (resolve, reject) {\r\n        log( \"> getPackageDef()\" );\r\n        getRepositoryUrl().then( getPackageUrl ).then(function( pkgUrl ) {\r\n            var url = pkgUrl.repo + \"?\" + pkgUrl.id;\r\n            fetch( url ).then(function( response ) {\r\n                if( !response.ok ) throw { message: response.status + \": \" + response.statusText };\r\n                return response.json();\r\n            }).then(function(pkgDef) {\r\n                resolve(pkgDef);\r\n            }).catch(function(err) {\r\n                manageNetworkFailure( url, err ).then( resolve );\r\n            });\r\n        });\r\n    });\r\n}\r\n\r\n/**\r\n * If `get(\"version\")` is missing  or different from `pkg.version`, we\r\n * must download the package files.\r\n * It  `get(\"version\")` is  not  missing, the  downloads  will run  in\r\n * background. Otherwise, we will wait for all the downloads to finish\r\n * before resolving.\r\n */\r\nfunction downloadPackageIfNeeded( pkg ) {\r\n    // Check existence of download folder.\r\n    mkdir( PACKAGE_DIR );\r\n\r\n    var downloadedFiles = [];\r\n    return new Promise(function (resolve, reject) {\r\n        log( \"> downloadPackageIfNeeded(\", pkg, \")\" );\r\n        var next = function() {\r\n            if( pkg.files.length == 0 ) {\r\n                log(\"Download is done!\");\r\n                $('tooltip').textContent = '';\r\n                pkg.files = downloadedFiles;\r\n                set('install', pkg);\r\n                if( get('version', null) === null ) {\r\n                    // First install.\r\n                    installPackage( pkg ).then( resolve );\r\n                }\r\n                return;\r\n            }\r\n            $('tooltip').textContent = _('download-progress', pkg.files.length);\r\n            var file = pkg.files.pop();\r\n            var dir = PACKAGE_DIR + Path.dirname( file );\r\n            var url = pkg.url + file;\r\n            fetch( url, {\r\n                cache: 'no-cache',\r\n                mode: 'cors',\r\n                redirect: 'follow'\r\n            }).then(function(response) {\r\n                log( response.url, response.ok );\r\n                if( !response.ok ) {\r\n                    throw Error(response.status + \" \" + response.statusText + \" - \" + response.url);\r\n                }\r\n                downloadedFiles.push( file );\r\n                return response.arrayBuffer();\r\n            }).then(function(arrayBuffer) {\r\n                var output = Path.resolve(Path.join(g_rootFolder, PACKAGE_DIR, file));\r\n                mkdir( dirname( output ) );\r\n                var data = new Buffer( arrayBuffer );\r\n                FS.writeFile( output, data, function( err ) {\r\n                    if( err ) {\r\n                        console.error( \"Unable to write file: \" + output + \"\\n\", err );\r\n                        throw Error(\"Unable to write file: \" + output + \"\\n\" + err);\r\n                    }\r\n                    next();\r\n                });\r\n            }).catch(function(err) {\r\n                manageNetworkFailure( url, err ).then( resolve );\r\n            });\r\n        };\r\n\r\n        if( !pkg || get('version') === pkg.version ) {\r\n            // Version is uptodate, or we were unable to download the package definition.\r\n            log(\"get('version')=...\", get('version'));\r\n            log(\"pkg.version=...\", pkg.version);\r\n            resolve( pkg );\r\n        } else {\r\n            if( get('version') ) {\r\n                // New version is downloaded in background.\r\n                log(\"Background download...\");\r\n                resolve( pkg );\r\n            }\r\n            log(\"Start download.\");\r\n            next();\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * Close the mian window, hence exit the application.\r\n */\r\nfunction exitApp( withoutConfirmation ) {\r\n    if( withoutConfirmation ) nw.Window.get().close();\r\n    else Modal.confirm(_('confirm-exit'), function() {\r\n        nw.Window.get().close();\r\n    });\r\n}\r\n\r\n/**\r\n * Execute the application by loading `index.html` page.\r\n */\r\nfunction execApp() {\r\n    try {\r\n        log( \"> execApp()\" );\r\n        if( !FS.existsSync( \"./index.html\" ) ) {\r\n            throw Error(\"Missing start page!\");\r\n        }\r\n        $('title').textContent = g_config.name + \" \" + g_config.version;\r\n        $('iframe').setAttribute( 'src', 'index.html' );\r\n    } catch( ex ) {\r\n        set('version', null);\r\n        Modal.alert(_('install-corruption'), exitApp.bind( null, true ));\r\n    }\r\n}\r\n\r\n/**\r\n * Install package stored in `install`.\r\n */\r\nfunction installPackage( pkg ) {\r\n    return new Promise(function (resolve, reject) {\r\n        log( \"> installPackage(\", pkg, \")\" );\r\n        // If installation failed, the package will be doanloaded again.\r\n        set('install', null);\r\n\r\n        var modal = new Modal({\r\n            content: new Wait({ text: _('install-progress', pkg.version) })\r\n        });\r\n        modal.attach();\r\n\r\n        var next = function() {\r\n            if( pkg.files.length == 0 ) {\r\n                // Everything has been installed, we can update the version number.\r\n                set('version', pkg.version);\r\n                g_config.version = pkg.version;\r\n                g_config.name = pkg.name;\r\n                $('tooltip').textContent = '';\r\n                FS.writeFile( \"package.json\", JSON.stringify( g_config, null, '    ' ), function( err ) {\r\n                    modal.detach();\r\n                    resolve();\r\n                });\r\n                return;\r\n            }\r\n            $('tooltip').textContent = _('install-progress', pkg.files.length);\r\n            var file = pkg.files.pop();\r\n            mkdir( dirname( file ) );\r\n            FS.readFile( \"./\" + PACKAGE_DIR + \"/\" + file, function(err, data) {\r\n                if( err ) {\r\n                    console.error( err );\r\n                    manageInstallFailure( pkg, err );\r\n                    return;\r\n                }\r\n                FS.writeFile( file, data, function( err ) {\r\n                    if( err ) {\r\n                        console.error( err );\r\n                        manageInstallFailure( pkg, err );\r\n                        return;\r\n                    }\r\n                    next();\r\n                });\r\n            });\r\n        };\r\n        // Start installation in 600 ms to give the time to read the version number.\r\n        window.setTimeout( next, 600 );\r\n    });\r\n}\r\n\r\n/**\r\n * Create directories recursively.\r\n * If they are already created, no problem.\r\n */\r\nfunction mkdir(folder) {\r\n    var sep = findSeparator(folder);\r\n    var folders = folder.split( sep );\r\n    var dir = '.';\r\n    folders.forEach(function (folder) {\r\n        if( folder.length == 2 && folder.charAt(1) == ':' ) {\r\n            // dealing with windows drive letter (example: `C:`).\r\n            dir = folder;\r\n        } else {\r\n            dir += sep + folder;\r\n        }\r\n        if( !FS.existsSync( dir ) ) {\r\n            log( \"mkdir \", dir );\r\n            FS.mkdirSync( dir );\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * Remove the filename at the end of `path`.\r\n */\r\nfunction dirname( path ) {\r\n    var pos = path.lastIndexOf( findSeparator(path) );\r\n    if( pos == -1 ) return path;\r\n    return path.substr(0, pos);\r\n}\r\n\r\n/**\r\n * Return path separator: `/` or `\\`.\r\n * The better is to avoid unix-like path with `\\`.\r\n */\r\nfunction findSeparator( path ) {\r\n    var backslash = path.split('\\\\').length;\r\n    var slash = path.split('/').length;\r\n    if( backslash > slash ) return '\\\\';\r\n    return '/';\r\n}\r\n\r\nfunction log() {\r\n    var args = Array.prototype.slice.call( arguments );\r\n    args.unshift( \"[\" + APP_ID + \"]\" );\r\n    console.log.apply( console, args );\r\n}\r\n\r\n\r\n  \r\nmodule.exports._ = _;\n/**\n * @module tolokoban-nw\n * @see module:$\n * @see module:dom\n * @see module:tfw.data-binding\n * @see module:tfw.message\n * @see module:wdg.text\n * @see module:wdg.wait\n * @see module:wdg.modal\n * @see module:tfw.storage\n * @see module:wdg.button\n\n */\n});","zip":"require(\"tolokoban-nw\",function(e,n,t){function r(e,n){return F.get(E+\"/\"+e,n)}function o(e,n){return F.set(E+\"/\"+e,n)}function i(){A.readFile(\"package.json\",function(e,n){if(e)return void $(\"<html>Unable to read/parse <b>package.json</b>: <code>\"+e.message+\"</code>\");try{n.toString();x=JSON.parse(n.toString())}catch(e){return void $(\"Bad JSON syntax in `package.json`!\")}k(\"title\").textContent=x.name+\" \"+x.version;var t=r(\"install\");t?g(t).then(h):l()})}function l(){return new Promise(function(e,n){b(\"> checkFirstLaunch()\"),f().then(p).then(h)})}function s(){return new Promise(function(e,n){b(\"> getRepositoryUrl()\");var t=r(\"repository\");if(t)return e(t);var o=new P({label:y(\"repository\"),wide:!1,width:\"30rem\",value:\"http://localhost/www/Cameroun/index.php\"}),i=(new T({padding:!0,content:[new S({text:y(\"loading\")})]}),j.Ok()),l=new j({text:y(\"exit\"),icon:\"close\",type:\"simple\"});l.on(d);var s=k.div([o,i,k.tag(\"hr\"),k.tag(\"center\",[l])]);U.bind(o,\"action\",i,\"fire\");var a=new T({padding:!0,content:s});a.attach(),window.setTimeout(function(){o.focus=!0},300),i.on(function(){e(o.value.trim())})})}function a(e){return new Promise(function(n,t){b(\"> getPackageUrl(\",e,\")\"),o(\"repository\",e);var i=r(\"id\");i&&n(e+\"?\"+i),fetch(e).then(function(e){if(!e.ok)throw{message:e.status+\": \"+e.statusText};return e.json()}).then(function(t){n({repo:e,id:t[0].id})}).catch(function(t){c(e,t).then(n)})})}function c(e,n){return new Promise(function(t,i){console.error(\"[NetworkFailure] Unable to contact \",e,\" because of error \",n),r(\"version\")?t(null):T.alert(y(\"network-error\",e,n.message),function(){o(\"repository\",null),o(\"id\",null),o(\"version\",null),location.reload()})})}function u(e,n){return new Promise(function(t,i){console.error(\"[InstallFailure] Unable to install package \",e,\" because of error \",n),T.alert(y(\"install-error\",e.version,n.message),function(){o(\"version\",null),r(\"version\")||location.reload()})})}function f(){return new Promise(function(e,n){b(\"> getPackageDef()\"),s().then(a).then(function(n){var t=n.repo+\"?\"+n.id;fetch(t).then(function(e){if(!e.ok)throw{message:e.status+\": \"+e.statusText};return e.json()}).then(function(n){e(n)}).catch(function(n){c(t,n).then(e)})})})}function p(e){w(R);var n=[];return new Promise(function(t,i){b(\"> downloadPackageIfNeeded(\",e,\")\");var l=function(){if(0==e.files.length)return b(\"Download is done!\"),k(\"tooltip\").textContent=\"\",e.files=n,o(\"install\",e),void(null===r(\"version\",null)&&g(e).then(t));k(\"tooltip\").textContent=y(\"download-progress\",e.files.length);var i=e.files.pop(),s=(R+C.dirname(i),e.url+i);fetch(s,{cache:\"no-cache\",mode:\"cors\",redirect:\"follow\"}).then(function(e){if(b(e.url,e.ok),!e.ok)throw Error(e.status+\" \"+e.statusText+\" - \"+e.url);return n.push(i),e.arrayBuffer()}).then(function(e){var n=C.resolve(C.join(I,R,i));w(v(n));var t=new Buffer(e);A.writeFile(n,t,function(e){if(e)throw console.error(\"Unable to write file: \"+n+\"\\n\",e),Error(\"Unable to write file: \"+n+\"\\n\"+e);l()})}).catch(function(e){c(s,e).then(t)})};e&&r(\"version\")!==e.version?(r(\"version\")&&(b(\"Background download...\"),t(e)),b(\"Start download.\"),l()):(b(\"get('version')=...\",r(\"version\")),b(\"pkg.version=...\",e.version),t(e))})}function d(e){e?nw.Window.get().close():T.confirm(y(\"confirm-exit\"),function(){nw.Window.get().close()})}function h(){try{if(b(\"> execApp()\"),!A.existsSync(\"./index.html\"))throw Error(\"Missing start page!\");k(\"title\").textContent=x.name+\" \"+x.version,k(\"iframe\").setAttribute(\"src\",\"index.html\")}catch(e){o(\"version\",null),T.alert(y(\"install-corruption\"),d.bind(null,!0))}}function g(e){return new Promise(function(n,t){b(\"> installPackage(\",e,\")\"),o(\"install\",null);var r=new T({content:new S({text:y(\"install-progress\",e.version)})});r.attach();var i=function(){if(0==e.files.length)return o(\"version\",e.version),x.version=e.version,x.name=e.name,k(\"tooltip\").textContent=\"\",void A.writeFile(\"package.json\",JSON.stringify(x,null,\"    \"),function(e){r.detach(),n()});k(\"tooltip\").textContent=y(\"install-progress\",e.files.length);var t=e.files.pop();w(v(t)),A.readFile(\"./\"+R+\"/\"+t,function(n,r){return n?(console.error(n),void u(e,n)):void A.writeFile(t,r,function(n){return n?(console.error(n),void u(e,n)):void i()})})};window.setTimeout(i,600)})}function w(e){var n=m(e),t=e.split(n),r=\".\";t.forEach(function(e){2==e.length&&\":\"==e.charAt(1)?r=e:r+=n+e,A.existsSync(r)||(b(\"mkdir \",r),A.mkdirSync(r))})}function v(e){var n=e.lastIndexOf(m(e));return n==-1?e:e.substr(0,n)}function m(e){var n=e.split(\"\\\\\").length,t=e.split(\"/\").length;return n>t?\"\\\\\":\"/\"}function b(){var e=Array.prototype.slice.call(arguments);e.unshift(\"[\"+E+\"]\"),console.log.apply(console,e)}var x,y=function(){function n(){return r(t,arguments)}var t={en:{\"bad-repo\":\"Unable to contact this repository!\",\"confirm-exit\":\"Are you sure you want to exit this application?\",\"download-progress\":\"Downloading in progress: $1\",exit:\"Exit\",\"install-corruption\":\"<html><b style='color:red'>The install is corrupted!</b><br/>Restart the application to fix the problem.<br/>If it is still here after restart, please contact the support.\",\"install-error\":\"<html>Unable to install version <b>$1</b><pre class='error'>$2</pre>\",\"install-progress\":\"Installing version $1\",loading:\"Downloading application files...\",\"network-error\":\"<html>An error occured while trying to contact repository <b>$1</b>.<pre class='error'>$2</pre><hr/>A good network connection is mandatory for the first installation.\",repository:\"Repository's URL\"},fr:{\"bad-repo\":\"Le dépôt spécifié ne répond pas !\",\"confirm-exit\":\"Êtes-vous sûr de vouloir quitter cette application ?\",\"download-progress\":\"Téléchargement en cours: $1\",exit:\"Quitter\",\"install-corruption\":\"<html><b style='color:red'>L'installation est corrompue !</b><br/>Relancez l'application pour tenter de corriger le problème.<br/>S'il persiste, contactez le support informatique.\",\"install-error\":\"Impossible d'installer la version <b>$1</b><pre class='error'>$2</pre>\",\"install-progress\":\"Installation de la version $1\",loading:\"Téléchargement de l'application...\",\"network-error\":\"<html>Une erreur est survenur lors de la tentative de connexion au dépôt <b>$1</b>.<pre class='error'>$2</pre><hr/>Une bonne connexion réseau est indispensable lors de la première installation.\",repository:\"URL du dépôt\"}},r=e(\"$\").intl;return n.all=t,n}(),k=e(\"dom\"),U=e(\"tfw.data-binding\"),$=e(\"tfw.message\").error,P=e(\"wdg.text\"),S=e(\"wdg.wait\"),T=e(\"wdg.modal\"),F=e(\"tfw.storage\").local,j=e(\"wdg.button\"),A=e(\"node://fs\"),C=e(\"node://path\"),I=C.resolve(\".\"),E=\"tlk-app-shell\",R=E+\"/package\";t.start=function(){\"?debug\"==location.search?nw.Window.get().showDevTools(null,i):i()},t.onExit=d,n.exports._=y});\n//# sourceMappingURL=tolokoban-nw.js.map","map":{"version":3,"file":"tolokoban-nw.js","sources":["tolokoban-nw.js"],"sourcesContent":["/** @module tolokoban-nw */require( 'tolokoban-nw', function(require, module, exports) { var _=function(){var D={\"en\":{\"bad-repo\":\"Unable to contact this repository!\",\"confirm-exit\":\"Are you sure you want to exit this application?\",\"download-progress\":\"Downloading in progress: $1\",\"exit\":\"Exit\",\"install-corruption\":\"<html><b style='color:red'>The install is corrupted!</b><br/>Restart the application to fix the problem.<br/>If it is still here after restart, please contact the support.\",\"install-error\":\"<html>Unable to install version <b>$1</b><pre class='error'>$2</pre>\",\"install-progress\":\"Installing version $1\",\"loading\":\"Downloading application files...\",\"network-error\":\"<html>An error occured while trying to contact repository <b>$1</b>.<pre class='error'>$2</pre><hr/>A good network connection is mandatory for the first installation.\",\"repository\":\"Repository's URL\"},\"fr\":{\"bad-repo\":\"Le dépôt spécifié ne répond pas !\",\"confirm-exit\":\"Êtes-vous sûr de vouloir quitter cette application ?\",\"download-progress\":\"Téléchargement en cours: $1\",\"exit\":\"Quitter\",\"install-corruption\":\"<html><b style='color:red'>L'installation est corrompue !</b><br/>Relancez l'application pour tenter de corriger le problème.<br/>S'il persiste, contactez le support informatique.\",\"install-error\":\"Impossible d'installer la version <b>$1</b><pre class='error'>$2</pre>\",\"install-progress\":\"Installation de la version $1\",\"loading\":\"Téléchargement de l'application...\",\"network-error\":\"<html>Une erreur est survenur lors de la tentative de connexion au dépôt <b>$1</b>.<pre class='error'>$2</pre><hr/>Une bonne connexion réseau est indispensable lors de la première installation.\",\"repository\":\"URL du dépôt\"}},X=require(\"$\").intl;function _(){return X(D,arguments);}_.all=D;return _}();\r\n    /**\r\n * This is an application container.\r\n * It manages updates in background.\r\n */\r\n\r\n\"use strict\";\r\n\r\nvar $ = require(\"dom\");\r\nvar DB = require(\"tfw.data-binding\");\r\nvar Err = require(\"tfw.message\").error;\r\nvar Text = require(\"wdg.text\");\r\nvar Wait = require(\"wdg.wait\");\r\nvar Modal = require(\"wdg.modal\");\r\nvar Local = require(\"tfw.storage\").local;\r\nvar Button = require(\"wdg.button\");\r\n\r\nvar FS = require(\"node://fs\");\r\nvar Path = require(\"node://path\");\r\n\r\nvar g_rootFolder = Path.resolve('.');\r\nvar g_config;\r\n\r\nvar APP_ID = \"tlk-app-shell\";\r\nvar PACKAGE_DIR = APP_ID + \"/package\";\r\n\r\n\r\nfunction get(key, def) {\r\n    return Local.get(APP_ID + '/' + key, def);\r\n}\r\n\r\nfunction set(key, val) {\r\n    return Local.set(APP_ID + '/' + key, val);\r\n}\r\n\r\n\r\nexports.start = function() {\r\n    if( location.search == '?debug' ) {\r\n        nw.Window.get().showDevTools( null, start );\r\n        //Modal.alert(\"Start debugger now!\", start);\r\n    } else {\r\n        start();\r\n    }\r\n};\r\n\r\nfunction start() {\r\n    FS.readFile(\"package.json\", function(err, out) {\r\n        if( err ) {\r\n            Err( \"<html>Unable to read/parse <b>package.json</b>: <code>\" + err.message + \"</code>\" );\r\n            return;\r\n        }\r\n        try {\r\n            var jsn = out.toString();\r\n            g_config = JSON.parse( out.toString() );\r\n        } catch( ex ) {\r\n            Err(\"Bad JSON syntax in `package.json`!\");\r\n            return;\r\n        }\r\n        $('title').textContent = g_config.name + \" \" + g_config.version;\r\n\r\n        var pkg = get( 'install' );\r\n        if( pkg ) installPackage( pkg ).then( execApp );\r\n        else checkFirstLaunch();\r\n    });\r\n};\r\n\r\nexports.onExit = exitApp;\r\n\r\n/**\r\n * Check if it is the first launch or not.\r\n */\r\nfunction checkFirstLaunch() {\r\n    return new Promise(function (resolve, reject) {\r\n        log( \"> checkFirstLaunch()\" );\r\n        getPackageDef().then( downloadPackageIfNeeded )\r\n            .then( execApp );\r\n    });\r\n}\r\n\r\n/**\r\n * Promise which resolves in an URL of the repository.\r\n */\r\nfunction getRepositoryUrl() {\r\n    return new Promise(function (resolve, reject) {\r\n        log( \"> getRepositoryUrl()\" );\r\n        var repository = get( 'repository' );\r\n        if( repository ) return resolve( repository );\r\n        var repo = new Text({\r\n            label: _('repository'), wide: false, width: '30rem',\r\n            value: 'http://localhost/www/Cameroun/index.php'\r\n        });\r\n        var loading = new Modal({ padding: true, content: [new Wait({ text: _('loading') })] });\r\n        var ok = Button.Ok();\r\n        var exit = new Button({ text: _('exit'), icon: \"close\", type: 'simple' });\r\n        exit.on( exitApp );\r\n        var content = $.div([\r\n            repo, ok,\r\n            $.tag('hr'),\r\n            $.tag('center', [exit])\r\n        ]);\r\n        DB.bind( repo, 'action', ok, 'fire' );\r\n        var modal = new Modal({ padding: true, content: content });\r\n        modal.attach();\r\n        window.setTimeout(function() {\r\n            repo.focus = true;\r\n        }, 300);\r\n        ok.on(function() {\r\n            resolve( repo.value.trim() );\r\n        });\r\n    });\r\n}\r\n\r\n/**\r\n * Resolves in the URL of the repo and the ID of the package.\r\n * `{ repo: <string>, id: <string> }`\r\n */\r\nfunction getPackageUrl( repoUrl ) {\r\n    return new Promise(function (resolve, reject) {\r\n        log( \"> getPackageUrl(\", repoUrl, \")\" );\r\n        set( 'repository', repoUrl );\r\n        var pkgId = get( 'id' );\r\n        if( pkgId ) resolve( repoUrl + \"?\" + pkgId );\r\n        // Ask the repository the list of packages.\r\n        fetch( repoUrl ).then(function(response) {\r\n            if( !response.ok ) throw { message: response.status + \": \" + response.statusText };\r\n            return response.json();\r\n        }).then(function( packagesList ) {\r\n            // @TODO Manage the case of multi packages by adding a selection screen.\r\n            resolve({\r\n                repo: repoUrl,\r\n                id: packagesList[0].id\r\n            });\r\n        }).catch(function(err) {\r\n            manageNetworkFailure( repoUrl, err ).then( resolve );\r\n        });\r\n    });\r\n}\r\n\r\n/**\r\n * Network errors are ignored if the first installation has already occured.\r\n * That means if the `version` storage attribute has already been set.\r\n */\r\nfunction manageNetworkFailure( url, err ) {\r\n    return new Promise(function (resolve, reject) {\r\n        console.error( \"[NetworkFailure] Unable to contact \", url, \" because of error \", err );\r\n        if( get('version') ) resolve( null );\r\n        else {\r\n            Modal.alert(_('network-error', url, err.message), function() {\r\n                set('repository', null);\r\n                set('id', null);\r\n                set('version', null);\r\n                location.reload();\r\n            });\r\n        }\r\n    });\r\n}\r\n\r\nfunction manageInstallFailure( pkg, err ) {\r\n    return new Promise(function (resolve, reject) {\r\n        console.error( \"[InstallFailure] Unable to install package \", pkg, \" because of error \", err );\r\n        Modal.alert(_('install-error', pkg.version, err.message), function() {\r\n            set('version', null);\r\n            if( !get('version') ) location.reload();\r\n        });\r\n    });\r\n}\r\n\r\n/**\r\n * Resolves in a package definition or `null`.\r\n * A package definition has this format:\r\n * ```\r\n * {\r\n *   url: <string>\r\n *   version: <string>\r\n *   files: [<string>, ...]\r\n * }\r\n * ```\r\n */\r\nfunction getPackageDef() {\r\n    return new Promise(function (resolve, reject) {\r\n        log( \"> getPackageDef()\" );\r\n        getRepositoryUrl().then( getPackageUrl ).then(function( pkgUrl ) {\r\n            var url = pkgUrl.repo + \"?\" + pkgUrl.id;\r\n            fetch( url ).then(function( response ) {\r\n                if( !response.ok ) throw { message: response.status + \": \" + response.statusText };\r\n                return response.json();\r\n            }).then(function(pkgDef) {\r\n                resolve(pkgDef);\r\n            }).catch(function(err) {\r\n                manageNetworkFailure( url, err ).then( resolve );\r\n            });\r\n        });\r\n    });\r\n}\r\n\r\n/**\r\n * If `get(\"version\")` is missing  or different from `pkg.version`, we\r\n * must download the package files.\r\n * It  `get(\"version\")` is  not  missing, the  downloads  will run  in\r\n * background. Otherwise, we will wait for all the downloads to finish\r\n * before resolving.\r\n */\r\nfunction downloadPackageIfNeeded( pkg ) {\r\n    // Check existence of download folder.\r\n    mkdir( PACKAGE_DIR );\r\n\r\n    var downloadedFiles = [];\r\n    return new Promise(function (resolve, reject) {\r\n        log( \"> downloadPackageIfNeeded(\", pkg, \")\" );\r\n        var next = function() {\r\n            if( pkg.files.length == 0 ) {\r\n                log(\"Download is done!\");\r\n                $('tooltip').textContent = '';\r\n                pkg.files = downloadedFiles;\r\n                set('install', pkg);\r\n                if( get('version', null) === null ) {\r\n                    // First install.\r\n                    installPackage( pkg ).then( resolve );\r\n                }\r\n                return;\r\n            }\r\n            $('tooltip').textContent = _('download-progress', pkg.files.length);\r\n            var file = pkg.files.pop();\r\n            var dir = PACKAGE_DIR + Path.dirname( file );\r\n            var url = pkg.url + file;\r\n            fetch( url, {\r\n                cache: 'no-cache',\r\n                mode: 'cors',\r\n                redirect: 'follow'\r\n            }).then(function(response) {\r\n                log( response.url, response.ok );\r\n                if( !response.ok ) {\r\n                    throw Error(response.status + \" \" + response.statusText + \" - \" + response.url);\r\n                }\r\n                downloadedFiles.push( file );\r\n                return response.arrayBuffer();\r\n            }).then(function(arrayBuffer) {\r\n                var output = Path.resolve(Path.join(g_rootFolder, PACKAGE_DIR, file));\r\n                mkdir( dirname( output ) );\r\n                var data = new Buffer( arrayBuffer );\r\n                FS.writeFile( output, data, function( err ) {\r\n                    if( err ) {\r\n                        console.error( \"Unable to write file: \" + output + \"\\n\", err );\r\n                        throw Error(\"Unable to write file: \" + output + \"\\n\" + err);\r\n                    }\r\n                    next();\r\n                });\r\n            }).catch(function(err) {\r\n                manageNetworkFailure( url, err ).then( resolve );\r\n            });\r\n        };\r\n\r\n        if( !pkg || get('version') === pkg.version ) {\r\n            // Version is uptodate, or we were unable to download the package definition.\r\n            log(\"get('version')=...\", get('version'));\r\n            log(\"pkg.version=...\", pkg.version);\r\n            resolve( pkg );\r\n        } else {\r\n            if( get('version') ) {\r\n                // New version is downloaded in background.\r\n                log(\"Background download...\");\r\n                resolve( pkg );\r\n            }\r\n            log(\"Start download.\");\r\n            next();\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * Close the mian window, hence exit the application.\r\n */\r\nfunction exitApp( withoutConfirmation ) {\r\n    if( withoutConfirmation ) nw.Window.get().close();\r\n    else Modal.confirm(_('confirm-exit'), function() {\r\n        nw.Window.get().close();\r\n    });\r\n}\r\n\r\n/**\r\n * Execute the application by loading `index.html` page.\r\n */\r\nfunction execApp() {\r\n    try {\r\n        log( \"> execApp()\" );\r\n        if( !FS.existsSync( \"./index.html\" ) ) {\r\n            throw Error(\"Missing start page!\");\r\n        }\r\n        $('title').textContent = g_config.name + \" \" + g_config.version;\r\n        $('iframe').setAttribute( 'src', 'index.html' );\r\n    } catch( ex ) {\r\n        set('version', null);\r\n        Modal.alert(_('install-corruption'), exitApp.bind( null, true ));\r\n    }\r\n}\r\n\r\n/**\r\n * Install package stored in `install`.\r\n */\r\nfunction installPackage( pkg ) {\r\n    return new Promise(function (resolve, reject) {\r\n        log( \"> installPackage(\", pkg, \")\" );\r\n        // If installation failed, the package will be doanloaded again.\r\n        set('install', null);\r\n\r\n        var modal = new Modal({\r\n            content: new Wait({ text: _('install-progress', pkg.version) })\r\n        });\r\n        modal.attach();\r\n\r\n        var next = function() {\r\n            if( pkg.files.length == 0 ) {\r\n                // Everything has been installed, we can update the version number.\r\n                set('version', pkg.version);\r\n                g_config.version = pkg.version;\r\n                g_config.name = pkg.name;\r\n                $('tooltip').textContent = '';\r\n                FS.writeFile( \"package.json\", JSON.stringify( g_config, null, '    ' ), function( err ) {\r\n                    modal.detach();\r\n                    resolve();\r\n                });\r\n                return;\r\n            }\r\n            $('tooltip').textContent = _('install-progress', pkg.files.length);\r\n            var file = pkg.files.pop();\r\n            mkdir( dirname( file ) );\r\n            FS.readFile( \"./\" + PACKAGE_DIR + \"/\" + file, function(err, data) {\r\n                if( err ) {\r\n                    console.error( err );\r\n                    manageInstallFailure( pkg, err );\r\n                    return;\r\n                }\r\n                FS.writeFile( file, data, function( err ) {\r\n                    if( err ) {\r\n                        console.error( err );\r\n                        manageInstallFailure( pkg, err );\r\n                        return;\r\n                    }\r\n                    next();\r\n                });\r\n            });\r\n        };\r\n        // Start installation in 600 ms to give the time to read the version number.\r\n        window.setTimeout( next, 600 );\r\n    });\r\n}\r\n\r\n/**\r\n * Create directories recursively.\r\n * If they are already created, no problem.\r\n */\r\nfunction mkdir(folder) {\r\n    var sep = findSeparator(folder);\r\n    var folders = folder.split( sep );\r\n    var dir = '.';\r\n    folders.forEach(function (folder) {\r\n        if( folder.length == 2 && folder.charAt(1) == ':' ) {\r\n            // dealing with windows drive letter (example: `C:`).\r\n            dir = folder;\r\n        } else {\r\n            dir += sep + folder;\r\n        }\r\n        if( !FS.existsSync( dir ) ) {\r\n            log( \"mkdir \", dir );\r\n            FS.mkdirSync( dir );\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * Remove the filename at the end of `path`.\r\n */\r\nfunction dirname( path ) {\r\n    var pos = path.lastIndexOf( findSeparator(path) );\r\n    if( pos == -1 ) return path;\r\n    return path.substr(0, pos);\r\n}\r\n\r\n/**\r\n * Return path separator: `/` or `\\`.\r\n * The better is to avoid unix-like path with `\\`.\r\n */\r\nfunction findSeparator( path ) {\r\n    var backslash = path.split('\\\\').length;\r\n    var slash = path.split('/').length;\r\n    if( backslash > slash ) return '\\\\';\r\n    return '/';\r\n}\r\n\r\nfunction log() {\r\n    var args = Array.prototype.slice.call( arguments );\r\n    args.unshift( \"[\" + APP_ID + \"]\" );\r\n    console.log.apply( console, args );\r\n}\r\n\r\n\r\n  \r\nmodule.exports._ = _;\n});"],"names":["require","module","exports","get","key","def","Local","APP_ID","set","val","start","FS","readFile","err","out","Err","message","toString","g_config","JSON","parse","ex","$","textContent","name","version","pkg","installPackage","then","execApp","checkFirstLaunch","Promise","resolve","reject","log","getPackageDef","downloadPackageIfNeeded","getRepositoryUrl","repository","repo","Text","label","_","wide","width","value","ok","Modal","padding","content","Wait","text","Button","Ok","exit","icon","type","on","exitApp","div","tag","DB","bind","modal","attach","window","setTimeout","focus","trim","getPackageUrl","repoUrl","pkgId","fetch","response","status","statusText","json","packagesList","id","catch","manageNetworkFailure","url","console","error","alert","location","reload","manageInstallFailure","pkgUrl","pkgDef","mkdir","PACKAGE_DIR","downloadedFiles","next","files","length","file","pop","Path","dirname","cache","mode","redirect","Error","push","arrayBuffer","output","join","g_rootFolder","data","Buffer","writeFile","withoutConfirmation","nw","Window","close","confirm","existsSync","setAttribute","stringify","detach","folder","sep","findSeparator","folders","split","dir","forEach","charAt","mkdirSync","path","pos","lastIndexOf","substr","backslash","slash","args","Array","prototype","slice","call","arguments","unshift","apply","X","D","en","bad-repo","confirm-exit","download-progress","install-corruption","install-error","install-progress","loading","network-error","fr","intl","all","local","search","showDevTools","onExit"],"mappings":"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"},"dependencies":["mod/$","mod/dom","mod/tfw.data-binding","mod/tfw.message","mod/wdg.text","mod/wdg.wait","mod/wdg.modal","mod/tfw.storage","mod/wdg.button"]}