{"intl":"var _=function(){var D={\"en\":{\"available\":\"<html>Version <b>$1</b> is available!<br/>Restart to install it.\",\"bad-repo\":\"Unable to contact this repository!\",\"confirm-exit\":\"Are you sure you want to exit this application?\",\"download-progress\":\"Downloading in progress: $1\",\"exit\":\"Exit\",\"install-corruption\":\"<html><b style='color:red'>The install is corrupted!</b><br/>Restart the application to fix the problem.<br/>If it is still here after restart, please contact the support.\",\"install-error\":\"<html>Unable to install version <b>$1</b><pre class='error'>$2</pre>\",\"install-progress\":\"Installing version $1\",\"loading\":\"Downloading application files...\",\"network-error\":\"<html>An error occured while trying to contact repository <b>$1</b>.<pre class='error'>$2</pre><hr/>A good network connection is mandatory for the first installation.\",\"repository\":\"Repository's URL\"},\"fr\":{\"available\":\"<html>La version <b>$1</b> est disponible !<br/>Relancer l'application pour l'installer.\",\"bad-repo\":\"Le dépôt spécifié ne répond pas !\",\"confirm-exit\":\"Êtes-vous sûr de vouloir quitter cette application ?\",\"download-progress\":\"Téléchargement en cours: $1\",\"exit\":\"Quitter\",\"install-corruption\":\"<html><b style='color:red'>L'installation est corrompue !</b><br/>Relancez l'application pour tenter de corriger le problème.<br/>S'il persiste, contactez le support informatique.\",\"install-error\":\"Impossible d'installer la version <b>$1</b><pre class='error'>$2</pre>\",\"install-progress\":\"Installation de la version $1\",\"loading\":\"Téléchargement de l'application...\",\"network-error\":\"<html>Une erreur est survenur lors de la tentative de connexion au dépôt <b>$1</b>.<pre class='error'>$2</pre><hr/>Une bonne connexion réseau est indispensable lors de la première installation.\",\"repository\":\"URL du dépôt\"}},X=require(\"$\").intl;function _(){return X(D,arguments);}_.all=D;return _}();\n","src":"/** @module tolokoban-nw */require( 'tolokoban-nw', function(require, module, exports) { var _=function(){var D={\"en\":{\"available\":\"<html>Version <b>$1</b> is available!<br/>Restart to install it.\",\"bad-repo\":\"Unable to contact this repository!\",\"confirm-exit\":\"Are you sure you want to exit this application?\",\"download-progress\":\"Downloading in progress: $1\",\"exit\":\"Exit\",\"install-corruption\":\"<html><b style='color:red'>The install is corrupted!</b><br/>Restart the application to fix the problem.<br/>If it is still here after restart, please contact the support.\",\"install-error\":\"<html>Unable to install version <b>$1</b><pre class='error'>$2</pre>\",\"install-progress\":\"Installing version $1\",\"loading\":\"Downloading application files...\",\"network-error\":\"<html>An error occured while trying to contact repository <b>$1</b>.<pre class='error'>$2</pre><hr/>A good network connection is mandatory for the first installation.\",\"repository\":\"Repository's URL\"},\"fr\":{\"available\":\"<html>La version <b>$1</b> est disponible !<br/>Relancer l'application pour l'installer.\",\"bad-repo\":\"Le dépôt spécifié ne répond pas !\",\"confirm-exit\":\"Êtes-vous sûr de vouloir quitter cette application ?\",\"download-progress\":\"Téléchargement en cours: $1\",\"exit\":\"Quitter\",\"install-corruption\":\"<html><b style='color:red'>L'installation est corrompue !</b><br/>Relancez l'application pour tenter de corriger le problème.<br/>S'il persiste, contactez le support informatique.\",\"install-error\":\"Impossible d'installer la version <b>$1</b><pre class='error'>$2</pre>\",\"install-progress\":\"Installation de la version $1\",\"loading\":\"Téléchargement de l'application...\",\"network-error\":\"<html>Une erreur est survenur lors de la tentative de connexion au dépôt <b>$1</b>.<pre class='error'>$2</pre><hr/>Une bonne connexion réseau est indispensable lors de la première installation.\",\"repository\":\"URL du dépôt\"}},X=require(\"$\").intl;function _(){return X(D,arguments);}_.all=D;return _}();\n    /**\n * This is an application container.\n * It manages updates in background.\n */\n\n\"use strict\";\n\nvar $ = require(\"dom\");\nvar DB = require(\"tfw.data-binding\");\nvar Msg = require(\"tfw.message\").info;\nvar Err = require(\"tfw.message\").error;\nvar Text = require(\"wdg.text\");\nvar Wait = require(\"wdg.wait\");\nvar Modal = require(\"wdg.modal\");\nvar Local = require(\"tfw.storage\").local;\nvar Button = require(\"wdg.button\");\n\nvar FS = require(\"node://fs\");\nvar Path = require(\"node://path\");\n\nvar g_rootFolder = Path.resolve('.');\nvar g_config;\n\nvar APP_ID = \"tlk-app-shell\";\nvar PACKAGE_DIR = APP_ID + \"/package\";\n\n\nfunction get(key, def) {\n    return Local.get(APP_ID + '/' + key, def);\n}\n\nfunction set(key, val) {\n    return Local.set(APP_ID + '/' + key, val);\n}\n\n\nexports.start = function() {\n    if( location.search == '?debug' ) {\n        nw.Window.get().showDevTools( null, start );\n        //Modal.alert(\"Start debugger now!\", start);\n    } else {\n        start();\n    }\n};\n\nfunction start() {\n    FS.readFile(\"package.json\", function(err, out) {\n        if( err ) {\n            Err( \"<html>Unable to read/parse <b>package.json</b>: <code>\" + err.message + \"</code>\" );\n            return;\n        }\n        try {\n            var jsn = out.toString();\n            g_config = JSON.parse( out.toString() );\n        } catch( ex ) {\n            Err(\"Bad JSON syntax in `package.json`!\");\n            return;\n        }\n        $('title').textContent = g_config.name + \" \" + g_config.version;\n\n        var pkg = get( 'install' );\n        if( pkg ) installPackage( pkg ).then( execApp );\n        else checkFirstLaunch();\n    });\n};\n\nexports.onExit = exitApp;\n\n/**\n * Check if it is the first launch or not.\n */\nfunction checkFirstLaunch() {\n    return new Promise(function (resolve, reject) {\n        log( \"> checkFirstLaunch()\" );\n        getPackageDef().then( downloadPackageIfNeeded )\n            .then( execApp );\n    });\n}\n\n/**\n * Promise which resolves in an URL of the repository.\n */\nfunction getRepositoryUrl() {\n    return new Promise(function (resolve, reject) {\n        log( \"> getRepositoryUrl()\" );\n        var repository = get( 'repository' );\n        if( repository ) return resolve( repository );\n        var repo = new Text({\n            label: _('repository'), wide: false, width: '30rem',\n            value: 'http://localhost/www/Cameroun/index.php'\n        });\n        var loading = new Modal({ padding: true, content: [new Wait({ text: _('loading') })] });\n        var ok = Button.Ok();\n        var exit = new Button({ text: _('exit'), icon: \"close\", type: 'simple' });\n        exit.on( exitApp );\n        var content = $.div([\n            repo, ok,\n            $.tag('hr'),\n            $.tag('center', [exit])\n        ]);\n        DB.bind( repo, 'action', ok, 'fire' );\n        var modal = new Modal({ padding: true, content: content });\n        modal.attach();\n        window.setTimeout(function() {\n            repo.focus = true;\n        }, 300);\n        ok.on(function() {\n            resolve( repo.value.trim() );\n        });\n    });\n}\n\n/**\n * Resolves in the URL of the repo and the ID of the package.\n * `{ repo: <string>, id: <string> }`\n */\nfunction getPackageUrl( repoUrl ) {\n    return new Promise(function (resolve, reject) {\n        log( \"> getPackageUrl(\", repoUrl, \")\" );\n        set( 'repository', repoUrl );\n        var pkgId = get( 'id' );\n        if( pkgId ) resolve( repoUrl + \"?\" + pkgId );\n        // Ask the repository the list of packages.\n        fetch( repoUrl ).then(function(response) {\n            if( !response.ok ) throw { message: response.status + \": \" + response.statusText };\n            return response.json();\n        }).then(function( packagesList ) {\n            // @TODO Manage the case of multi packages by adding a selection screen.\n            resolve({\n                repo: repoUrl,\n                id: packagesList[0].id\n            });\n        }).catch(function(err) {\n            manageNetworkFailure( repoUrl, err ).then( resolve );\n        });\n    });\n}\n\n/**\n * Network errors are ignored if the first installation has already occured.\n * That means if the `version` storage attribute has already been set.\n */\nfunction manageNetworkFailure( url, err ) {\n    return new Promise(function (resolve, reject) {\n        console.error( \"[NetworkFailure] Unable to contact \", url, \" because of error \", err );\n        if( get('version') ) resolve( null );\n        else {\n            Modal.alert(_('network-error', url, err.message), function() {\n                set('repository', null);\n                set('id', null);\n                set('version', null);\n                location.reload();\n            });\n        }\n    });\n}\n\nfunction manageInstallFailure( pkg, err ) {\n    return new Promise(function (resolve, reject) {\n        console.error( \"[InstallFailure] Unable to install package \", pkg, \" because of error \", err );\n        Modal.alert(_('install-error', pkg.version, err.message), function() {\n            set('version', null);\n            if( !get('version') ) location.reload();\n        });\n    });\n}\n\n/**\n * Resolves in a package definition or `null`.\n * A package definition has this format:\n * ```\n * {\n *   url: <string>\n *   version: <string>\n *   files: [<string>, ...]\n * }\n * ```\n */\nfunction getPackageDef() {\n    return new Promise(function (resolve, reject) {\n        log( \"> getPackageDef()\" );\n        getRepositoryUrl().then( getPackageUrl ).then(function( pkgUrl ) {\n            var url = pkgUrl.repo + \"?\" + pkgUrl.id;\n            fetch( url ).then(function( response ) {\n                if( !response.ok ) throw { message: response.status + \": \" + response.statusText };\n                return response.json();\n            }).then(function(pkgDef) {\n                resolve(pkgDef);\n            }).catch(function(err) {\n                manageNetworkFailure( url, err ).then( resolve );\n            });\n        });\n    });\n}\n\n/**\n * If `get(\"version\")` is missing  or different from `pkg.version`, we\n * must download the package files.\n * It  `get(\"version\")` is  not  missing, the  downloads  will run  in\n * background. Otherwise, we will wait for all the downloads to finish\n * before resolving.\n */\nfunction downloadPackageIfNeeded( pkg ) {\n    // Check existence of download folder.\n    mkdir( PACKAGE_DIR );\n\n    var downloadedFiles = [];\n    return new Promise(function (resolve, reject) {\n        log( \"> downloadPackageIfNeeded(\", pkg, \")\" );\n        var next = function() {\n            if( pkg.files.length == 0 ) {\n                log(\"Download is done!\");\n                $('tooltip').textContent = '';\n                pkg.files = downloadedFiles;\n                set('install', pkg);\n                if( get('version', null) === null ) {\n                    // First install.\n                    installPackage( pkg ).then( resolve );\n                } else {\n                    Msg( _('available', pkg.version) );\n                }\n                return;\n            }\n            $('tooltip').textContent = _('download-progress', pkg.files.length);\n            var file = pkg.files.pop();\n            var dir = PACKAGE_DIR + Path.dirname( file );\n            var url = pkg.url + file;\n            fetch( url, {\n                cache: 'no-cache',\n                mode: 'cors',\n                redirect: 'follow'\n            }).then(function(response) {\n                log( response.url, response.ok );\n                if( !response.ok ) {\n                    throw Error(response.status + \" \" + response.statusText + \" - \" + response.url);\n                }\n                downloadedFiles.push( file );\n                return response.arrayBuffer();\n            }).then(function(arrayBuffer) {\n                var output = Path.resolve(Path.join(g_rootFolder, PACKAGE_DIR, file));\n                mkdir( dirname( output ) );\n                var data = new Buffer( arrayBuffer );\n                FS.writeFile( output, data, function( err ) {\n                    if( err ) {\n                        console.error( \"Unable to write file: \" + output + \"\\n\", err );\n                        throw Error(\"Unable to write file: \" + output + \"\\n\" + err);\n                    }\n                    next();\n                });\n            }).catch(function(err) {\n                manageNetworkFailure( url, err ).then( resolve );\n            });\n        };\n\n        if( !pkg || get('version') === pkg.version ) {\n            // Version is uptodate, or we were unable to download the package definition.\n            log(\"get('version')=...\", get('version'));\n            log(\"pkg.version=...\", pkg.version);\n            resolve( pkg );\n        } else {\n            if( get('version') ) {\n                // New version is downloaded in background.\n                log(\"Background download...\");\n                resolve( pkg );\n            }\n            log(\"Start download.\");\n            next();\n        }\n    });\n}\n\n/**\n * Close the mian window, hence exit the application.\n */\nfunction exitApp( withoutConfirmation ) {\n    if( withoutConfirmation ) nw.Window.get().close();\n    else Modal.confirm(_('confirm-exit'), function() {\n        nw.Window.get().close();\n    });\n}\n\n/**\n * Execute the application by loading `index.html` page.\n */\nfunction execApp() {\n    try {\n        log( \"> execApp()\" );\n        if( !FS.existsSync( \"./index.html\" ) ) {\n            throw Error(\"Missing start page!\");\n        }\n        $('title').textContent = g_config.name + \" \" + g_config.version;\n        $('iframe').setAttribute( 'src', 'index.html' );\n    } catch( ex ) {\n        set('version', null);\n        Modal.alert(_('install-corruption'), exitApp.bind( null, true ));\n    }\n}\n\n/**\n * Install package stored in `install`.\n */\nfunction installPackage( pkg ) {\n    return new Promise(function (resolve, reject) {\n        log( \"> installPackage(\", pkg, \")\" );\n        // If installation failed, the package will be doanloaded again.\n        set('install', null);\n\n        var modal = new Modal({\n            content: new Wait({ text: _('install-progress', pkg.version) })\n        });\n        modal.attach();\n\n        var next = function() {\n            if( pkg.files.length == 0 ) {\n                // Everything has been installed, we can update the version number.\n                set('version', pkg.version);\n                g_config.version = pkg.version;\n                g_config.name = pkg.name;\n                $('tooltip').textContent = '';\n                FS.writeFile( \"package.json\", JSON.stringify( g_config, null, '    ' ), function( err ) {\n                    modal.detach();\n                    resolve();\n                });\n                return;\n            }\n            $('tooltip').textContent = _('install-progress', pkg.files.length);\n            var file = pkg.files.pop();\n            mkdir( dirname( file ) );\n            FS.readFile( \"./\" + PACKAGE_DIR + \"/\" + file, function(err, data) {\n                if( err ) {\n                    console.error( err );\n                    manageInstallFailure( pkg, err );\n                    return;\n                }\n                FS.writeFile( file, data, function( err ) {\n                    if( err ) {\n                        console.error( err );\n                        manageInstallFailure( pkg, err );\n                        return;\n                    }\n                    next();\n                });\n            });\n        };\n        // Start installation in 600 ms to give the time to read the version number.\n        window.setTimeout( next, 600 );\n    });\n}\n\n/**\n * Create directories recursively.\n * If they are already created, no problem.\n */\nfunction mkdir(folder) {\n    var sep = findSeparator(folder);\n    var folders = folder.split( sep );\n    var dir = '.';\n    folders.forEach(function (folder) {\n        if( folder.length == 2 && folder.charAt(1) == ':' ) {\n            // dealing with windows drive letter (example: `C:`).\n            dir = folder;\n        } else {\n            dir += sep + folder;\n        }\n        if( !FS.existsSync( dir ) ) {\n            log( \"mkdir \", dir );\n            FS.mkdirSync( dir );\n        }\n    });\n}\n\n/**\n * Remove the filename at the end of `path`.\n */\nfunction dirname( path ) {\n    var pos = path.lastIndexOf( findSeparator(path) );\n    if( pos == -1 ) return path;\n    return path.substr(0, pos);\n}\n\n/**\n * Return path separator: `/` or `\\`.\n * The better is to avoid unix-like path with `\\`.\n */\nfunction findSeparator( path ) {\n    var backslash = path.split('\\\\').length;\n    var slash = path.split('/').length;\n    if( backslash > slash ) return '\\\\';\n    return '/';\n}\n\nfunction log() {\n    var args = Array.prototype.slice.call( arguments );\n    args.unshift( \"[\" + APP_ID + \"]\" );\n    console.log.apply( console, args );\n}\n\n\n  \nmodule.exports._ = _;\n/**\n * @module tolokoban-nw\n * @see module:$\n * @see module:dom\n * @see module:tfw.data-binding\n * @see module:tfw.message\n * @see module:wdg.text\n * @see module:wdg.wait\n * @see module:wdg.modal\n * @see module:tfw.storage\n * @see module:wdg.button\n\n */\n});","zip":"require(\"tolokoban-nw\",function(e,t,n){function r(e,t){return R.get(E+\"/\"+e,t)}function o(e,t){return R.set(E+\"/\"+e,t)}function i(){A.readFile(\"package.json\",function(e,t){if(e)return void P(\"<html>Unable to read/parse <b>package.json</b>: <code>\"+e.message+\"</code>\");try{t.toString();x=JSON.parse(t.toString())}catch(e){return void P(\"Bad JSON syntax in `package.json`!\")}k(\"title\").textContent=x.name+\" \"+x.version;var n=r(\"install\");n?g(n).then(h):l()})}function l(){return new Promise(function(e,t){b(\"> checkFirstLaunch()\"),f().then(p).then(h)})}function a(){return new Promise(function(e,t){b(\"> getRepositoryUrl()\");var n=r(\"repository\");if(n)return e(n);var o=new S({label:y(\"repository\"),wide:!1,width:\"30rem\",value:\"http://localhost/www/Cameroun/index.php\"}),i=(new F({padding:!0,content:[new T({text:y(\"loading\")})]}),j.Ok()),l=new j({text:y(\"exit\"),icon:\"close\",type:\"simple\"});l.on(d);var a=k.div([o,i,k.tag(\"hr\"),k.tag(\"center\",[l])]);$.bind(o,\"action\",i,\"fire\");var s=new F({padding:!0,content:a});s.attach(),window.setTimeout(function(){o.focus=!0},300),i.on(function(){e(o.value.trim())})})}function s(e){return new Promise(function(t,n){b(\"> getPackageUrl(\",e,\")\"),o(\"repository\",e);var i=r(\"id\");i&&t(e+\"?\"+i),fetch(e).then(function(e){if(!e.ok)throw{message:e.status+\": \"+e.statusText};return e.json()}).then(function(n){t({repo:e,id:n[0].id})}).catch(function(n){c(e,n).then(t)})})}function c(e,t){return new Promise(function(n,i){console.error(\"[NetworkFailure] Unable to contact \",e,\" because of error \",t),r(\"version\")?n(null):F.alert(y(\"network-error\",e,t.message),function(){o(\"repository\",null),o(\"id\",null),o(\"version\",null),location.reload()})})}function u(e,t){return new Promise(function(n,i){console.error(\"[InstallFailure] Unable to install package \",e,\" because of error \",t),F.alert(y(\"install-error\",e.version,t.message),function(){o(\"version\",null),r(\"version\")||location.reload()})})}function f(){return new Promise(function(e,t){b(\"> getPackageDef()\"),a().then(s).then(function(t){var n=t.repo+\"?\"+t.id;fetch(n).then(function(e){if(!e.ok)throw{message:e.status+\": \"+e.statusText};return e.json()}).then(function(t){e(t)}).catch(function(t){c(n,t).then(e)})})})}function p(e){v(L);var t=[];return new Promise(function(n,i){b(\"> downloadPackageIfNeeded(\",e,\")\");var l=function(){if(0==e.files.length)return b(\"Download is done!\"),k(\"tooltip\").textContent=\"\",e.files=t,o(\"install\",e),void(null===r(\"version\",null)?g(e).then(n):U(y(\"available\",e.version)));k(\"tooltip\").textContent=y(\"download-progress\",e.files.length);var i=e.files.pop(),a=(L+C.dirname(i),e.url+i);fetch(a,{cache:\"no-cache\",mode:\"cors\",redirect:\"follow\"}).then(function(e){if(b(e.url,e.ok),!e.ok)throw Error(e.status+\" \"+e.statusText+\" - \"+e.url);return t.push(i),e.arrayBuffer()}).then(function(e){var t=C.resolve(C.join(I,L,i));v(w(t));var n=new Buffer(e);A.writeFile(t,n,function(e){if(e)throw console.error(\"Unable to write file: \"+t+\"\\n\",e),Error(\"Unable to write file: \"+t+\"\\n\"+e);l()})}).catch(function(e){c(a,e).then(n)})};e&&r(\"version\")!==e.version?(r(\"version\")&&(b(\"Background download...\"),n(e)),b(\"Start download.\"),l()):(b(\"get('version')=...\",r(\"version\")),b(\"pkg.version=...\",e.version),n(e))})}function d(e){e?nw.Window.get().close():F.confirm(y(\"confirm-exit\"),function(){nw.Window.get().close()})}function h(){try{if(b(\"> execApp()\"),!A.existsSync(\"./index.html\"))throw Error(\"Missing start page!\");k(\"title\").textContent=x.name+\" \"+x.version,k(\"iframe\").setAttribute(\"src\",\"index.html\")}catch(e){o(\"version\",null),F.alert(y(\"install-corruption\"),d.bind(null,!0))}}function g(e){return new Promise(function(t,n){b(\"> installPackage(\",e,\")\"),o(\"install\",null);var r=new F({content:new T({text:y(\"install-progress\",e.version)})});r.attach();var i=function(){if(0==e.files.length)return o(\"version\",e.version),x.version=e.version,x.name=e.name,k(\"tooltip\").textContent=\"\",void A.writeFile(\"package.json\",JSON.stringify(x,null,\"    \"),function(e){r.detach(),t()});k(\"tooltip\").textContent=y(\"install-progress\",e.files.length);var n=e.files.pop();v(w(n)),A.readFile(\"./\"+L+\"/\"+n,function(t,r){return t?(console.error(t),void u(e,t)):void A.writeFile(n,r,function(t){return t?(console.error(t),void u(e,t)):void i()})})};window.setTimeout(i,600)})}function v(e){var t=m(e),n=e.split(t),r=\".\";n.forEach(function(e){2==e.length&&\":\"==e.charAt(1)?r=e:r+=t+e,A.existsSync(r)||(b(\"mkdir \",r),A.mkdirSync(r))})}function w(e){var t=e.lastIndexOf(m(e));return t==-1?e:e.substr(0,t)}function m(e){var t=e.split(\"\\\\\").length,n=e.split(\"/\").length;return t>n?\"\\\\\":\"/\"}function b(){var e=Array.prototype.slice.call(arguments);e.unshift(\"[\"+E+\"]\"),console.log.apply(console,e)}var x,y=function(){function t(){return r(n,arguments)}var n={en:{available:\"<html>Version <b>$1</b> is available!<br/>Restart to install it.\",\"bad-repo\":\"Unable to contact this repository!\",\"confirm-exit\":\"Are you sure you want to exit this application?\",\"download-progress\":\"Downloading in progress: $1\",exit:\"Exit\",\"install-corruption\":\"<html><b style='color:red'>The install is corrupted!</b><br/>Restart the application to fix the problem.<br/>If it is still here after restart, please contact the support.\",\"install-error\":\"<html>Unable to install version <b>$1</b><pre class='error'>$2</pre>\",\"install-progress\":\"Installing version $1\",loading:\"Downloading application files...\",\"network-error\":\"<html>An error occured while trying to contact repository <b>$1</b>.<pre class='error'>$2</pre><hr/>A good network connection is mandatory for the first installation.\",repository:\"Repository's URL\"},fr:{available:\"<html>La version <b>$1</b> est disponible !<br/>Relancer l'application pour l'installer.\",\"bad-repo\":\"Le dépôt spécifié ne répond pas !\",\"confirm-exit\":\"Êtes-vous sûr de vouloir quitter cette application ?\",\"download-progress\":\"Téléchargement en cours: $1\",exit:\"Quitter\",\"install-corruption\":\"<html><b style='color:red'>L'installation est corrompue !</b><br/>Relancez l'application pour tenter de corriger le problème.<br/>S'il persiste, contactez le support informatique.\",\"install-error\":\"Impossible d'installer la version <b>$1</b><pre class='error'>$2</pre>\",\"install-progress\":\"Installation de la version $1\",loading:\"Téléchargement de l'application...\",\"network-error\":\"<html>Une erreur est survenur lors de la tentative de connexion au dépôt <b>$1</b>.<pre class='error'>$2</pre><hr/>Une bonne connexion réseau est indispensable lors de la première installation.\",repository:\"URL du dépôt\"}},r=e(\"$\").intl;return t.all=n,t}(),k=e(\"dom\"),$=e(\"tfw.data-binding\"),U=e(\"tfw.message\").info,P=e(\"tfw.message\").error,S=e(\"wdg.text\"),T=e(\"wdg.wait\"),F=e(\"wdg.modal\"),R=e(\"tfw.storage\").local,j=e(\"wdg.button\"),A=e(\"node://fs\"),C=e(\"node://path\"),I=C.resolve(\".\"),E=\"tlk-app-shell\",L=E+\"/package\";n.start=function(){\"?debug\"==location.search?nw.Window.get().showDevTools(null,i):i()},n.onExit=d,t.exports._=y});\n//# sourceMappingURL=tolokoban-nw.js.map","map":{"version":3,"file":"tolokoban-nw.js","sources":["tolokoban-nw.js"],"sourcesContent":["/** @module tolokoban-nw */require( 'tolokoban-nw', function(require, module, exports) { var _=function(){var D={\"en\":{\"available\":\"<html>Version <b>$1</b> is available!<br/>Restart to install it.\",\"bad-repo\":\"Unable to contact this repository!\",\"confirm-exit\":\"Are you sure you want to exit this application?\",\"download-progress\":\"Downloading in progress: $1\",\"exit\":\"Exit\",\"install-corruption\":\"<html><b style='color:red'>The install is corrupted!</b><br/>Restart the application to fix the problem.<br/>If it is still here after restart, please contact the support.\",\"install-error\":\"<html>Unable to install version <b>$1</b><pre class='error'>$2</pre>\",\"install-progress\":\"Installing version $1\",\"loading\":\"Downloading application files...\",\"network-error\":\"<html>An error occured while trying to contact repository <b>$1</b>.<pre class='error'>$2</pre><hr/>A good network connection is mandatory for the first installation.\",\"repository\":\"Repository's URL\"},\"fr\":{\"available\":\"<html>La version <b>$1</b> est disponible !<br/>Relancer l'application pour l'installer.\",\"bad-repo\":\"Le dépôt spécifié ne répond pas !\",\"confirm-exit\":\"Êtes-vous sûr de vouloir quitter cette application ?\",\"download-progress\":\"Téléchargement en cours: $1\",\"exit\":\"Quitter\",\"install-corruption\":\"<html><b style='color:red'>L'installation est corrompue !</b><br/>Relancez l'application pour tenter de corriger le problème.<br/>S'il persiste, contactez le support informatique.\",\"install-error\":\"Impossible d'installer la version <b>$1</b><pre class='error'>$2</pre>\",\"install-progress\":\"Installation de la version $1\",\"loading\":\"Téléchargement de l'application...\",\"network-error\":\"<html>Une erreur est survenur lors de la tentative de connexion au dépôt <b>$1</b>.<pre class='error'>$2</pre><hr/>Une bonne connexion réseau est indispensable lors de la première installation.\",\"repository\":\"URL du dépôt\"}},X=require(\"$\").intl;function _(){return X(D,arguments);}_.all=D;return _}();\n    /**\n * This is an application container.\n * It manages updates in background.\n */\n\n\"use strict\";\n\nvar $ = require(\"dom\");\nvar DB = require(\"tfw.data-binding\");\nvar Msg = require(\"tfw.message\").info;\nvar Err = require(\"tfw.message\").error;\nvar Text = require(\"wdg.text\");\nvar Wait = require(\"wdg.wait\");\nvar Modal = require(\"wdg.modal\");\nvar Local = require(\"tfw.storage\").local;\nvar Button = require(\"wdg.button\");\n\nvar FS = require(\"node://fs\");\nvar Path = require(\"node://path\");\n\nvar g_rootFolder = Path.resolve('.');\nvar g_config;\n\nvar APP_ID = \"tlk-app-shell\";\nvar PACKAGE_DIR = APP_ID + \"/package\";\n\n\nfunction get(key, def) {\n    return Local.get(APP_ID + '/' + key, def);\n}\n\nfunction set(key, val) {\n    return Local.set(APP_ID + '/' + key, val);\n}\n\n\nexports.start = function() {\n    if( location.search == '?debug' ) {\n        nw.Window.get().showDevTools( null, start );\n        //Modal.alert(\"Start debugger now!\", start);\n    } else {\n        start();\n    }\n};\n\nfunction start() {\n    FS.readFile(\"package.json\", function(err, out) {\n        if( err ) {\n            Err( \"<html>Unable to read/parse <b>package.json</b>: <code>\" + err.message + \"</code>\" );\n            return;\n        }\n        try {\n            var jsn = out.toString();\n            g_config = JSON.parse( out.toString() );\n        } catch( ex ) {\n            Err(\"Bad JSON syntax in `package.json`!\");\n            return;\n        }\n        $('title').textContent = g_config.name + \" \" + g_config.version;\n\n        var pkg = get( 'install' );\n        if( pkg ) installPackage( pkg ).then( execApp );\n        else checkFirstLaunch();\n    });\n};\n\nexports.onExit = exitApp;\n\n/**\n * Check if it is the first launch or not.\n */\nfunction checkFirstLaunch() {\n    return new Promise(function (resolve, reject) {\n        log( \"> checkFirstLaunch()\" );\n        getPackageDef().then( downloadPackageIfNeeded )\n            .then( execApp );\n    });\n}\n\n/**\n * Promise which resolves in an URL of the repository.\n */\nfunction getRepositoryUrl() {\n    return new Promise(function (resolve, reject) {\n        log( \"> getRepositoryUrl()\" );\n        var repository = get( 'repository' );\n        if( repository ) return resolve( repository );\n        var repo = new Text({\n            label: _('repository'), wide: false, width: '30rem',\n            value: 'http://localhost/www/Cameroun/index.php'\n        });\n        var loading = new Modal({ padding: true, content: [new Wait({ text: _('loading') })] });\n        var ok = Button.Ok();\n        var exit = new Button({ text: _('exit'), icon: \"close\", type: 'simple' });\n        exit.on( exitApp );\n        var content = $.div([\n            repo, ok,\n            $.tag('hr'),\n            $.tag('center', [exit])\n        ]);\n        DB.bind( repo, 'action', ok, 'fire' );\n        var modal = new Modal({ padding: true, content: content });\n        modal.attach();\n        window.setTimeout(function() {\n            repo.focus = true;\n        }, 300);\n        ok.on(function() {\n            resolve( repo.value.trim() );\n        });\n    });\n}\n\n/**\n * Resolves in the URL of the repo and the ID of the package.\n * `{ repo: <string>, id: <string> }`\n */\nfunction getPackageUrl( repoUrl ) {\n    return new Promise(function (resolve, reject) {\n        log( \"> getPackageUrl(\", repoUrl, \")\" );\n        set( 'repository', repoUrl );\n        var pkgId = get( 'id' );\n        if( pkgId ) resolve( repoUrl + \"?\" + pkgId );\n        // Ask the repository the list of packages.\n        fetch( repoUrl ).then(function(response) {\n            if( !response.ok ) throw { message: response.status + \": \" + response.statusText };\n            return response.json();\n        }).then(function( packagesList ) {\n            // @TODO Manage the case of multi packages by adding a selection screen.\n            resolve({\n                repo: repoUrl,\n                id: packagesList[0].id\n            });\n        }).catch(function(err) {\n            manageNetworkFailure( repoUrl, err ).then( resolve );\n        });\n    });\n}\n\n/**\n * Network errors are ignored if the first installation has already occured.\n * That means if the `version` storage attribute has already been set.\n */\nfunction manageNetworkFailure( url, err ) {\n    return new Promise(function (resolve, reject) {\n        console.error( \"[NetworkFailure] Unable to contact \", url, \" because of error \", err );\n        if( get('version') ) resolve( null );\n        else {\n            Modal.alert(_('network-error', url, err.message), function() {\n                set('repository', null);\n                set('id', null);\n                set('version', null);\n                location.reload();\n            });\n        }\n    });\n}\n\nfunction manageInstallFailure( pkg, err ) {\n    return new Promise(function (resolve, reject) {\n        console.error( \"[InstallFailure] Unable to install package \", pkg, \" because of error \", err );\n        Modal.alert(_('install-error', pkg.version, err.message), function() {\n            set('version', null);\n            if( !get('version') ) location.reload();\n        });\n    });\n}\n\n/**\n * Resolves in a package definition or `null`.\n * A package definition has this format:\n * ```\n * {\n *   url: <string>\n *   version: <string>\n *   files: [<string>, ...]\n * }\n * ```\n */\nfunction getPackageDef() {\n    return new Promise(function (resolve, reject) {\n        log( \"> getPackageDef()\" );\n        getRepositoryUrl().then( getPackageUrl ).then(function( pkgUrl ) {\n            var url = pkgUrl.repo + \"?\" + pkgUrl.id;\n            fetch( url ).then(function( response ) {\n                if( !response.ok ) throw { message: response.status + \": \" + response.statusText };\n                return response.json();\n            }).then(function(pkgDef) {\n                resolve(pkgDef);\n            }).catch(function(err) {\n                manageNetworkFailure( url, err ).then( resolve );\n            });\n        });\n    });\n}\n\n/**\n * If `get(\"version\")` is missing  or different from `pkg.version`, we\n * must download the package files.\n * It  `get(\"version\")` is  not  missing, the  downloads  will run  in\n * background. Otherwise, we will wait for all the downloads to finish\n * before resolving.\n */\nfunction downloadPackageIfNeeded( pkg ) {\n    // Check existence of download folder.\n    mkdir( PACKAGE_DIR );\n\n    var downloadedFiles = [];\n    return new Promise(function (resolve, reject) {\n        log( \"> downloadPackageIfNeeded(\", pkg, \")\" );\n        var next = function() {\n            if( pkg.files.length == 0 ) {\n                log(\"Download is done!\");\n                $('tooltip').textContent = '';\n                pkg.files = downloadedFiles;\n                set('install', pkg);\n                if( get('version', null) === null ) {\n                    // First install.\n                    installPackage( pkg ).then( resolve );\n                } else {\n                    Msg( _('available', pkg.version) );\n                }\n                return;\n            }\n            $('tooltip').textContent = _('download-progress', pkg.files.length);\n            var file = pkg.files.pop();\n            var dir = PACKAGE_DIR + Path.dirname( file );\n            var url = pkg.url + file;\n            fetch( url, {\n                cache: 'no-cache',\n                mode: 'cors',\n                redirect: 'follow'\n            }).then(function(response) {\n                log( response.url, response.ok );\n                if( !response.ok ) {\n                    throw Error(response.status + \" \" + response.statusText + \" - \" + response.url);\n                }\n                downloadedFiles.push( file );\n                return response.arrayBuffer();\n            }).then(function(arrayBuffer) {\n                var output = Path.resolve(Path.join(g_rootFolder, PACKAGE_DIR, file));\n                mkdir( dirname( output ) );\n                var data = new Buffer( arrayBuffer );\n                FS.writeFile( output, data, function( err ) {\n                    if( err ) {\n                        console.error( \"Unable to write file: \" + output + \"\\n\", err );\n                        throw Error(\"Unable to write file: \" + output + \"\\n\" + err);\n                    }\n                    next();\n                });\n            }).catch(function(err) {\n                manageNetworkFailure( url, err ).then( resolve );\n            });\n        };\n\n        if( !pkg || get('version') === pkg.version ) {\n            // Version is uptodate, or we were unable to download the package definition.\n            log(\"get('version')=...\", get('version'));\n            log(\"pkg.version=...\", pkg.version);\n            resolve( pkg );\n        } else {\n            if( get('version') ) {\n                // New version is downloaded in background.\n                log(\"Background download...\");\n                resolve( pkg );\n            }\n            log(\"Start download.\");\n            next();\n        }\n    });\n}\n\n/**\n * Close the mian window, hence exit the application.\n */\nfunction exitApp( withoutConfirmation ) {\n    if( withoutConfirmation ) nw.Window.get().close();\n    else Modal.confirm(_('confirm-exit'), function() {\n        nw.Window.get().close();\n    });\n}\n\n/**\n * Execute the application by loading `index.html` page.\n */\nfunction execApp() {\n    try {\n        log( \"> execApp()\" );\n        if( !FS.existsSync( \"./index.html\" ) ) {\n            throw Error(\"Missing start page!\");\n        }\n        $('title').textContent = g_config.name + \" \" + g_config.version;\n        $('iframe').setAttribute( 'src', 'index.html' );\n    } catch( ex ) {\n        set('version', null);\n        Modal.alert(_('install-corruption'), exitApp.bind( null, true ));\n    }\n}\n\n/**\n * Install package stored in `install`.\n */\nfunction installPackage( pkg ) {\n    return new Promise(function (resolve, reject) {\n        log( \"> installPackage(\", pkg, \")\" );\n        // If installation failed, the package will be doanloaded again.\n        set('install', null);\n\n        var modal = new Modal({\n            content: new Wait({ text: _('install-progress', pkg.version) })\n        });\n        modal.attach();\n\n        var next = function() {\n            if( pkg.files.length == 0 ) {\n                // Everything has been installed, we can update the version number.\n                set('version', pkg.version);\n                g_config.version = pkg.version;\n                g_config.name = pkg.name;\n                $('tooltip').textContent = '';\n                FS.writeFile( \"package.json\", JSON.stringify( g_config, null, '    ' ), function( err ) {\n                    modal.detach();\n                    resolve();\n                });\n                return;\n            }\n            $('tooltip').textContent = _('install-progress', pkg.files.length);\n            var file = pkg.files.pop();\n            mkdir( dirname( file ) );\n            FS.readFile( \"./\" + PACKAGE_DIR + \"/\" + file, function(err, data) {\n                if( err ) {\n                    console.error( err );\n                    manageInstallFailure( pkg, err );\n                    return;\n                }\n                FS.writeFile( file, data, function( err ) {\n                    if( err ) {\n                        console.error( err );\n                        manageInstallFailure( pkg, err );\n                        return;\n                    }\n                    next();\n                });\n            });\n        };\n        // Start installation in 600 ms to give the time to read the version number.\n        window.setTimeout( next, 600 );\n    });\n}\n\n/**\n * Create directories recursively.\n * If they are already created, no problem.\n */\nfunction mkdir(folder) {\n    var sep = findSeparator(folder);\n    var folders = folder.split( sep );\n    var dir = '.';\n    folders.forEach(function (folder) {\n        if( folder.length == 2 && folder.charAt(1) == ':' ) {\n            // dealing with windows drive letter (example: `C:`).\n            dir = folder;\n        } else {\n            dir += sep + folder;\n        }\n        if( !FS.existsSync( dir ) ) {\n            log( \"mkdir \", dir );\n            FS.mkdirSync( dir );\n        }\n    });\n}\n\n/**\n * Remove the filename at the end of `path`.\n */\nfunction dirname( path ) {\n    var pos = path.lastIndexOf( findSeparator(path) );\n    if( pos == -1 ) return path;\n    return path.substr(0, pos);\n}\n\n/**\n * Return path separator: `/` or `\\`.\n * The better is to avoid unix-like path with `\\`.\n */\nfunction findSeparator( path ) {\n    var backslash = path.split('\\\\').length;\n    var slash = path.split('/').length;\n    if( backslash > slash ) return '\\\\';\n    return '/';\n}\n\nfunction log() {\n    var args = Array.prototype.slice.call( arguments );\n    args.unshift( \"[\" + APP_ID + \"]\" );\n    console.log.apply( console, args );\n}\n\n\n  \nmodule.exports._ = _;\n});"],"names":["require","module","exports","get","key","def","Local","APP_ID","set","val","start","FS","readFile","err","out","Err","message","toString","g_config","JSON","parse","ex","$","textContent","name","version","pkg","installPackage","then","execApp","checkFirstLaunch","Promise","resolve","reject","log","getPackageDef","downloadPackageIfNeeded","getRepositoryUrl","repository","repo","Text","label","_","wide","width","value","ok","Modal","padding","content","Wait","text","Button","Ok","exit","icon","type","on","exitApp","div","tag","DB","bind","modal","attach","window","setTimeout","focus","trim","getPackageUrl","repoUrl","pkgId","fetch","response","status","statusText","json","packagesList","id","catch","manageNetworkFailure","url","console","error","alert","location","reload","manageInstallFailure","pkgUrl","pkgDef","mkdir","PACKAGE_DIR","downloadedFiles","next","files","length","Msg","file","pop","Path","dirname","cache","mode","redirect","Error","push","arrayBuffer","output","join","g_rootFolder","data","Buffer","writeFile","withoutConfirmation","nw","Window","close","confirm","existsSync","setAttribute","stringify","detach","folder","sep","findSeparator","folders","split","dir","forEach","charAt","mkdirSync","path","pos","lastIndexOf","substr","backslash","slash","args","Array","prototype","slice","call","arguments","unshift","apply","X","D","en","available","bad-repo","confirm-exit","download-progress","install-corruption","install-error","install-progress","loading","network-error","fr","intl","all","info","local","search","showDevTools","onExit"],"mappings":"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"},"dependencies":["mod/$","mod/dom","mod/tfw.data-binding","mod/tfw.message","mod/wdg.text","mod/wdg.wait","mod/wdg.modal","mod/tfw.storage","mod/wdg.button"]}