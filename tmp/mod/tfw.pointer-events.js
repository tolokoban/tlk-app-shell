{"intl":"var _=function(){var D={\"en\":{}},X=require(\"$\").intl;function _(){return X(D,arguments);}_.all=D;return _}();\n","src":"/** @module tfw.pointer-events */require( 'tfw.pointer-events', function(require, module, exports) { var _=function(){var D={\"en\":{}},X=require(\"$\").intl;function _(){return X(D,arguments);}_.all=D;return _}();\n    /**\n * @module tfw.pointer-events\n *\n * @description\n * Available actions are:\n * down, up, tap, doubletap,\n * drag, move, wheel.\n *\n * @example\n * var mod = require('tfw.pointer-events');\n */\n\n// Webkit and Opera still use 'mousewheel' event type.\nvar WHEEL_EVENT = \"onwheel\" in document.createElement(\"div\") ? \"wheel\" :\n        // Modern browsers support \"wheel\"\n        document.onmousewheel !== undefined ? \"mousewheel\" :\n        // Webkit and IE support at least \"mousewheel\"\n        \"DOMMouseScroll\"; // let's assume that remaining browsers are older Firefox\n\n\nvar G = {\n    // As soon as a touch occurs, no more mouse events can be handled.\n    touchDevice: false,\n    // When a DOM element is touched, `target` holds it.\n    // Then we can track mouse events on __body__ using capture.\n    target: null,\n    // Coords of _down_ on target.\n    targetX: 0, targetY: 0,\n    // Coords of _down_ on body.\n    bodyDownX: 0, bodyDownY: 0,\n    // Current mouse position on body.\n    bodyMoveX: -1, bodyMoveY: -1,\n    // Last mouse position on body.\n    bodyMoveLastX: -1, bodyMoveLastY: -1,\n    // drag event.\n    onDrag: null,\n    // Last time tap for double tap detection.\n    lastTapTime: 0\n};\n\nvar onDocumentMouseDown = function(evt) {\n    if (G.touchDevice) return;\n    G.bodyDownX = evt.pageX;\n    G.bodyDownY = evt.pageY;\n    G.bodyMoveX = evt.pageX;\n    G.bodyMoveY = evt.pageY;\n    G.bodyMoveLastX = evt.pageX;\n    G.bodyMoveLastY = evt.pageY;\n};\n\nvar onDocumentMouseMove = function(evt) {\n    if (G.touchDevice) return;\n    if( !G.target ) return;\n    evt.stopPropagation();\n    evt.preventDefault();\n\n    G.bodyMoveLastX = G.bodyMoveX;\n    G.bodyMoveLastY = G.bodyMoveY;\n    G.bodyMoveX = evt.pageX; // + rectB.left;\n    G.bodyMoveY = evt.pageY; // + rectB.top;\n\n    if (!G.target) return;\n\n    var slots = G.target._slots;\n    if (typeof slots.drag !== 'function') return;\n\n    slots.drag({\n        action: 'drag',\n        target: G.target.element,\n        x0: G.targetX,\n        y0: G.targetY,\n        x: G.targetX + G.bodyMoveX - G.bodyDownX,\n        y: G.targetY + G.bodyMoveY - G.bodyDownY,\n        dx: G.bodyMoveX - G.bodyDownX,\n        dy: G.bodyMoveY - G.bodyDownY,\n        vx: G.bodyMoveX - G.bodyMoveLastX,\n        vy: G.bodyMoveY - G.bodyMoveLastY\n    });\n};\n\nvar onDocumentMouseUp = function(evt) {\n    if( G.touchDevice ) return;\n    if( !G.target ) return;\n    evt.stopPropagation();\n    evt.preventDefault();\n\n    var time = Date.now();\n    var slots = G.target._slots;\n    var dx = evt.pageX - G.bodyDownX;\n    var dy = evt.pageY - G.bodyDownY;\n    if (slots.up) {\n        slots.up({\n            action: 'up',\n            target: G.target.element,\n            x: G.targetX + dx,\n            y: G.targetY + dy,\n            dx: dx,\n            dy: dy\n        });\n    }\n    // Tap or doubletap.\n    if (dx * dx + dy * dy < 1024) {\n        if (G.lastTapTime > 0) {\n            if (slots.doubletap && time - G.lastTapTime < 400) {\n                slots.doubletap({\n                    action: 'doubletap',\n                    target: G.target.element,\n                    x: G.targetX + dx,\n                    y: G.targetY + dy\n                });\n            } else {\n                G.lastTapTime = 0;\n            }\n        }\n        if (slots.tap && G.lastTapTime == 0) {\n            slots.tap({\n                action: 'tap',\n                target: G.target.element,\n                x: G.targetX + dx,\n                y: G.targetY + dy\n            });\n        }\n        G.lastTapTime = time;\n    }\n    delete G.target;\n};\n\n\ndocument.body.addEventListener( 'mousedown', onDocumentMouseDown, true );\ndocument.body.addEventListener( 'mousemove', onDocumentMouseMove, true );\ndocument.body.addEventListener( 'mouseup', onDocumentMouseUp, true );\n\n\nfunction PointerEvents( element ) {\n    var that = this;\n\n    this._slots = {};\n    this._eventListeners = [];\n\n    Object.defineProperty( PointerEvents.prototype, 'element', {\n        value: element, writable: false, configurable: true, enumerable: true\n    });\n\n    //===============\n    // Touch events.\n    addEvent.call(that, element, 'touchstart', function(evt) {\n        if( !G.touchDevice ) {\n            G.touchDevice = true;\n            document.body.removeEventListener( 'mousedown', onDocumentMouseDown, true );\n            document.body.removeEventListener( 'mousemove', onDocumentMouseMove, true );\n            document.body.removeEventListener( 'mouseup', onDocumentMouseUp, true );\n        }\n        var slots = that._slots;\n        if (evt.touches.length == 1) {\n            G.rect = element.getBoundingClientRect();\n            G.bodyMoveX = evt.touches[0].clientX;\n            G.bodyMoveY = evt.touches[0].clientY;\n            G.bodyDownX = evt.touches[0].clientX;\n            G.bodyDownY = evt.touches[0].clientY;\n            G.targetX = evt.touches[0].clientX - G.rect.left;\n            G.targetY = evt.touches[0].clientY - G.rect.top;\n            G.time = Date.now();\n            if (slots.down) {\n                slots.down({\n                    action: 'down',\n                    target: element,\n                    x: G.targetX,\n                    y: G.targetY,\n                    stopPropagation: evt.stopPropagation.bind( evt ),\n                    preventDefault: evt.preventDefault.bind( evt )\n                });\n            }\n        }\n    });\n    addEvent.call(that, element, 'touchmove', function(evt) {\n        var lastX = G.bodyMoveX;\n        var lastY = G.bodyMoveY;\n        G.bodyMoveX = evt.touches[0].clientX;\n        G.bodyMoveY = evt.touches[0].clientY;\n        var slots = that._slots;\n        if (slots.drag) {\n            slots.drag({\n                action: 'drag',\n                target: element,\n                x0: G.targetX,\n                y0: G.targetY,\n                x: G.bodyMoveX - G.rect.left,\n                y: G.bodyMoveY - G.rect.top,\n                dx: G.bodyMoveX - G.bodyDownX,\n                dy: G.bodyMoveY - G.bodyDownY,\n                vx: G.bodyMoveX - lastX,\n                vy: G.bodyMoveY - lastY,\n                stopPropagation: evt.stopPropagation.bind( evt ),\n                preventDefault: evt.preventDefault.bind( evt )\n            });\n        }\n    });\n    addEvent.call(that, element, 'touchend', function(evt) {\n        var slots = that._slots;\n        var dx = G.bodyMoveX - G.bodyDownX;\n        var dy = G.bodyMoveY - G.bodyDownY;\n        if (slots.up) {\n            slots.up({\n                action: 'up',\n                target: that.element,\n                x: G.bodyMoveX - G.rect.left,\n                y: G.bodyMoveY - G.rect.top,\n                dx: dx,\n                dy: dy,\n                stopPropagation: evt.stopPropagation.bind( evt ),\n                preventDefault: evt.preventDefault.bind( evt )\n            });\n        }\n        // Tap or doubletap.\n        if (dx * dx + dy * dy < 256) {\n            var time = Date.now();\n            if (G.lastTapTime > 0) {\n                if (slots.doubletap && time - G.lastTapTime < 400) {\n                    slots.doubletap({\n                        action: 'doubletap',\n                        target: that.element,\n                        x: G.bodyMoveX - G.rect.left,\n                        y: G.bodyMoveY - G.rect.top,\n                        stopPropagation: evt.stopPropagation.bind( evt ),\n                        preventDefault: evt.preventDefault.bind( evt )\n                    });\n                } else {\n                    G.lastTapTime = 0;\n                }\n            }\n            if (slots.tap && G.lastTapTime == 0) {\n                evt.stopPropagation();\n                evt.preventDefault();\n                slots.tap({\n                    action: 'tap',\n                    target: that.element,\n                    x: G.bodyMoveX - G.rect.left,\n                    y: G.bodyMoveY - G.rect.top,\n                    stopPropagation: evt.stopPropagation.bind( evt ),\n                    preventDefault: evt.preventDefault.bind( evt )\n                });\n            }\n            G.lastTapTime = time;\n        }\n    });\n\n    //===============\n    // Mouse events.\n    addEvent.call(that, element, 'mousedown', function(evt) {\n        if (G.touchDevice) return;\n        var slots = that._slots;\n        var rect = element.getBoundingClientRect();\n        G.target = that;\n        G.targetX = evt.clientX - rect.left;\n        G.targetY = evt.clientY - rect.top;\n        if (slots.down) {\n            slots.down({\n                action: 'down',\n                target: element,\n                x: G.targetX,\n                y: G.targetY,\n                stopPropagation: evt.stopPropagation.bind( evt ),\n                preventDefault: evt.preventDefault.bind( evt )\n            });\n        }\n    });\n    addEvent.call(that, element, 'mousemove', function(evt) {\n        var slots = that._slots;\n        if (slots.move) {\n            var rectA = element.getBoundingClientRect();\n            var rectB = evt.target.getBoundingClientRect();\n            slots.move({\n                target: element,\n                action: 'move',\n                x: evt.offsetX + rectB.left - rectA.left,\n                y: evt.offsetY + rectB.top - rectA.top\n            });\n        }\n    });\n\n    Object.defineProperty( this, 'element', {\n        value: element, writable: true, configurable: true, enumerable: true\n    });\n}\n\n\n/**\n * @return void\n */\nPointerEvents.prototype.on = function(action, event) {\n    var that = this;\n\n    var slots = this._slots;\n    if (typeof event === 'function') {\n        slots[action] = event;\n    }\n    if (action == 'wheel') {\n        addEvent.call(that, this.element, WHEEL_EVENT, function(evt) {\n            var rect = that.element.getBoundingClientRect();\n            slots.wheel({\n                target: that.element,\n                action: 'wheel',\n                delta: evt.deltaY,\n                x: evt.clientX - rect.left,\n                y: evt.clientY - rect.top,\n                stopPropagation: evt.stopPropagation.bind( evt ),\n                preventDefault: evt.preventDefault.bind( evt )\n            });\n        });\n    }\n    return this;\n};\n\n\n/**\n * @return void\n */\nPointerEvents.prototype.off = function() {\n    this._eventListeners.forEach(function (itm) {\n        var element = itm[0];\n        var event = itm[1];\n        var listener = itm[2];\n        var capture = itm[3];\n        element.removeEventListener( event, listener, capture );\n    });\n};\n\n\nfunction addEvent(element, event, listener, capture) {\n    element.addEventListener( event, listener, capture );\n    this._eventListeners.push([element, event, listener, capture]);\n}\n\nmodule.exports = PointerEvents;\n\n\n  \nmodule.exports._ = _;\n/**\n * @module tfw.pointer-events\n * @see module:$\n\n */\n});","zip":"require(\"tfw.pointer-events\",function(e,t,o){function n(e){var t=this;this._slots={},this._eventListeners=[],Object.defineProperty(n.prototype,\"element\",{value:e,writable:!1,configurable:!0,enumerable:!0}),a.call(t,e,\"touchstart\",function(o){d.touchDevice||(d.touchDevice=!0,document.body.removeEventListener(\"mousedown\",l,!0),document.body.removeEventListener(\"mousemove\",p,!0),document.body.removeEventListener(\"mouseup\",v,!0));var n=t._slots;1==o.touches.length&&(d.rect=e.getBoundingClientRect(),d.bodyMoveX=o.touches[0].clientX,d.bodyMoveY=o.touches[0].clientY,d.bodyDownX=o.touches[0].clientX,d.bodyDownY=o.touches[0].clientY,d.targetX=o.touches[0].clientX-d.rect.left,d.targetY=o.touches[0].clientY-d.rect.top,d.time=Date.now(),n.down&&n.down({action:\"down\",target:e,x:d.targetX,y:d.targetY,stopPropagation:o.stopPropagation.bind(o),preventDefault:o.preventDefault.bind(o)}))}),a.call(t,e,\"touchmove\",function(o){var n=d.bodyMoveX,a=d.bodyMoveY;d.bodyMoveX=o.touches[0].clientX,d.bodyMoveY=o.touches[0].clientY;var r=t._slots;r.drag&&r.drag({action:\"drag\",target:e,x0:d.targetX,y0:d.targetY,x:d.bodyMoveX-d.rect.left,y:d.bodyMoveY-d.rect.top,dx:d.bodyMoveX-d.bodyDownX,dy:d.bodyMoveY-d.bodyDownY,vx:d.bodyMoveX-n,vy:d.bodyMoveY-a,stopPropagation:o.stopPropagation.bind(o),preventDefault:o.preventDefault.bind(o)})}),a.call(t,e,\"touchend\",function(e){var o=t._slots,n=d.bodyMoveX-d.bodyDownX,a=d.bodyMoveY-d.bodyDownY;if(o.up&&o.up({action:\"up\",target:t.element,x:d.bodyMoveX-d.rect.left,y:d.bodyMoveY-d.rect.top,dx:n,dy:a,stopPropagation:e.stopPropagation.bind(e),preventDefault:e.preventDefault.bind(e)}),n*n+a*a<256){var r=Date.now();d.lastTapTime>0&&(o.doubletap&&r-d.lastTapTime<400?o.doubletap({action:\"doubletap\",target:t.element,x:d.bodyMoveX-d.rect.left,y:d.bodyMoveY-d.rect.top,stopPropagation:e.stopPropagation.bind(e),preventDefault:e.preventDefault.bind(e)}):d.lastTapTime=0),o.tap&&0==d.lastTapTime&&(e.stopPropagation(),e.preventDefault(),o.tap({action:\"tap\",target:t.element,x:d.bodyMoveX-d.rect.left,y:d.bodyMoveY-d.rect.top,stopPropagation:e.stopPropagation.bind(e),preventDefault:e.preventDefault.bind(e)})),d.lastTapTime=r}}),a.call(t,e,\"mousedown\",function(o){if(!d.touchDevice){var n=t._slots,a=e.getBoundingClientRect();d.target=t,d.targetX=o.clientX-a.left,d.targetY=o.clientY-a.top,n.down&&n.down({action:\"down\",target:e,x:d.targetX,y:d.targetY,stopPropagation:o.stopPropagation.bind(o),preventDefault:o.preventDefault.bind(o)})}}),a.call(t,e,\"mousemove\",function(o){var n=t._slots;if(n.move){var a=e.getBoundingClientRect(),r=o.target.getBoundingClientRect();n.move({target:e,action:\"move\",x:o.offsetX+r.left-a.left,y:o.offsetY+r.top-a.top})}}),Object.defineProperty(this,\"element\",{value:e,writable:!0,configurable:!0,enumerable:!0})}function a(e,t,o,n){e.addEventListener(t,o,n),this._eventListeners.push([e,t,o,n])}var r=function(){function t(){return n(o,arguments)}var o={en:{}},n=e(\"$\").intl;return t.all=o,t}(),i=\"onwheel\"in document.createElement(\"div\")?\"wheel\":void 0!==document.onmousewheel?\"mousewheel\":\"DOMMouseScroll\",d={touchDevice:!1,target:null,targetX:0,targetY:0,bodyDownX:0,bodyDownY:0,bodyMoveX:-1,bodyMoveY:-1,bodyMoveLastX:-1,bodyMoveLastY:-1,onDrag:null,lastTapTime:0},l=function(e){d.touchDevice||(d.bodyDownX=e.pageX,d.bodyDownY=e.pageY,d.bodyMoveX=e.pageX,d.bodyMoveY=e.pageY,d.bodyMoveLastX=e.pageX,d.bodyMoveLastY=e.pageY)},p=function(e){if(!d.touchDevice&&d.target&&(e.stopPropagation(),e.preventDefault(),d.bodyMoveLastX=d.bodyMoveX,d.bodyMoveLastY=d.bodyMoveY,d.bodyMoveX=e.pageX,d.bodyMoveY=e.pageY,d.target)){var t=d.target._slots;\"function\"==typeof t.drag&&t.drag({action:\"drag\",target:d.target.element,x0:d.targetX,y0:d.targetY,x:d.targetX+d.bodyMoveX-d.bodyDownX,y:d.targetY+d.bodyMoveY-d.bodyDownY,dx:d.bodyMoveX-d.bodyDownX,dy:d.bodyMoveY-d.bodyDownY,vx:d.bodyMoveX-d.bodyMoveLastX,vy:d.bodyMoveY-d.bodyMoveLastY})}},v=function(e){if(!d.touchDevice&&d.target){e.stopPropagation(),e.preventDefault();var t=Date.now(),o=d.target._slots,n=e.pageX-d.bodyDownX,a=e.pageY-d.bodyDownY;o.up&&o.up({action:\"up\",target:d.target.element,x:d.targetX+n,y:d.targetY+a,dx:n,dy:a}),n*n+a*a<1024&&(d.lastTapTime>0&&(o.doubletap&&t-d.lastTapTime<400?o.doubletap({action:\"doubletap\",target:d.target.element,x:d.targetX+n,y:d.targetY+a}):d.lastTapTime=0),o.tap&&0==d.lastTapTime&&o.tap({action:\"tap\",target:d.target.element,x:d.targetX+n,y:d.targetY+a}),d.lastTapTime=t),delete d.target}};document.body.addEventListener(\"mousedown\",l,!0),document.body.addEventListener(\"mousemove\",p,!0),document.body.addEventListener(\"mouseup\",v,!0),n.prototype.on=function(e,t){var o=this,n=this._slots;return\"function\"==typeof t&&(n[e]=t),\"wheel\"==e&&a.call(o,this.element,i,function(e){var t=o.element.getBoundingClientRect();n.wheel({target:o.element,action:\"wheel\",delta:e.deltaY,x:e.clientX-t.left,y:e.clientY-t.top,stopPropagation:e.stopPropagation.bind(e),preventDefault:e.preventDefault.bind(e)})}),this},n.prototype.off=function(){this._eventListeners.forEach(function(e){var t=e[0],o=e[1],n=e[2],a=e[3];t.removeEventListener(o,n,a)})},t.exports=n,t.exports._=r});\n//# sourceMappingURL=tfw.pointer-events.js.map","map":{"version":3,"file":"tfw.pointer-events.js.map","sources":["tfw.pointer-events.js"],"sourcesContent":["/** @module tfw.pointer-events */require( 'tfw.pointer-events', function(require, module, exports) { var _=function(){var D={\"en\":{}},X=require(\"$\").intl;function _(){return X(D,arguments);}_.all=D;return _}();\n    /**\n * @module tfw.pointer-events\n *\n * @description\n * Available actions are:\n * down, up, tap, doubletap,\n * drag, move, wheel.\n *\n * @example\n * var mod = require('tfw.pointer-events');\n */\n\n// Webkit and Opera still use 'mousewheel' event type.\nvar WHEEL_EVENT = \"onwheel\" in document.createElement(\"div\") ? \"wheel\" :\n        // Modern browsers support \"wheel\"\n        document.onmousewheel !== undefined ? \"mousewheel\" :\n        // Webkit and IE support at least \"mousewheel\"\n        \"DOMMouseScroll\"; // let's assume that remaining browsers are older Firefox\n\n\nvar G = {\n    // As soon as a touch occurs, no more mouse events can be handled.\n    touchDevice: false,\n    // When a DOM element is touched, `target` holds it.\n    // Then we can track mouse events on __body__ using capture.\n    target: null,\n    // Coords of _down_ on target.\n    targetX: 0, targetY: 0,\n    // Coords of _down_ on body.\n    bodyDownX: 0, bodyDownY: 0,\n    // Current mouse position on body.\n    bodyMoveX: -1, bodyMoveY: -1,\n    // Last mouse position on body.\n    bodyMoveLastX: -1, bodyMoveLastY: -1,\n    // drag event.\n    onDrag: null,\n    // Last time tap for double tap detection.\n    lastTapTime: 0\n};\n\nvar onDocumentMouseDown = function(evt) {\n    if (G.touchDevice) return;\n    G.bodyDownX = evt.pageX;\n    G.bodyDownY = evt.pageY;\n    G.bodyMoveX = evt.pageX;\n    G.bodyMoveY = evt.pageY;\n    G.bodyMoveLastX = evt.pageX;\n    G.bodyMoveLastY = evt.pageY;\n};\n\nvar onDocumentMouseMove = function(evt) {\n    if (G.touchDevice) return;\n    if( !G.target ) return;\n    evt.stopPropagation();\n    evt.preventDefault();\n\n    G.bodyMoveLastX = G.bodyMoveX;\n    G.bodyMoveLastY = G.bodyMoveY;\n    G.bodyMoveX = evt.pageX; // + rectB.left;\n    G.bodyMoveY = evt.pageY; // + rectB.top;\n\n    if (!G.target) return;\n\n    var slots = G.target._slots;\n    if (typeof slots.drag !== 'function') return;\n\n    slots.drag({\n        action: 'drag',\n        target: G.target.element,\n        x0: G.targetX,\n        y0: G.targetY,\n        x: G.targetX + G.bodyMoveX - G.bodyDownX,\n        y: G.targetY + G.bodyMoveY - G.bodyDownY,\n        dx: G.bodyMoveX - G.bodyDownX,\n        dy: G.bodyMoveY - G.bodyDownY,\n        vx: G.bodyMoveX - G.bodyMoveLastX,\n        vy: G.bodyMoveY - G.bodyMoveLastY\n    });\n};\n\nvar onDocumentMouseUp = function(evt) {\n    if( G.touchDevice ) return;\n    if( !G.target ) return;\n    evt.stopPropagation();\n    evt.preventDefault();\n\n    var time = Date.now();\n    var slots = G.target._slots;\n    var dx = evt.pageX - G.bodyDownX;\n    var dy = evt.pageY - G.bodyDownY;\n    if (slots.up) {\n        slots.up({\n            action: 'up',\n            target: G.target.element,\n            x: G.targetX + dx,\n            y: G.targetY + dy,\n            dx: dx,\n            dy: dy\n        });\n    }\n    // Tap or doubletap.\n    if (dx * dx + dy * dy < 1024) {\n        if (G.lastTapTime > 0) {\n            if (slots.doubletap && time - G.lastTapTime < 400) {\n                slots.doubletap({\n                    action: 'doubletap',\n                    target: G.target.element,\n                    x: G.targetX + dx,\n                    y: G.targetY + dy\n                });\n            } else {\n                G.lastTapTime = 0;\n            }\n        }\n        if (slots.tap && G.lastTapTime == 0) {\n            slots.tap({\n                action: 'tap',\n                target: G.target.element,\n                x: G.targetX + dx,\n                y: G.targetY + dy\n            });\n        }\n        G.lastTapTime = time;\n    }\n    delete G.target;\n};\n\n\ndocument.body.addEventListener( 'mousedown', onDocumentMouseDown, true );\ndocument.body.addEventListener( 'mousemove', onDocumentMouseMove, true );\ndocument.body.addEventListener( 'mouseup', onDocumentMouseUp, true );\n\n\nfunction PointerEvents( element ) {\n    var that = this;\n\n    this._slots = {};\n    this._eventListeners = [];\n\n    Object.defineProperty( PointerEvents.prototype, 'element', {\n        value: element, writable: false, configurable: true, enumerable: true\n    });\n\n    //===============\n    // Touch events.\n    addEvent.call(that, element, 'touchstart', function(evt) {\n        if( !G.touchDevice ) {\n            G.touchDevice = true;\n            document.body.removeEventListener( 'mousedown', onDocumentMouseDown, true );\n            document.body.removeEventListener( 'mousemove', onDocumentMouseMove, true );\n            document.body.removeEventListener( 'mouseup', onDocumentMouseUp, true );\n        }\n        var slots = that._slots;\n        if (evt.touches.length == 1) {\n            G.rect = element.getBoundingClientRect();\n            G.bodyMoveX = evt.touches[0].clientX;\n            G.bodyMoveY = evt.touches[0].clientY;\n            G.bodyDownX = evt.touches[0].clientX;\n            G.bodyDownY = evt.touches[0].clientY;\n            G.targetX = evt.touches[0].clientX - G.rect.left;\n            G.targetY = evt.touches[0].clientY - G.rect.top;\n            G.time = Date.now();\n            if (slots.down) {\n                slots.down({\n                    action: 'down',\n                    target: element,\n                    x: G.targetX,\n                    y: G.targetY,\n                    stopPropagation: evt.stopPropagation.bind( evt ),\n                    preventDefault: evt.preventDefault.bind( evt )\n                });\n            }\n        }\n    });\n    addEvent.call(that, element, 'touchmove', function(evt) {\n        var lastX = G.bodyMoveX;\n        var lastY = G.bodyMoveY;\n        G.bodyMoveX = evt.touches[0].clientX;\n        G.bodyMoveY = evt.touches[0].clientY;\n        var slots = that._slots;\n        if (slots.drag) {\n            slots.drag({\n                action: 'drag',\n                target: element,\n                x0: G.targetX,\n                y0: G.targetY,\n                x: G.bodyMoveX - G.rect.left,\n                y: G.bodyMoveY - G.rect.top,\n                dx: G.bodyMoveX - G.bodyDownX,\n                dy: G.bodyMoveY - G.bodyDownY,\n                vx: G.bodyMoveX - lastX,\n                vy: G.bodyMoveY - lastY,\n                stopPropagation: evt.stopPropagation.bind( evt ),\n                preventDefault: evt.preventDefault.bind( evt )\n            });\n        }\n    });\n    addEvent.call(that, element, 'touchend', function(evt) {\n        var slots = that._slots;\n        var dx = G.bodyMoveX - G.bodyDownX;\n        var dy = G.bodyMoveY - G.bodyDownY;\n        if (slots.up) {\n            slots.up({\n                action: 'up',\n                target: that.element,\n                x: G.bodyMoveX - G.rect.left,\n                y: G.bodyMoveY - G.rect.top,\n                dx: dx,\n                dy: dy,\n                stopPropagation: evt.stopPropagation.bind( evt ),\n                preventDefault: evt.preventDefault.bind( evt )\n            });\n        }\n        // Tap or doubletap.\n        if (dx * dx + dy * dy < 256) {\n            var time = Date.now();\n            if (G.lastTapTime > 0) {\n                if (slots.doubletap && time - G.lastTapTime < 400) {\n                    slots.doubletap({\n                        action: 'doubletap',\n                        target: that.element,\n                        x: G.bodyMoveX - G.rect.left,\n                        y: G.bodyMoveY - G.rect.top,\n                        stopPropagation: evt.stopPropagation.bind( evt ),\n                        preventDefault: evt.preventDefault.bind( evt )\n                    });\n                } else {\n                    G.lastTapTime = 0;\n                }\n            }\n            if (slots.tap && G.lastTapTime == 0) {\n                evt.stopPropagation();\n                evt.preventDefault();\n                slots.tap({\n                    action: 'tap',\n                    target: that.element,\n                    x: G.bodyMoveX - G.rect.left,\n                    y: G.bodyMoveY - G.rect.top,\n                    stopPropagation: evt.stopPropagation.bind( evt ),\n                    preventDefault: evt.preventDefault.bind( evt )\n                });\n            }\n            G.lastTapTime = time;\n        }\n    });\n\n    //===============\n    // Mouse events.\n    addEvent.call(that, element, 'mousedown', function(evt) {\n        if (G.touchDevice) return;\n        var slots = that._slots;\n        var rect = element.getBoundingClientRect();\n        G.target = that;\n        G.targetX = evt.clientX - rect.left;\n        G.targetY = evt.clientY - rect.top;\n        if (slots.down) {\n            slots.down({\n                action: 'down',\n                target: element,\n                x: G.targetX,\n                y: G.targetY,\n                stopPropagation: evt.stopPropagation.bind( evt ),\n                preventDefault: evt.preventDefault.bind( evt )\n            });\n        }\n    });\n    addEvent.call(that, element, 'mousemove', function(evt) {\n        var slots = that._slots;\n        if (slots.move) {\n            var rectA = element.getBoundingClientRect();\n            var rectB = evt.target.getBoundingClientRect();\n            slots.move({\n                target: element,\n                action: 'move',\n                x: evt.offsetX + rectB.left - rectA.left,\n                y: evt.offsetY + rectB.top - rectA.top\n            });\n        }\n    });\n\n    Object.defineProperty( this, 'element', {\n        value: element, writable: true, configurable: true, enumerable: true\n    });\n}\n\n\n/**\n * @return void\n */\nPointerEvents.prototype.on = function(action, event) {\n    var that = this;\n\n    var slots = this._slots;\n    if (typeof event === 'function') {\n        slots[action] = event;\n    }\n    if (action == 'wheel') {\n        addEvent.call(that, this.element, WHEEL_EVENT, function(evt) {\n            var rect = that.element.getBoundingClientRect();\n            slots.wheel({\n                target: that.element,\n                action: 'wheel',\n                delta: evt.deltaY,\n                x: evt.clientX - rect.left,\n                y: evt.clientY - rect.top,\n                stopPropagation: evt.stopPropagation.bind( evt ),\n                preventDefault: evt.preventDefault.bind( evt )\n            });\n        });\n    }\n    return this;\n};\n\n\n/**\n * @return void\n */\nPointerEvents.prototype.off = function() {\n    this._eventListeners.forEach(function (itm) {\n        var element = itm[0];\n        var event = itm[1];\n        var listener = itm[2];\n        var capture = itm[3];\n        element.removeEventListener( event, listener, capture );\n    });\n};\n\n\nfunction addEvent(element, event, listener, capture) {\n    element.addEventListener( event, listener, capture );\n    this._eventListeners.push([element, event, listener, capture]);\n}\n\nmodule.exports = PointerEvents;\n\n\n  \nmodule.exports._ = _;\n});"],"names":["require","module","exports","PointerEvents","element","that","this","_slots","_eventListeners","Object","defineProperty","prototype","value","writable","configurable","enumerable","addEvent","call","evt","G","touchDevice","document","body","removeEventListener","onDocumentMouseDown","onDocumentMouseMove","onDocumentMouseUp","slots","touches","length","rect","getBoundingClientRect","bodyMoveX","clientX","bodyMoveY","clientY","bodyDownX","bodyDownY","targetX","left","targetY","top","time","Date","now","down","action","target","x","y","stopPropagation","bind","preventDefault","lastX","lastY","drag","x0","y0","dx","dy","vx","vy","up","lastTapTime","doubletap","tap","move","rectA","rectB","offsetX","offsetY","event","listener","capture","addEventListener","push","_","X","D","arguments","en","intl","all","WHEEL_EVENT","createElement","undefined","onmousewheel","bodyMoveLastX","bodyMoveLastY","onDrag","pageX","pageY","on","wheel","delta","deltaY","off","forEach","itm"],"mappings":"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"},"dependencies":["mod/$"]}