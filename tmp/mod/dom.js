{"watch":[],"intl":"var _=function(){var D={\"en\":{}},X=require(\"$\").intl;function _(){return X(D,arguments);}_.all=D;return _}();\r\n","src":"/** @module dom */require( 'dom', function(require, module, exports) { var _=function(){var D={\"en\":{}},X=require(\"$\").intl;function _(){return X(D,arguments);}_.all=D;return _}();\r\n   /**\r\n * @module dom\r\n *\r\n * @description\r\n * Functions which facilitate DOm manipulations.\r\n * Included __interact.js__. You can find documentation for it here:\r\n * [http://interactjs.io/docs/]\r\n *\r\n * @example\r\n * var mod = require('dom');\r\n */\r\nrequire(\"polyfill.classList\");\r\nvar PointerEvents = require(\"tfw.pointer-events\");\r\n\r\nvar $ = function(dom) {\r\n    if (typeof dom === 'string') {\r\n        var elem = document.getElementById( dom );\r\n        if (!elem) {\r\n            console.error( \"[dom] There is no DOM element with this ID: `\" + dom + \"`\" );\r\n        }\r\n        return elem;\r\n    }\r\n    if (!dom) {\r\n        debugger;\r\n        throw Error(\"`dom` is not a valid element!\", dom);\r\n    }\r\n    if (typeof dom.element === 'function') return dom.element();\r\n    if (dom.element) return dom.element;\r\n    return dom;\r\n};\r\n\r\nmodule.exports = $;\r\n\r\n\r\n// Used to store data on the DOM element without colliding with existing attributes.\r\nvar SYMBOL = '@dom' + Date.now();\r\n\r\n\r\n$.tagNS = tagNS;\r\n$.svgRoot = tagNS.bind( undefined, \"http://www.w3.org/2000/svg\", \"svg\", {\r\n    version: '1.1',\r\n    'xmlns:svg': 'http://www.w3.org/2000/svg',\r\n    xmlns: 'http://www.w3.org/2000/svg',\r\n    'xmlns:xlink': 'http://www.w3.org/1999/xlink'\r\n});\r\n$.svg = tagNS.bind( undefined, \"http://www.w3.org/2000/svg\" );\r\n$.tag = tagNS.bind( undefined, \"http://www.w3.org/1999/xhtml\" );\r\n$.div = tagNS.bind( undefined, \"http://www.w3.org/1999/xhtml\", \"div\" );\r\n$.txt = window.document.createTextNode.bind( window.document );\r\n$.textOrHtml = textOrHtml;\r\n$.get = get;\r\n/**\r\n * Add a readonly `element` property to `obj` and return it.\r\n */\r\n$.elem = elem;\r\n/**\r\n * Apply css rules on `element`.\r\n *\r\n * @return `element`.\r\n *\r\n * @example\r\n * var $ = require('dom');\r\n * $.css( element, { width: '800px'. height: '600px' });\r\n */\r\n$.css = css;\r\n$.att = att;\r\n$.removeAtt = removeAtt;\r\n$.addClass = addClass;\r\n$.hasClass = hasClass;\r\n$.removeClass = removeClass;\r\n$.toggleClass = toggleClass;\r\n$.saveStyle = saveStyle;\r\n$.restoreStyle = restoreStyle;\r\n/**\r\n * @param newElem {Element} - Replacement element.\r\n * @param oldElem {Element} - Element to replace.\r\n */\r\n$.replace = replace;\r\n/**\r\n * Remove element from its parent.\r\n * @param element {Element} - Element to detach from its parent.\r\n * @return The parent element.\r\n */\r\n$.detach = detach;\r\n/**\r\n * Add event handlers to one or many elements.\r\n *\r\n * @param {object|array}  element -  list of  elements on  which apply\r\n * events handlers.\r\n *\r\n * @param  {object|function} slots  - If  a function  is given,  it is\r\n * considered as a slot for the event `tap`.  Otherwise, the object is\r\n * a map  between events' names (the  key) and function to  handle the\r\n * event (the value).\r\n * Events' names are:\r\n * * __tap__: When  the element is  pressed and released in  less than\r\n 900 ms and without too much sliding.\r\n * * __doubletap__\r\n * * __dragmove__\r\n *\r\n * @param {boolean} capture - If `true` events are captured before they reach the children.\r\n *\r\n * @example\r\n *    DOM.on( [screen, button], function() {...} );\r\n *    DOM.on( body, null );   // Do nothing, but stop propagation.\r\n *    DOM.on( element, { tap: function() {...} } );\r\n */\r\n$.on = on;\r\n$.off = off;\r\n/**\r\n * Append all the `children` to `element`.\r\n * @param element\r\n * @param ...children\r\n */\r\n$.add = add;\r\n/**\r\n * Add the attribute `element` and the following functions to `obj`:\r\n * * __css__\r\n * * __addClass__\r\n * * __removeClass__\r\n * * __toggleClass__\r\n */\r\n$.wrap = wrap;\r\n/**\r\n * Remove all children of the `element`.\r\n * @param element {Element} - Element from which remove all the children.\r\n */\r\n$.clear = clear;\r\n\r\nfunction wrap( obj, element, nomethods ) {\r\n    Object.defineProperty( obj, 'element', {\r\n        value: element, writable: false, configurable: false, enumerable: true\r\n    });\r\n    if( nomethods ) return obj;\r\n\r\n    obj.on = on.bind( obj, element );\r\n    obj.css = css.bind( obj, element );\r\n    obj.add = add.bind( obj, element );\r\n    obj.att = att.bind( obj, element );\r\n    obj.addClass = addClass.bind( obj, element );\r\n    obj.hasClass = hasClass.bind( obj, element );\r\n    obj.removeClass = removeClass.bind( obj, element );\r\n    obj.toggleClass = toggleClass.bind( obj, element );\r\n    return obj;\r\n}\r\n\r\nfunction replace( newElem, oldElem ) {\r\n    newElem = $(newElem);\r\n    oldElem = $(oldElem);\r\n    oldElem.parentNode.replaceChild( newElem, oldElem );\r\n    return newElem;\r\n}\r\n\r\nfunction css( element, styles ) {\r\n    element = $(element);\r\n    var key, val;\r\n    for( key in styles ) {\r\n        val = styles[key];\r\n        element.style[key] = val;\r\n    }\r\n    return element;\r\n}\r\n\r\nfunction att( element, attribs, value ) {\r\n    element = $(element);\r\n    var key, val;\r\n    if (typeof attribs === 'string') {\r\n        key = attribs;\r\n        attribs = {};\r\n        attribs[key] = value;\r\n    }\r\n    for( key in attribs ) {\r\n        val = attribs[key];\r\n        element.setAttribute( key, val );\r\n    }\r\n    return element;\r\n}\r\n\r\nfunction removeAtt( element, attrib ) {\r\n    element = $(element);\r\n    element.removeAttribute( attrib );\r\n    return element;\r\n}\r\n\r\nfunction add( element ) {\r\n    element = $(element);\r\n    try {\r\n        var i, child;\r\n        for (i = 1 ; i < arguments.length ; i++) {\r\n            child = arguments[i];\r\n            if( typeof child === 'string' || typeof child === 'number' ) {\r\n                child = '' + child;\r\n                if( child.substr( 0, 6 ) == '<html>' ) {\r\n                    var html = child.substr( 6 );\r\n                    child = $.tag('span');\r\n                    child.innerHTML = html;\r\n                } else {\r\n                    child = document.createTextNode( child );\r\n                }\r\n            }\r\n            else if( typeof child.element === 'function' ) {\r\n                // Backward compatibility with Widgets.\r\n                child = child.element();\r\n            }\r\n            else if( typeof child.element !== 'undefined' ) {\r\n                child = child.element;\r\n            }\r\n            element.appendChild( child );\r\n        }\r\n        return element;\r\n    }\r\n    catch( ex ) {\r\n        console.error( \"[DOM.add] arguments=\", [].slice.call( arguments ) );\r\n        throw Error( \"[DOM.add] \" + ex );\r\n    }\r\n}\r\n\r\nfunction off( element ) {\r\n    if( Array.isArray( element ) ) {\r\n        element.forEach(function ( elem ) {\r\n            off( elem );\r\n        });\r\n        return element;\r\n    }\r\n\r\n    if( typeof element[SYMBOL] === 'undefined' ) return element;\r\n    var pe = element[SYMBOL].events;\r\n    if( typeof pe  === 'undefined' ) return element;\r\n    pe.off();\r\n    delete element[SYMBOL].events;\r\n}\r\n\r\nfunction on( element, slots ) {\r\n    // If only a function is passed, we consider this is a Tap event.\r\n    if( typeof slots === 'function' || slots === null ) slots = { tap: slots };\r\n\r\n    if( Array.isArray( element ) ) {\r\n        element.forEach(function ( elem ) {\r\n            on( elem, slots );\r\n        });\r\n        return element;\r\n    }\r\n\r\n    element = $(element);\r\n    if( typeof element[SYMBOL] === 'undefined' ) element[SYMBOL] = {};\r\n    if( typeof element[SYMBOL].events === 'undefined' ) {\r\n        element[SYMBOL].events = new PointerEvents( element );\r\n    }\r\n\r\n    var key, val, preview;\r\n    for( key in slots ) {\r\n        val = slots[key];\r\n        if (key.charAt(0) == '!') {\r\n            key = key.substr(1);\r\n            preview = true;\r\n        } else {\r\n            preview = false;\r\n        }\r\n        if (key == 'keydown' || key == 'keyup') {\r\n            element.addEventListener( key, val, preview );\r\n        } else {\r\n            element[SYMBOL].events.on( key, val, preview );\r\n        }\r\n    }\r\n\r\n    return element;\r\n}\r\n\r\nfunction tagNS( ns, name ) {\r\n    try {\r\n        var e = document.createElementNS( ns, name );\r\n        var i, arg, key, val;\r\n        for (i = 2 ; i < arguments.length ; i++) {\r\n            arg = arguments[i];\r\n            if( Array.isArray(arg) ) {\r\n                // Arrays are for children.\r\n                arg.forEach(function (child) {\r\n                    switch( typeof child ) {\r\n                    case 'string':\r\n                    case 'number':\r\n                    case 'boolean':\r\n                        child = '' + child;\r\n                        if( child.substr( 0, 6 ) == '<html>' ) {\r\n                            var html = child.substr( 6 );\r\n                            child = $.tag('span');\r\n                            child.innerHTML = html;\r\n                        } else {\r\n                            child = document.createTextNode( child );\r\n                        }\r\n                        break;\r\n                    }\r\n                    add( e, child );\r\n                });\r\n            } else {\r\n                switch( typeof arg ) {\r\n                case \"string\":\r\n                    arg.split( ' ' ).forEach(function ( item ) {\r\n                        if( item.length > 0 ) {\r\n                            addClass(e, item);\r\n                        }\r\n                    });\r\n                    break;\r\n                case \"object\":\r\n                    for( key in arg ) {\r\n                        val = arg[key];\r\n                        e.setAttribute( key, val );\r\n                    }\r\n                    break;\r\n                default:\r\n                    throw Error(\"[dom.tag] Error creating <\" + name + \">: Invalid argument #\" + i + \"!\");\r\n                }\r\n            }\r\n        }\r\n        return e;\r\n    }\r\n    catch (ex) {\r\n        console.error(\"[dom.tagNS] Error with `ns` = \", ns, \" and `name` = \", name);\r\n        console.error(ex);\r\n    }\r\n};\r\n\r\n\r\nfunction addClass(elem) {\r\n    var args = [].slice.call( arguments, 1 );\r\n    if( Array.isArray( elem ) ) {\r\n        // Loop on each element.\r\n        args.unshift( null );\r\n        elem.forEach(function ( child ) {\r\n            args[0] = child;\r\n            addClass.apply( undefined, args );\r\n        });\r\n        return elem;\r\n    }\r\n    elem = $( elem );\r\n    args.forEach(function (className) {\r\n        if (typeof className !== 'string') return;\r\n        className = className.trim();\r\n        if( className.length == 0 ) return;\r\n        try {\r\n            if( elem.classList )\r\n                elem.classList.add( className );\r\n        }\r\n        catch( ex ) {\r\n            console.error( \"[dom.addClass] Invalid class name: \", className );\r\n            console.error( ex );\r\n        }\r\n    });\r\n    return elem;\r\n}\r\n\r\n\r\nfunction hasClass( elem, className ) {\r\n    elem = $( elem );\r\n    if( !elem.classList ) return false;\r\n    return elem.classList.contains( className );\r\n}\r\n\r\n\r\nfunction removeClass(elem) {\r\n    var args = [].slice.call( arguments, 1 );\r\n    if( Array.isArray( elem ) ) {\r\n        // Loop on each element.\r\n        args.unshift( null );\r\n        elem.forEach(function ( child ) {\r\n            args[0] = child;\r\n            removeClass.apply( undefined, args );\r\n        });\r\n        return elem;\r\n    }\r\n    elem = $( elem );\r\n    args.forEach(function (className) {\r\n        if (typeof className !== 'string') return;\r\n        try {\r\n            if( elem.classList )\r\n                elem.classList.remove( className );\r\n        }\r\n        catch( ex ) {\r\n            console.error( \"[dom.removeClass] Invalid class name: \", className );\r\n            console.error( ex );\r\n        }\r\n    });\r\n    return elem;\r\n}\r\n\r\n\r\nfunction toggleClass(elem) {\r\n    var args = [].slice.call( arguments, 1 );\r\n    args.forEach(function( className ) {\r\n        if( hasClass( elem, className ) ) {\r\n            removeClass( elem, className );\r\n        } else {\r\n            addClass( elem, className );\r\n        }\r\n    });\r\n    return elem;\r\n}\r\n\r\n\r\nfunction clear( element ) {\r\n    // (!) On préfère retirer les éléments un par un du DOM plutôt que d'utiliser simplement\r\n    // this.html(\"\").\r\n    // En effet, le code simplifié a des conséquences inattendues dans IE9 et IE10 au moins.\r\n    // Le bug des markers qui disparaissaients sur les cartes de Trail-Passion 4 a été corrigé\r\n    // avec cette modification.\r\n    element = $(element);\r\n    var e = element;\r\n    while(e.firstChild){\r\n        e.removeChild(e.firstChild);\r\n    }\r\n    var args = [].slice.call( arguments );\r\n    if( args.length > 1 ) {\r\n        add.apply( this, args );\r\n    }\r\n    return element;\r\n}\r\n\r\nfunction get( element, query ) {\r\n    element = $(element);\r\n    if( typeof query === 'undefined' ) {\r\n        query = element;\r\n        element = window.document;\r\n    }\r\n    return element.querySelector( query );\r\n}\r\n\r\nfunction detach( element ) {\r\n    element = $(element);\r\n    var parent = element.parentElement;\r\n    if( !parent ) return parent;\r\n    parent.removeChild( element );\r\n    return parent;\r\n}\r\n\r\nfunction elem( target ) {\r\n    var args = [].slice.call( arguments );\r\n    args.shift();\r\n    if (args.length == 0) args = ['div'];\r\n    args.push('dom', 'custom');\r\n    var e;\r\n    if (typeof args[0].element !== 'undefined') {\r\n        e = args[0].element;\r\n        addClass( e, 'dom', 'custom' );\r\n    } else if (typeof args[0].appendChild === 'function') {\r\n        e = args[0];\r\n        addClass( e, 'dom', 'custom' );\r\n    } else {\r\n        e = $.tag.apply( $, args );\r\n    }\r\n    Object.defineProperty( target, 'element', {\r\n        value: e, writable: false, configurable: false, enumerable: true\r\n    });\r\n    return e;\r\n}\r\n\r\nfunction textOrHtml( element, content ) {\r\n    if( typeof content === 'undefined' ) content = '';\r\n    if (content === null) content = '';\r\n    if (typeof content !== 'string') content = JSON.stringify( content );\r\n    if (content.substr(0, 6) == '<html>') {\r\n        element.innerHTML = content.substr(6);\r\n    } else {\r\n        element.textContent = content;\r\n    }\r\n    return element;\r\n}\r\n\r\nfunction saveStyle( elements ) {\r\n    if( !Array.isArray( elements ) ) return saveStyle( Array.prototype.slice.call( arguments ) );\r\n    elements.forEach(function (elem) {\r\n        elem = $( elem );\r\n        if( typeof elem[SYMBOL] === 'undefined' ) elem[SYMBOL] = {};\r\n        if( !Array.isArray( elem[SYMBOL].style ) ) elem[SYMBOL].style = [];\r\n        elem[SYMBOL].style.push( JSON.stringify( elem.style ) );\r\n    });\r\n}\r\n\r\nfunction restoreStyle( elements ) {\r\n    if( !Array.isArray( elements ) ) return restoreStyle( Array.prototype.slice.call( arguments ) );\r\n    elements.forEach(function (elem) {\r\n        elem = $( elem );\r\n        if( typeof elem[SYMBOL] === 'undefined' || !Array.isArray( elem[SYMBOL].style ) ) throw Error(\r\n            \"[dom.restoreStyle] `saveStyle()` has never been used on this element!\");\r\n        if( elem[SYMBOL].style.length == 0 ) throw Error(\r\n            \"[dom.restoreStyle] more `restore` than `save`!\");\r\n        var styles = JSON.parse( elem[SYMBOL].style.pop() );\r\n        var k, v;\r\n        for( k in styles ) {\r\n            v = styles[k];\r\n            if( typeof v !== 'undefined' ) {\r\n                elem.style[k] = v;\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\n\r\n  \r\nmodule.exports._ = _;\n/**\n * @module dom\n * @see module:$\n * @see module:polyfill.classList\n * @see module:tfw.pointer-events\n\n */\n});","zip":"require(\"dom\",function(e,t,r){function n(e,t,r){return Object.defineProperty(e,\"element\",{value:t,writable:!1,configurable:!1,enumerable:!0}),r?e:(e.on=f.bind(e,t),e.css=i.bind(e,t),e.add=l.bind(e,t),e.att=s.bind(e,t),e.addClass=d.bind(e,t),e.hasClass=y.bind(e,t),e.removeClass=m.bind(e,t),e.toggleClass=p.bind(e,t),e)}function o(e,t){return e=S(e),t=S(t),t.parentNode.replaceChild(e,t),e}function i(e,t){e=S(e);var r,n;for(r in t)n=t[r],e.style[r]=n;return e}function s(e,t,r){e=S(e);var n,o;\"string\"==typeof t&&(n=t,t={},t[n]=r);for(n in t)o=t[n],e.setAttribute(n,o);return e}function a(e,t){return e=S(e),e.removeAttribute(t),e}function l(e){e=S(e);try{var t,r;for(t=1;t<arguments.length;t++){if(r=arguments[t],\"string\"==typeof r||\"number\"==typeof r)if(r=\"\"+r,\"<html>\"==r.substr(0,6)){var n=r.substr(6);r=S.tag(\"span\"),r.innerHTML=n}else r=document.createTextNode(r);else\"function\"==typeof r.element?r=r.element():\"undefined\"!=typeof r.element&&(r=r.element);e.appendChild(r)}return e}catch(e){throw console.error(\"[DOM.add] arguments=\",[].slice.call(arguments)),Error(\"[DOM.add] \"+e)}}function c(e){if(Array.isArray(e))return e.forEach(function(e){c(e)}),e;if(\"undefined\"==typeof e[L])return e;var t=e[L].events;return\"undefined\"==typeof t?e:(t.off(),void delete e[L].events)}function f(e,t){if(\"function\"!=typeof t&&null!==t||(t={tap:t}),Array.isArray(e))return e.forEach(function(e){f(e,t)}),e;e=S(e),\"undefined\"==typeof e[L]&&(e[L]={}),\"undefined\"==typeof e[L].events&&(e[L].events=new x(e));var r,n,o;for(r in t)n=t[r],\"!\"==r.charAt(0)?(r=r.substr(1),o=!0):o=!1,\"keydown\"==r||\"keyup\"==r?e.addEventListener(r,n,o):e[L].events.on(r,n,o);return e}function u(e,t){try{var r,n,o,i,s=document.createElementNS(e,t);for(r=2;r<arguments.length;r++)if(n=arguments[r],Array.isArray(n))n.forEach(function(e){switch(typeof e){case\"string\":case\"number\":case\"boolean\":if(e=\"\"+e,\"<html>\"==e.substr(0,6)){var t=e.substr(6);e=S.tag(\"span\"),e.innerHTML=t}else e=document.createTextNode(e)}l(s,e)});else switch(typeof n){case\"string\":n.split(\" \").forEach(function(e){e.length>0&&d(s,e)});break;case\"object\":for(o in n)i=n[o],s.setAttribute(o,i);break;default:throw Error(\"[dom.tag] Error creating <\"+t+\">: Invalid argument #\"+r+\"!\")}return s}catch(r){console.error(\"[dom.tagNS] Error with `ns` = \",e,\" and `name` = \",t),console.error(r)}}function d(e){var t=[].slice.call(arguments,1);return Array.isArray(e)?(t.unshift(null),e.forEach(function(e){t[0]=e,d.apply(void 0,t)}),e):(e=S(e),t.forEach(function(t){if(\"string\"==typeof t&&(t=t.trim(),0!=t.length))try{e.classList&&e.classList.add(t)}catch(e){console.error(\"[dom.addClass] Invalid class name: \",t),console.error(e)}}),e)}function y(e,t){return e=S(e),!!e.classList&&e.classList.contains(t)}function m(e){var t=[].slice.call(arguments,1);return Array.isArray(e)?(t.unshift(null),e.forEach(function(e){t[0]=e,m.apply(void 0,t)}),e):(e=S(e),t.forEach(function(t){if(\"string\"==typeof t)try{e.classList&&e.classList.remove(t)}catch(e){console.error(\"[dom.removeClass] Invalid class name: \",t),console.error(e)}}),e)}function p(e){var t=[].slice.call(arguments,1);return t.forEach(function(t){y(e,t)?m(e,t):d(e,t)}),e}function v(e){e=S(e);for(var t=e;t.firstChild;)t.removeChild(t.firstChild);var r=[].slice.call(arguments);return r.length>1&&l.apply(this,r),e}function h(e,t){return e=S(e),\"undefined\"==typeof t&&(t=e,e=window.document),e.querySelector(t)}function g(e){e=S(e);var t=e.parentElement;return t?(t.removeChild(e),t):t}function w(e){var t=[].slice.call(arguments);t.shift(),0==t.length&&(t=[\"div\"]),t.push(\"dom\",\"custom\");var r;return\"undefined\"!=typeof t[0].element?(r=t[0].element,d(r,\"dom\",\"custom\")):\"function\"==typeof t[0].appendChild?(r=t[0],d(r,\"dom\",\"custom\")):r=S.tag.apply(S,t),Object.defineProperty(e,\"element\",{value:r,writable:!1,configurable:!1,enumerable:!0}),r}function b(e,t){return\"undefined\"==typeof t&&(t=\"\"),null===t&&(t=\"\"),\"string\"!=typeof t&&(t=JSON.stringify(t)),\"<html>\"==t.substr(0,6)?e.innerHTML=t.substr(6):e.textContent=t,e}function A(e){return Array.isArray(e)?void e.forEach(function(e){e=S(e),\"undefined\"==typeof e[L]&&(e[L]={}),Array.isArray(e[L].style)||(e[L].style=[]),e[L].style.push(JSON.stringify(e.style))}):A(Array.prototype.slice.call(arguments))}function E(e){return Array.isArray(e)?void e.forEach(function(e){if(e=S(e),\"undefined\"==typeof e[L]||!Array.isArray(e[L].style))throw Error(\"[dom.restoreStyle] `saveStyle()` has never been used on this element!\");if(0==e[L].style.length)throw Error(\"[dom.restoreStyle] more `restore` than `save`!\");var t,r,n=JSON.parse(e[L].style.pop());for(t in n)r=n[t],\"undefined\"!=typeof r&&(e.style[t]=r)}):E(Array.prototype.slice.call(arguments))}var C=function(){function t(){return n(r,arguments)}var r={en:{}},n=e(\"$\").intl;return t.all=r,t}();e(\"polyfill.classList\");var x=e(\"tfw.pointer-events\"),S=function(e){if(\"string\"==typeof e){var t=document.getElementById(e);return t||console.error(\"[dom] There is no DOM element with this ID: `\"+e+\"`\"),t}if(!e)throw Error(\"`dom` is not a valid element!\",e);return\"function\"==typeof e.element?e.element():e.element?e.element:e};t.exports=S;var L=\"@dom\"+Date.now();S.tagNS=u,S.svgRoot=u.bind(void 0,\"http://www.w3.org/2000/svg\",\"svg\",{version:\"1.1\",\"xmlns:svg\":\"http://www.w3.org/2000/svg\",xmlns:\"http://www.w3.org/2000/svg\",\"xmlns:xlink\":\"http://www.w3.org/1999/xlink\"}),S.svg=u.bind(void 0,\"http://www.w3.org/2000/svg\"),S.tag=u.bind(void 0,\"http://www.w3.org/1999/xhtml\"),S.div=u.bind(void 0,\"http://www.w3.org/1999/xhtml\",\"div\"),S.txt=window.document.createTextNode.bind(window.document),S.textOrHtml=b,S.get=h,S.elem=w,S.css=i,S.att=s,S.removeAtt=a,S.addClass=d,S.hasClass=y,S.removeClass=m,S.toggleClass=p,S.saveStyle=A,S.restoreStyle=E,S.replace=o,S.detach=g,S.on=f,S.off=c,S.add=l,S.wrap=n,S.clear=v,t.exports._=C});\n//# sourceMappingURL=dom.js.map","map":{"version":3,"file":"dom.js","sources":["dom.js"],"sourcesContent":["/** @module dom */require( 'dom', function(require, module, exports) { var _=function(){var D={\"en\":{}},X=require(\"$\").intl;function _(){return X(D,arguments);}_.all=D;return _}();\r\n   /**\r\n * @module dom\r\n *\r\n * @description\r\n * Functions which facilitate DOm manipulations.\r\n * Included __interact.js__. You can find documentation for it here:\r\n * [http://interactjs.io/docs/]\r\n *\r\n * @example\r\n * var mod = require('dom');\r\n */\r\nrequire(\"polyfill.classList\");\r\nvar PointerEvents = require(\"tfw.pointer-events\");\r\n\r\nvar $ = function(dom) {\r\n    if (typeof dom === 'string') {\r\n        var elem = document.getElementById( dom );\r\n        if (!elem) {\r\n            console.error( \"[dom] There is no DOM element with this ID: `\" + dom + \"`\" );\r\n        }\r\n        return elem;\r\n    }\r\n    if (!dom) {\r\n        debugger;\r\n        throw Error(\"`dom` is not a valid element!\", dom);\r\n    }\r\n    if (typeof dom.element === 'function') return dom.element();\r\n    if (dom.element) return dom.element;\r\n    return dom;\r\n};\r\n\r\nmodule.exports = $;\r\n\r\n\r\n// Used to store data on the DOM element without colliding with existing attributes.\r\nvar SYMBOL = '@dom' + Date.now();\r\n\r\n\r\n$.tagNS = tagNS;\r\n$.svgRoot = tagNS.bind( undefined, \"http://www.w3.org/2000/svg\", \"svg\", {\r\n    version: '1.1',\r\n    'xmlns:svg': 'http://www.w3.org/2000/svg',\r\n    xmlns: 'http://www.w3.org/2000/svg',\r\n    'xmlns:xlink': 'http://www.w3.org/1999/xlink'\r\n});\r\n$.svg = tagNS.bind( undefined, \"http://www.w3.org/2000/svg\" );\r\n$.tag = tagNS.bind( undefined, \"http://www.w3.org/1999/xhtml\" );\r\n$.div = tagNS.bind( undefined, \"http://www.w3.org/1999/xhtml\", \"div\" );\r\n$.txt = window.document.createTextNode.bind( window.document );\r\n$.textOrHtml = textOrHtml;\r\n$.get = get;\r\n/**\r\n * Add a readonly `element` property to `obj` and return it.\r\n */\r\n$.elem = elem;\r\n/**\r\n * Apply css rules on `element`.\r\n *\r\n * @return `element`.\r\n *\r\n * @example\r\n * var $ = require('dom');\r\n * $.css( element, { width: '800px'. height: '600px' });\r\n */\r\n$.css = css;\r\n$.att = att;\r\n$.removeAtt = removeAtt;\r\n$.addClass = addClass;\r\n$.hasClass = hasClass;\r\n$.removeClass = removeClass;\r\n$.toggleClass = toggleClass;\r\n$.saveStyle = saveStyle;\r\n$.restoreStyle = restoreStyle;\r\n/**\r\n * @param newElem {Element} - Replacement element.\r\n * @param oldElem {Element} - Element to replace.\r\n */\r\n$.replace = replace;\r\n/**\r\n * Remove element from its parent.\r\n * @param element {Element} - Element to detach from its parent.\r\n * @return The parent element.\r\n */\r\n$.detach = detach;\r\n/**\r\n * Add event handlers to one or many elements.\r\n *\r\n * @param {object|array}  element -  list of  elements on  which apply\r\n * events handlers.\r\n *\r\n * @param  {object|function} slots  - If  a function  is given,  it is\r\n * considered as a slot for the event `tap`.  Otherwise, the object is\r\n * a map  between events' names (the  key) and function to  handle the\r\n * event (the value).\r\n * Events' names are:\r\n * * __tap__: When  the element is  pressed and released in  less than\r\n 900 ms and without too much sliding.\r\n * * __doubletap__\r\n * * __dragmove__\r\n *\r\n * @param {boolean} capture - If `true` events are captured before they reach the children.\r\n *\r\n * @example\r\n *    DOM.on( [screen, button], function() {...} );\r\n *    DOM.on( body, null );   // Do nothing, but stop propagation.\r\n *    DOM.on( element, { tap: function() {...} } );\r\n */\r\n$.on = on;\r\n$.off = off;\r\n/**\r\n * Append all the `children` to `element`.\r\n * @param element\r\n * @param ...children\r\n */\r\n$.add = add;\r\n/**\r\n * Add the attribute `element` and the following functions to `obj`:\r\n * * __css__\r\n * * __addClass__\r\n * * __removeClass__\r\n * * __toggleClass__\r\n */\r\n$.wrap = wrap;\r\n/**\r\n * Remove all children of the `element`.\r\n * @param element {Element} - Element from which remove all the children.\r\n */\r\n$.clear = clear;\r\n\r\nfunction wrap( obj, element, nomethods ) {\r\n    Object.defineProperty( obj, 'element', {\r\n        value: element, writable: false, configurable: false, enumerable: true\r\n    });\r\n    if( nomethods ) return obj;\r\n\r\n    obj.on = on.bind( obj, element );\r\n    obj.css = css.bind( obj, element );\r\n    obj.add = add.bind( obj, element );\r\n    obj.att = att.bind( obj, element );\r\n    obj.addClass = addClass.bind( obj, element );\r\n    obj.hasClass = hasClass.bind( obj, element );\r\n    obj.removeClass = removeClass.bind( obj, element );\r\n    obj.toggleClass = toggleClass.bind( obj, element );\r\n    return obj;\r\n}\r\n\r\nfunction replace( newElem, oldElem ) {\r\n    newElem = $(newElem);\r\n    oldElem = $(oldElem);\r\n    oldElem.parentNode.replaceChild( newElem, oldElem );\r\n    return newElem;\r\n}\r\n\r\nfunction css( element, styles ) {\r\n    element = $(element);\r\n    var key, val;\r\n    for( key in styles ) {\r\n        val = styles[key];\r\n        element.style[key] = val;\r\n    }\r\n    return element;\r\n}\r\n\r\nfunction att( element, attribs, value ) {\r\n    element = $(element);\r\n    var key, val;\r\n    if (typeof attribs === 'string') {\r\n        key = attribs;\r\n        attribs = {};\r\n        attribs[key] = value;\r\n    }\r\n    for( key in attribs ) {\r\n        val = attribs[key];\r\n        element.setAttribute( key, val );\r\n    }\r\n    return element;\r\n}\r\n\r\nfunction removeAtt( element, attrib ) {\r\n    element = $(element);\r\n    element.removeAttribute( attrib );\r\n    return element;\r\n}\r\n\r\nfunction add( element ) {\r\n    element = $(element);\r\n    try {\r\n        var i, child;\r\n        for (i = 1 ; i < arguments.length ; i++) {\r\n            child = arguments[i];\r\n            if( typeof child === 'string' || typeof child === 'number' ) {\r\n                child = '' + child;\r\n                if( child.substr( 0, 6 ) == '<html>' ) {\r\n                    var html = child.substr( 6 );\r\n                    child = $.tag('span');\r\n                    child.innerHTML = html;\r\n                } else {\r\n                    child = document.createTextNode( child );\r\n                }\r\n            }\r\n            else if( typeof child.element === 'function' ) {\r\n                // Backward compatibility with Widgets.\r\n                child = child.element();\r\n            }\r\n            else if( typeof child.element !== 'undefined' ) {\r\n                child = child.element;\r\n            }\r\n            element.appendChild( child );\r\n        }\r\n        return element;\r\n    }\r\n    catch( ex ) {\r\n        console.error( \"[DOM.add] arguments=\", [].slice.call( arguments ) );\r\n        throw Error( \"[DOM.add] \" + ex );\r\n    }\r\n}\r\n\r\nfunction off( element ) {\r\n    if( Array.isArray( element ) ) {\r\n        element.forEach(function ( elem ) {\r\n            off( elem );\r\n        });\r\n        return element;\r\n    }\r\n\r\n    if( typeof element[SYMBOL] === 'undefined' ) return element;\r\n    var pe = element[SYMBOL].events;\r\n    if( typeof pe  === 'undefined' ) return element;\r\n    pe.off();\r\n    delete element[SYMBOL].events;\r\n}\r\n\r\nfunction on( element, slots ) {\r\n    // If only a function is passed, we consider this is a Tap event.\r\n    if( typeof slots === 'function' || slots === null ) slots = { tap: slots };\r\n\r\n    if( Array.isArray( element ) ) {\r\n        element.forEach(function ( elem ) {\r\n            on( elem, slots );\r\n        });\r\n        return element;\r\n    }\r\n\r\n    element = $(element);\r\n    if( typeof element[SYMBOL] === 'undefined' ) element[SYMBOL] = {};\r\n    if( typeof element[SYMBOL].events === 'undefined' ) {\r\n        element[SYMBOL].events = new PointerEvents( element );\r\n    }\r\n\r\n    var key, val, preview;\r\n    for( key in slots ) {\r\n        val = slots[key];\r\n        if (key.charAt(0) == '!') {\r\n            key = key.substr(1);\r\n            preview = true;\r\n        } else {\r\n            preview = false;\r\n        }\r\n        if (key == 'keydown' || key == 'keyup') {\r\n            element.addEventListener( key, val, preview );\r\n        } else {\r\n            element[SYMBOL].events.on( key, val, preview );\r\n        }\r\n    }\r\n\r\n    return element;\r\n}\r\n\r\nfunction tagNS( ns, name ) {\r\n    try {\r\n        var e = document.createElementNS( ns, name );\r\n        var i, arg, key, val;\r\n        for (i = 2 ; i < arguments.length ; i++) {\r\n            arg = arguments[i];\r\n            if( Array.isArray(arg) ) {\r\n                // Arrays are for children.\r\n                arg.forEach(function (child) {\r\n                    switch( typeof child ) {\r\n                    case 'string':\r\n                    case 'number':\r\n                    case 'boolean':\r\n                        child = '' + child;\r\n                        if( child.substr( 0, 6 ) == '<html>' ) {\r\n                            var html = child.substr( 6 );\r\n                            child = $.tag('span');\r\n                            child.innerHTML = html;\r\n                        } else {\r\n                            child = document.createTextNode( child );\r\n                        }\r\n                        break;\r\n                    }\r\n                    add( e, child );\r\n                });\r\n            } else {\r\n                switch( typeof arg ) {\r\n                case \"string\":\r\n                    arg.split( ' ' ).forEach(function ( item ) {\r\n                        if( item.length > 0 ) {\r\n                            addClass(e, item);\r\n                        }\r\n                    });\r\n                    break;\r\n                case \"object\":\r\n                    for( key in arg ) {\r\n                        val = arg[key];\r\n                        e.setAttribute( key, val );\r\n                    }\r\n                    break;\r\n                default:\r\n                    throw Error(\"[dom.tag] Error creating <\" + name + \">: Invalid argument #\" + i + \"!\");\r\n                }\r\n            }\r\n        }\r\n        return e;\r\n    }\r\n    catch (ex) {\r\n        console.error(\"[dom.tagNS] Error with `ns` = \", ns, \" and `name` = \", name);\r\n        console.error(ex);\r\n    }\r\n};\r\n\r\n\r\nfunction addClass(elem) {\r\n    var args = [].slice.call( arguments, 1 );\r\n    if( Array.isArray( elem ) ) {\r\n        // Loop on each element.\r\n        args.unshift( null );\r\n        elem.forEach(function ( child ) {\r\n            args[0] = child;\r\n            addClass.apply( undefined, args );\r\n        });\r\n        return elem;\r\n    }\r\n    elem = $( elem );\r\n    args.forEach(function (className) {\r\n        if (typeof className !== 'string') return;\r\n        className = className.trim();\r\n        if( className.length == 0 ) return;\r\n        try {\r\n            if( elem.classList )\r\n                elem.classList.add( className );\r\n        }\r\n        catch( ex ) {\r\n            console.error( \"[dom.addClass] Invalid class name: \", className );\r\n            console.error( ex );\r\n        }\r\n    });\r\n    return elem;\r\n}\r\n\r\n\r\nfunction hasClass( elem, className ) {\r\n    elem = $( elem );\r\n    if( !elem.classList ) return false;\r\n    return elem.classList.contains( className );\r\n}\r\n\r\n\r\nfunction removeClass(elem) {\r\n    var args = [].slice.call( arguments, 1 );\r\n    if( Array.isArray( elem ) ) {\r\n        // Loop on each element.\r\n        args.unshift( null );\r\n        elem.forEach(function ( child ) {\r\n            args[0] = child;\r\n            removeClass.apply( undefined, args );\r\n        });\r\n        return elem;\r\n    }\r\n    elem = $( elem );\r\n    args.forEach(function (className) {\r\n        if (typeof className !== 'string') return;\r\n        try {\r\n            if( elem.classList )\r\n                elem.classList.remove( className );\r\n        }\r\n        catch( ex ) {\r\n            console.error( \"[dom.removeClass] Invalid class name: \", className );\r\n            console.error( ex );\r\n        }\r\n    });\r\n    return elem;\r\n}\r\n\r\n\r\nfunction toggleClass(elem) {\r\n    var args = [].slice.call( arguments, 1 );\r\n    args.forEach(function( className ) {\r\n        if( hasClass( elem, className ) ) {\r\n            removeClass( elem, className );\r\n        } else {\r\n            addClass( elem, className );\r\n        }\r\n    });\r\n    return elem;\r\n}\r\n\r\n\r\nfunction clear( element ) {\r\n    // (!) On préfère retirer les éléments un par un du DOM plutôt que d'utiliser simplement\r\n    // this.html(\"\").\r\n    // En effet, le code simplifié a des conséquences inattendues dans IE9 et IE10 au moins.\r\n    // Le bug des markers qui disparaissaients sur les cartes de Trail-Passion 4 a été corrigé\r\n    // avec cette modification.\r\n    element = $(element);\r\n    var e = element;\r\n    while(e.firstChild){\r\n        e.removeChild(e.firstChild);\r\n    }\r\n    var args = [].slice.call( arguments );\r\n    if( args.length > 1 ) {\r\n        add.apply( this, args );\r\n    }\r\n    return element;\r\n}\r\n\r\nfunction get( element, query ) {\r\n    element = $(element);\r\n    if( typeof query === 'undefined' ) {\r\n        query = element;\r\n        element = window.document;\r\n    }\r\n    return element.querySelector( query );\r\n}\r\n\r\nfunction detach( element ) {\r\n    element = $(element);\r\n    var parent = element.parentElement;\r\n    if( !parent ) return parent;\r\n    parent.removeChild( element );\r\n    return parent;\r\n}\r\n\r\nfunction elem( target ) {\r\n    var args = [].slice.call( arguments );\r\n    args.shift();\r\n    if (args.length == 0) args = ['div'];\r\n    args.push('dom', 'custom');\r\n    var e;\r\n    if (typeof args[0].element !== 'undefined') {\r\n        e = args[0].element;\r\n        addClass( e, 'dom', 'custom' );\r\n    } else if (typeof args[0].appendChild === 'function') {\r\n        e = args[0];\r\n        addClass( e, 'dom', 'custom' );\r\n    } else {\r\n        e = $.tag.apply( $, args );\r\n    }\r\n    Object.defineProperty( target, 'element', {\r\n        value: e, writable: false, configurable: false, enumerable: true\r\n    });\r\n    return e;\r\n}\r\n\r\nfunction textOrHtml( element, content ) {\r\n    if( typeof content === 'undefined' ) content = '';\r\n    if (content === null) content = '';\r\n    if (typeof content !== 'string') content = JSON.stringify( content );\r\n    if (content.substr(0, 6) == '<html>') {\r\n        element.innerHTML = content.substr(6);\r\n    } else {\r\n        element.textContent = content;\r\n    }\r\n    return element;\r\n}\r\n\r\nfunction saveStyle( elements ) {\r\n    if( !Array.isArray( elements ) ) return saveStyle( Array.prototype.slice.call( arguments ) );\r\n    elements.forEach(function (elem) {\r\n        elem = $( elem );\r\n        if( typeof elem[SYMBOL] === 'undefined' ) elem[SYMBOL] = {};\r\n        if( !Array.isArray( elem[SYMBOL].style ) ) elem[SYMBOL].style = [];\r\n        elem[SYMBOL].style.push( JSON.stringify( elem.style ) );\r\n    });\r\n}\r\n\r\nfunction restoreStyle( elements ) {\r\n    if( !Array.isArray( elements ) ) return restoreStyle( Array.prototype.slice.call( arguments ) );\r\n    elements.forEach(function (elem) {\r\n        elem = $( elem );\r\n        if( typeof elem[SYMBOL] === 'undefined' || !Array.isArray( elem[SYMBOL].style ) ) throw Error(\r\n            \"[dom.restoreStyle] `saveStyle()` has never been used on this element!\");\r\n        if( elem[SYMBOL].style.length == 0 ) throw Error(\r\n            \"[dom.restoreStyle] more `restore` than `save`!\");\r\n        var styles = JSON.parse( elem[SYMBOL].style.pop() );\r\n        var k, v;\r\n        for( k in styles ) {\r\n            v = styles[k];\r\n            if( typeof v !== 'undefined' ) {\r\n                elem.style[k] = v;\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\n\r\n  \r\nmodule.exports._ = _;\n});"],"names":["require","module","exports","wrap","obj","element","nomethods","Object","defineProperty","value","writable","configurable","enumerable","on","bind","css","add","att","addClass","hasClass","removeClass","toggleClass","replace","newElem","oldElem","$","parentNode","replaceChild","styles","key","val","style","attribs","setAttribute","removeAtt","attrib","removeAttribute","i","child","arguments","length","substr","html","tag","innerHTML","document","createTextNode","appendChild","ex","console","error","slice","call","Error","off","Array","isArray","forEach","elem","SYMBOL","pe","events","slots","tap","PointerEvents","preview","charAt","addEventListener","tagNS","ns","name","arg","e","createElementNS","split","item","args","unshift","apply","undefined","className","trim","classList","contains","remove","clear","firstChild","removeChild","this","get","query","window","querySelector","detach","parent","parentElement","target","shift","push","textOrHtml","content","JSON","stringify","textContent","saveStyle","elements","prototype","restoreStyle","k","v","parse","pop","_","X","D","en","intl","all","dom","getElementById","Date","now","svgRoot","version","xmlns:svg","xmlns","xmlns:xlink","svg","div","txt"],"mappings":"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"},"dependencies":["mod/$","mod/polyfill.classList","mod/tfw.pointer-events"]}