{"intl":"var _=function(){var D={\"en\":{}},X=require(\"$\").intl;function _(){return X(D,arguments);}_.all=D;return _}();\n","src":"/** @module x-widget */require( 'x-widget', function(require, module, exports) { var _=function(){var D={\"en\":{}},X=require(\"$\").intl;function _(){return X(D,arguments);}_.all=D;return _}();\n    \"use strict\";\nvar $ = require(\"dom\");\nvar DB = require(\"tfw.data-binding\");\n\nvar widgets = {};\n// Used for `onWidgetCreation()`.\nvar slots = {};\n\n\nvar Widget = function(id, modName, args) {\n    if (typeof id === 'string') return Widget1.call( this, id, modName, args );\n    else return Widget2.call( this, id );\n};\n\nfunction Widget1(id, modName, args ) {\n    try {\n        var module = require( modName );\n        var wdg = new module( args );\n        var elem = typeof wdg.element === 'function' ? wdg.element() : wdg.element;\n        elem.setAttribute( 'id', id );\n        var dst = document.getElementById( id );\n        if (dst) {\n            // This widget does exist in the current DOM.\n            // We have to replace it.\n            dst.parentNode.replaceChild( elem, dst );\n        }\n        register( id, wdg );\n        return wdg;\n    }\n    catch (ex) {\n        console.error(\"[x-widget] Unable to create widget `\" + modName + \"`!\");\n        console.error(\"[x-widget] id = \", id, \", args = \", args);\n        throw Error(ex);\n    }\n};\n\n/**\n * @example\n var W = require(\"x-widget\");\n W({\n elem: \"div\",\n attr: {\"class\": \"black\"},\n prop: {\"$key\": \"menu\"},\n children: [\n \"This is the \",\n W({\n elem: \"b\",\n children: [\"menu\"]}),\n \"...\"]});\n */\nfunction Widget2(args) {\n    var id;\n    var elem = $.tag( args.elem );\n    if (args.attr) {\n        // Adding DOM element attributes.\n        $.att( elem, args.attr );\n        id = args.attr.id;\n    }\n\n    if (Array.isArray( args.children )) {\n        // Adding DOM element children.\n        args.children.forEach(function (child) {\n            $.add( elem, child );\n        });\n    }\n    // Converting into a widget.\n    var key, val;\n    var wdg = {};\n\n    if (args.prop) {\n        // Adding READ-ONLY properties to the widget.\n        for( key in args.prop ) {\n            val = args.prop[key];\n            Object.defineProperty( wdg, key, {\n                value: val, writable: false, configurable: false, enumerable: true\n            });\n        }\n    }\n    // Assigning the element to the widget.\n    Object.defineProperty( wdg, 'element', {\n        value: elem, writable: false, configurable: false, enumerable: true\n    });\n\n    if( typeof id !== 'undefined' ) {\n        // Registering the widget only if it as got an id.\n        register( id, wdg );\n    }\n    return wdg;\n}\n\nWidget.template = function( attribs ) {\n    var key, val, id, name = '', args = {};\n    for( key in attribs ) {\n        val = attribs[key];\n        if( key == 'name' ) {\n            name = val;\n        }\n        else if( key == 'id' ) {\n            id = val;\n        }\n        else if( key.charAt(0)=='$' ) {\n            args[key.substr( 1 )] = val;\n        }\n    }\n    var module = require( name );\n    var wdg = new module( args );\n    if( id ) {\n        register( id, wdg );\n    }\n\n    return typeof wdg.element === 'function' ? wdg.element() : (wdg.element || wdg);\n};\n\nfunction register( id, wdg ) {\n    widgets[id] = wdg;\n    var mySlots = slots[id];\n    if( typeof mySlots !== 'undefined' ) {\n        window.setTimeout(function() {\n            mySlots.forEach(function (slot) {\n                slot( wdg );\n            });\n            delete slots[id];\n        });\n    }\n    return typeof wdg.element === 'function' ? wdg.element : (wdg.element || wdg);\n};\n\nWidget.getById = function( id ) {\n    if( !widgets[id] ) throw Error( \"[x-widget.getById()] ID not found: \" + id + \"!\" );\n    return widgets[id];\n};\n\nWidget.onWidgetCreation = function( id, slot ) {\n    if( typeof widgets[id] === 'undefined' ) {\n        if( typeof slots[id] === 'undefined' ) slots[id] = [slot];\n        else slots[id].push( slot );\n    } else {\n        // Asynchronous call to the slot\n        window.setTimeout(\n            function() {\n                slot( widgets[id] );\n            }\n        );\n    }\n};\n\n/**\n * @example\n * var W = require(\"x-widget\");\n * W.bind('wdg.layout-stack0',{\"value\":{\"B\":[[\"btnNewTask\",\"action\"],[\"btnCancel\",\"action\"]]}});\n */\nWidget.bind = function( id, attribs ) {\n    // Destination object: the one on the attributes of which we want to bind.\n    var dstObj = widgets[id];\n    // Destination attribute name.\n    var dstAtt;\n    // Temporary variables to hold source object and attributes.\n    var srcObj, srcAtt;\n    // @example\n    // [\"btnNewTask\",\"action\",\"btnCancel\",\"action\"]\n    var bindings;\n    var slots;\n    // Index used to parse multiple bindings.\n    var idx;\n    for( dstAtt in attribs ) {\n        bindings = attribs[dstAtt].B;\n        if (Array.isArray( bindings )) {\n            // `binding` is an array of arrays.\n            // Subarrays have 2 or 3 elements.\n            // * ID if the source object\n            // * attribute to bind on\n            // * [optional] value  to use as  a constant. This  is the\n            // * case where  we just want  to set a constant  value as\n            // * soon as the source's attribute has changed.\n            bindings.forEach(function (binding) {\n                srcObj = widgets[binding[0]];\n                if( typeof srcObj === 'undefined' ) {\n                    console.error( \"[x-widget:bind] Trying to bind attribute \\\"\" + dstAtt\n                                   + \"\\\" of widget \\\"\" + id + \"\\\" to the unexisting widget \\\"\"\n                                   + binding[0] + \"\\\"!\");\n                    return;\n                }\n                srcAtt = binding[1];\n                if (binding.length == 2) {\n                    DB.bind( srcObj, srcAtt, dstObj, dstAtt );\n                } else {\n                    var value = binding[2];\n                    DB.bind( srcObj, srcAtt, function() {\n                        dstObj[dstAtt] = value;\n                    });\n                }\n            });\n        }\n\n        slots = attribs[dstAtt].S;\n        if (Array.isArray( slots )) {\n            // Each item is the name of a function to call when the value of this attribute changes.\n            // If the item is a `string`, the function is from the global `APP` object.\n            // Otherwise, the item must be an array with two children:\n            // the first one  is the module's name and  the second one\n            // id the name of the function.\n            // The slots are called with two arguments:\n            //  * the value and\n            //  * the object the attribute belongs.\n            slots.forEach(function (slot) {\n                var mod = APP;\n                var fct = slot;\n                if (Array.isArray( slot )) {\n                    mod = require(slot[0]);\n                    fct = slot[1];\n                }\n                fct = mod[fct];\n                if (typeof fct !== 'function') {\n                    console.error(\"[x-widget:bind] slot not found: \", slot);\n                } else {\n                    DB.bind( dstObj, dstAtt, fct );\n                }\n            });\n\n        }\n    }\n};\n\nmodule.exports = Widget;\n\n\n  \nmodule.exports._ = _;\n/**\n * @module x-widget\n * @see module:$\n * @see module:dom\n * @see module:tfw.data-binding\n\n */\n});","zip":"require(\"x-widget\",function(e,t,n){function r(t,n,r){try{var i=e(n),f=new i(r),a=\"function\"==typeof f.element?f.element():f.element;a.setAttribute(\"id\",t);var u=document.getElementById(t);return u&&u.parentNode.replaceChild(a,u),o(t,f),f}catch(e){throw console.error(\"[x-widget] Unable to create widget `\"+n+\"`!\"),console.error(\"[x-widget] id = \",t,\", args = \",r),Error(e)}}function i(e){var t,n=a.tag(e.elem);e.attr&&(a.att(n,e.attr),t=e.attr.id),Array.isArray(e.children)&&e.children.forEach(function(e){a.add(n,e)});var r,i,f={};if(e.prop)for(r in e.prop)i=e.prop[r],Object.defineProperty(f,r,{value:i,writable:!1,configurable:!1,enumerable:!0});return Object.defineProperty(f,\"element\",{value:n,writable:!1,configurable:!1,enumerable:!0}),\"undefined\"!=typeof t&&o(t,f),f}function o(e,t){d[e]=t;var n=c[e];return\"undefined\"!=typeof n&&window.setTimeout(function(){n.forEach(function(e){e(t)}),delete c[e]}),\"function\"==typeof t.element?t.element:t.element||t}var f=function(){function t(){return r(n,arguments)}var n={en:{}},r=e(\"$\").intl;return t.all=n,t}(),a=e(\"dom\"),u=e(\"tfw.data-binding\"),d={},c={},l=function(e,t,n){return\"string\"==typeof e?r.call(this,e,t,n):i.call(this,e)};l.template=function(t){var n,r,i,f=\"\",a={};for(n in t)r=t[n],\"name\"==n?f=r:\"id\"==n?i=r:\"$\"==n.charAt(0)&&(a[n.substr(1)]=r);var u=e(f),d=new u(a);return i&&o(i,d),\"function\"==typeof d.element?d.element():d.element||d},l.getById=function(e){if(!d[e])throw Error(\"[x-widget.getById()] ID not found: \"+e+\"!\");return d[e]},l.onWidgetCreation=function(e,t){\"undefined\"==typeof d[e]?\"undefined\"==typeof c[e]?c[e]=[t]:c[e].push(t):window.setTimeout(function(){t(d[e])})},l.bind=function(t,n){var r,i,o,f,a,c=d[t];for(r in n)f=n[r].B,Array.isArray(f)&&f.forEach(function(e){if(i=d[e[0]],\"undefined\"==typeof i)return void console.error('[x-widget:bind] Trying to bind attribute \"'+r+'\" of widget \"'+t+'\" to the unexisting widget \"'+e[0]+'\"!');if(o=e[1],2==e.length)u.bind(i,o,c,r);else{var n=e[2];u.bind(i,o,function(){c[r]=n})}}),a=n[r].S,Array.isArray(a)&&a.forEach(function(t){var n=APP,i=t;Array.isArray(t)&&(n=e(t[0]),i=t[1]),i=n[i],\"function\"!=typeof i?console.error(\"[x-widget:bind] slot not found: \",t):u.bind(c,r,i)})},t.exports=l,t.exports._=f});\n//# sourceMappingURL=x-widget.js.map","map":{"version":3,"file":"x-widget.js.map","sources":["x-widget.js"],"sourcesContent":["/** @module x-widget */require( 'x-widget', function(require, module, exports) { var _=function(){var D={\"en\":{}},X=require(\"$\").intl;function _(){return X(D,arguments);}_.all=D;return _}();\n    \"use strict\";\nvar $ = require(\"dom\");\nvar DB = require(\"tfw.data-binding\");\n\nvar widgets = {};\n// Used for `onWidgetCreation()`.\nvar slots = {};\n\n\nvar Widget = function(id, modName, args) {\n    if (typeof id === 'string') return Widget1.call( this, id, modName, args );\n    else return Widget2.call( this, id );\n};\n\nfunction Widget1(id, modName, args ) {\n    try {\n        var module = require( modName );\n        var wdg = new module( args );\n        var elem = typeof wdg.element === 'function' ? wdg.element() : wdg.element;\n        elem.setAttribute( 'id', id );\n        var dst = document.getElementById( id );\n        if (dst) {\n            // This widget does exist in the current DOM.\n            // We have to replace it.\n            dst.parentNode.replaceChild( elem, dst );\n        }\n        register( id, wdg );\n        return wdg;\n    }\n    catch (ex) {\n        console.error(\"[x-widget] Unable to create widget `\" + modName + \"`!\");\n        console.error(\"[x-widget] id = \", id, \", args = \", args);\n        throw Error(ex);\n    }\n};\n\n/**\n * @example\n var W = require(\"x-widget\");\n W({\n elem: \"div\",\n attr: {\"class\": \"black\"},\n prop: {\"$key\": \"menu\"},\n children: [\n \"This is the \",\n W({\n elem: \"b\",\n children: [\"menu\"]}),\n \"...\"]});\n */\nfunction Widget2(args) {\n    var id;\n    var elem = $.tag( args.elem );\n    if (args.attr) {\n        // Adding DOM element attributes.\n        $.att( elem, args.attr );\n        id = args.attr.id;\n    }\n\n    if (Array.isArray( args.children )) {\n        // Adding DOM element children.\n        args.children.forEach(function (child) {\n            $.add( elem, child );\n        });\n    }\n    // Converting into a widget.\n    var key, val;\n    var wdg = {};\n\n    if (args.prop) {\n        // Adding READ-ONLY properties to the widget.\n        for( key in args.prop ) {\n            val = args.prop[key];\n            Object.defineProperty( wdg, key, {\n                value: val, writable: false, configurable: false, enumerable: true\n            });\n        }\n    }\n    // Assigning the element to the widget.\n    Object.defineProperty( wdg, 'element', {\n        value: elem, writable: false, configurable: false, enumerable: true\n    });\n\n    if( typeof id !== 'undefined' ) {\n        // Registering the widget only if it as got an id.\n        register( id, wdg );\n    }\n    return wdg;\n}\n\nWidget.template = function( attribs ) {\n    var key, val, id, name = '', args = {};\n    for( key in attribs ) {\n        val = attribs[key];\n        if( key == 'name' ) {\n            name = val;\n        }\n        else if( key == 'id' ) {\n            id = val;\n        }\n        else if( key.charAt(0)=='$' ) {\n            args[key.substr( 1 )] = val;\n        }\n    }\n    var module = require( name );\n    var wdg = new module( args );\n    if( id ) {\n        register( id, wdg );\n    }\n\n    return typeof wdg.element === 'function' ? wdg.element() : (wdg.element || wdg);\n};\n\nfunction register( id, wdg ) {\n    widgets[id] = wdg;\n    var mySlots = slots[id];\n    if( typeof mySlots !== 'undefined' ) {\n        window.setTimeout(function() {\n            mySlots.forEach(function (slot) {\n                slot( wdg );\n            });\n            delete slots[id];\n        });\n    }\n    return typeof wdg.element === 'function' ? wdg.element : (wdg.element || wdg);\n};\n\nWidget.getById = function( id ) {\n    if( !widgets[id] ) throw Error( \"[x-widget.getById()] ID not found: \" + id + \"!\" );\n    return widgets[id];\n};\n\nWidget.onWidgetCreation = function( id, slot ) {\n    if( typeof widgets[id] === 'undefined' ) {\n        if( typeof slots[id] === 'undefined' ) slots[id] = [slot];\n        else slots[id].push( slot );\n    } else {\n        // Asynchronous call to the slot\n        window.setTimeout(\n            function() {\n                slot( widgets[id] );\n            }\n        );\n    }\n};\n\n/**\n * @example\n * var W = require(\"x-widget\");\n * W.bind('wdg.layout-stack0',{\"value\":{\"B\":[[\"btnNewTask\",\"action\"],[\"btnCancel\",\"action\"]]}});\n */\nWidget.bind = function( id, attribs ) {\n    // Destination object: the one on the attributes of which we want to bind.\n    var dstObj = widgets[id];\n    // Destination attribute name.\n    var dstAtt;\n    // Temporary variables to hold source object and attributes.\n    var srcObj, srcAtt;\n    // @example\n    // [\"btnNewTask\",\"action\",\"btnCancel\",\"action\"]\n    var bindings;\n    var slots;\n    // Index used to parse multiple bindings.\n    var idx;\n    for( dstAtt in attribs ) {\n        bindings = attribs[dstAtt].B;\n        if (Array.isArray( bindings )) {\n            // `binding` is an array of arrays.\n            // Subarrays have 2 or 3 elements.\n            // * ID if the source object\n            // * attribute to bind on\n            // * [optional] value  to use as  a constant. This  is the\n            // * case where  we just want  to set a constant  value as\n            // * soon as the source's attribute has changed.\n            bindings.forEach(function (binding) {\n                srcObj = widgets[binding[0]];\n                if( typeof srcObj === 'undefined' ) {\n                    console.error( \"[x-widget:bind] Trying to bind attribute \\\"\" + dstAtt\n                                   + \"\\\" of widget \\\"\" + id + \"\\\" to the unexisting widget \\\"\"\n                                   + binding[0] + \"\\\"!\");\n                    return;\n                }\n                srcAtt = binding[1];\n                if (binding.length == 2) {\n                    DB.bind( srcObj, srcAtt, dstObj, dstAtt );\n                } else {\n                    var value = binding[2];\n                    DB.bind( srcObj, srcAtt, function() {\n                        dstObj[dstAtt] = value;\n                    });\n                }\n            });\n        }\n\n        slots = attribs[dstAtt].S;\n        if (Array.isArray( slots )) {\n            // Each item is the name of a function to call when the value of this attribute changes.\n            // If the item is a `string`, the function is from the global `APP` object.\n            // Otherwise, the item must be an array with two children:\n            // the first one  is the module's name and  the second one\n            // id the name of the function.\n            // The slots are called with two arguments:\n            //  * the value and\n            //  * the object the attribute belongs.\n            slots.forEach(function (slot) {\n                var mod = APP;\n                var fct = slot;\n                if (Array.isArray( slot )) {\n                    mod = require(slot[0]);\n                    fct = slot[1];\n                }\n                fct = mod[fct];\n                if (typeof fct !== 'function') {\n                    console.error(\"[x-widget:bind] slot not found: \", slot);\n                } else {\n                    DB.bind( dstObj, dstAtt, fct );\n                }\n            });\n\n        }\n    }\n};\n\nmodule.exports = Widget;\n\n\n  \nmodule.exports._ = _;\n});"],"names":["require","module","exports","Widget1","id","modName","args","wdg","elem","element","setAttribute","dst","document","getElementById","parentNode","replaceChild","register","ex","console","error","Error","Widget2","$","tag","attr","att","Array","isArray","children","forEach","child","add","key","val","prop","Object","defineProperty","value","writable","configurable","enumerable","widgets","mySlots","slots","window","setTimeout","slot","_","X","D","arguments","en","intl","all","DB","Widget","call","this","template","attribs","name","charAt","substr","getById","onWidgetCreation","push","bind","dstAtt","srcObj","srcAtt","bindings","dstObj","B","binding","length","S","mod","APP","fct"],"mappings":"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"},"dependencies":["mod/$","mod/dom","mod/tfw.data-binding"]}